{
	"scope": "source.js",
	"completions": [
		[
			"getIntersectionList( rect: SVGRect, referenceElement: SVGElement ): NodeList\tSVGSVGElement",
			"getIntersectionList(${1:rect: SVGRect}, ${2:referenceElement: SVGElement})"
		],
		[
			"getEnclosureList( rect: SVGRect, referenceElement: SVGElement ): NodeList\tSVGSVGElement",
			"getEnclosureList(${1:rect: SVGRect}, ${2:referenceElement: SVGElement})"
		],
		[
			"suspendRedraw( maxWaitMilliseconds: unsigned long ): unsigned long\tSVGSVGElement",
			"suspendRedraw(${1:maxWaitMilliseconds: unsigned long})"
		],
		[
			"checkIntersection( element: SVGElement, rect: SVGRect ): boolean\tSVGSVGElement",
			"checkIntersection(${1:element: SVGElement}, ${2:rect: SVGRect})"
		],
		[
			"createSVGTransformFromMatrix( matrix: SVGMatrix ): SVGTransform\tSVGSVGElement",
			"createSVGTransformFromMatrix(${1:matrix: SVGMatrix})"
		],
		[
			"checkEnclosure( element: SVGElement, rect: SVGRect ): boolean\tSVGSVGElement",
			"checkEnclosure(${1:element: SVGElement}, ${2:rect: SVGRect})"
		],
		[
			"unsuspendRedraw( suspendHandleID: unsigned long ): void\tSVGSVGElement",
			"unsuspendRedraw(${1:suspendHandleID: unsigned long})"
		],
		[
			"getTransformToElement( element: SVGElement ): SVGMatrix\tSVGSVGElement",
			"getTransformToElement(${1:element: SVGElement})"
		],
		[
			"getPresentationAttribute( name: DOMString ): CSSValue\tSVGSVGElement",
			"getPresentationAttribute(${1:name: DOMString})"
		],
		[
			"preserveAspectRatio: SVGAnimatedPreserveAspectRatio\tSVGSVGElement",
			"preserveAspectRatio"
		],
		[
			"getElementById( elementId: DOMString ): Element\tSVGSVGElement",
			"getElementById(${1:elementId: DOMString})"
		],
		[
			"externalResourcesRequired: SVGAnimatedBoolean\tSVGSVGElement",
			"externalResourcesRequired"
		],
		[
			"hasExtension( extension: DOMString ): boolean\tSVGSVGElement",
			"hasExtension(${1:extension: DOMString})"
		],
		[
			"SVG_ZOOMANDPAN_MAGNIFY: const unsigned short\tSVGSVGElement",
			"SVG_ZOOMANDPAN_MAGNIFY"
		],
		[
			"SVG_ZOOMANDPAN_UNKNOWN: const unsigned short\tSVGSVGElement",
			"SVG_ZOOMANDPAN_UNKNOWN"
		],
		[
			"SVG_ZOOMANDPAN_DISABLE: const unsigned short\tSVGSVGElement",
			"SVG_ZOOMANDPAN_DISABLE"
		],
		[
			"setCurrentTime( seconds: float ): void\tSVGSVGElement",
			"setCurrentTime(${1:seconds: float})"
		],
		[
			"farthestViewportElement: SVGElement\tSVGSVGElement",
			"farthestViewportElement"
		],
		[
			"nearestViewportElement: SVGElement\tSVGSVGElement",
			"nearestViewportElement"
		],
		[
			"createSVGTransform(): SVGTransform\tSVGSVGElement",
			"createSVGTransform()"
		],
		[
			"requiredExtensions: SVGStringList\tSVGSVGElement",
			"requiredExtensions"
		],
		[
			"requiredFeatures: SVGStringList\tSVGSVGElement",
			"requiredFeatures"
		],
		[
			"screenPixelToMillimeterX: float\tSVGSVGElement",
			"screenPixelToMillimeterX"
		],
		[
			"screenPixelToMillimeterY: float\tSVGSVGElement",
			"screenPixelToMillimeterY"
		],
		[
			"systemLanguage: SVGStringList\tSVGSVGElement",
			"systemLanguage"
		],
		[
			"pixelUnitToMillimeterY: float\tSVGSVGElement",
			"pixelUnitToMillimeterY"
		],
		[
			"pixelUnitToMillimeterX: float\tSVGSVGElement",
			"pixelUnitToMillimeterX"
		],
		[
			"contentScriptType: DOMString\tSVGSVGElement",
			"contentScriptType"
		],
		[
			"className: SVGAnimatedString\tSVGSVGElement",
			"className"
		],
		[
			"createSVGLength(): SVGLength\tSVGSVGElement",
			"createSVGLength()"
		],
		[
			"createSVGMatrix(): SVGMatrix\tSVGSVGElement",
			"createSVGMatrix()"
		],
		[
			"createSVGNumber(): SVGNumber\tSVGSVGElement",
			"createSVGNumber()"
		],
		[
			"contentStyleType: DOMString\tSVGSVGElement",
			"contentStyleType"
		],
		[
			"animationsPaused(): boolean\tSVGSVGElement",
			"animationsPaused()"
		],
		[
			"createSVGAngle(): SVGAngle\tSVGSVGElement",
			"createSVGAngle()"
		],
		[
			"currentTranslate: SVGPoint\tSVGSVGElement",
			"currentTranslate"
		],
		[
			"style: CSSStyleDeclaration\tSVGSVGElement",
			"style"
		],
		[
			"unsuspendRedrawAll(): void\tSVGSVGElement",
			"unsuspendRedrawAll()"
		],
		[
			"createSVGPoint(): SVGPoint\tSVGSVGElement",
			"createSVGPoint()"
		],
		[
			"zoomAndPan: unsigned short\tSVGSVGElement",
			"zoomAndPan"
		],
		[
			"unpauseAnimations(): void\tSVGSVGElement",
			"unpauseAnimations()"
		],
		[
			"height: SVGAnimatedLength\tSVGSVGElement",
			"height"
		],
		[
			"getScreenCTM(): SVGMatrix\tSVGSVGElement",
			"getScreenCTM()"
		],
		[
			"createSVGRect(): SVGRect\tSVGSVGElement",
			"createSVGRect()"
		],
		[
			"viewBox: SVGAnimatedRect\tSVGSVGElement",
			"viewBox"
		],
		[
			"currentView: SVGViewSpec\tSVGSVGElement",
			"currentView"
		],
		[
			"width: SVGAnimatedLength\tSVGSVGElement",
			"width"
		],
		[
			"getCurrentTime(): float\tSVGSVGElement",
			"getCurrentTime()"
		],
		[
			"pauseAnimations(): void\tSVGSVGElement",
			"pauseAnimations()"
		],
		[
			"useCurrentView: boolean\tSVGSVGElement",
			"useCurrentView"
		],
		[
			"y: SVGAnimatedLength\tSVGSVGElement",
			"y"
		],
		[
			"x: SVGAnimatedLength\tSVGSVGElement",
			"x"
		],
		[
			"getCTM(): SVGMatrix\tSVGSVGElement",
			"getCTM()"
		],
		[
			"forceRedraw(): void\tSVGSVGElement",
			"forceRedraw()"
		],
		[
			"deselectAll(): void\tSVGSVGElement",
			"deselectAll()"
		],
		[
			"xmlspace: DOMString\tSVGSVGElement",
			"xmlspace"
		],
		[
			"currentScale: float\tSVGSVGElement",
			"currentScale"
		],
		[
			"getBBox(): SVGRect\tSVGSVGElement",
			"getBBox()"
		],
		[
			"xmllang: DOMString\tSVGSVGElement",
			"xmllang"
		],
		[
			"viewport: SVGRect\tSVGSVGElement",
			"viewport"
		]
	]
}