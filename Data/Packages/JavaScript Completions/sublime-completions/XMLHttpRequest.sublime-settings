{
  "scope": "source.js",
  "completions": [
    [
      "open(method, url, async, user, password)\tXMLHttpRequest",
      "open(${1:method}, ${2:url}, ${3:async}, ${4:user}, ${5:password})"
    ],
    [
      "setRequestHeader(header, value)\tXMLHttpRequest",
      "setRequestHeader(${1:header}, ${2:value})"
    ],
    [
      "overrideMimeType(mimetype)\tXMLHttpRequest",
      "overrideMimeType(${1:mimetype})"
    ],
    [
      "getResponseHeader(header)\tXMLHttpRequest",
      "getResponseHeader(${1:header})"
    ],
    [
      "getAllResponseHeaders()\tXMLHttpRequest",
      "getAllResponseHeaders()"
    ],
    [
      "new XMLHttpRequest()\tXMLHttpRequest",
      "new XMLHttpRequest()"
    ],
    [
      "XMLHttpRequest()\tXMLHttpRequest",
      "XMLHttpRequest()"
    ],
    [
      "onreadystatechange\tXMLHttpRequest",
      "onreadystatechange"
    ],
    [
      "withCredentials\tXMLHttpRequest",
      "withCredentials"
    ],
    [
      "send(data)\tXMLHttpRequest",
      "send(${1:data})"
    ],
    [
      "responseType\tXMLHttpRequest",
      "responseType"
    ],
    [
      "responseText\tXMLHttpRequest",
      "responseText"
    ],
    [
      "responseXML\tXMLHttpRequest",
      "responseXML"
    ],
    [
      "readyState\tXMLHttpRequest",
      "readyState"
    ],
    [
      "statusText\tXMLHttpRequest",
      "statusText"
    ],
    [
      "ontimeout\tXMLHttpRequest",
      "ontimeout"
    ],
    [
      "response\tXMLHttpRequest",
      "response"
    ],
    [
      "timeout\tXMLHttpRequest",
      "timeout"
    ],
    [
      "abort()\tXMLHttpRequest",
      "abort()"
    ],
    [
      "upload\tXMLHttpRequest",
      "upload"
    ],
    [
      "status\tXMLHttpRequest",
      "status"
    ]
  ]
}
