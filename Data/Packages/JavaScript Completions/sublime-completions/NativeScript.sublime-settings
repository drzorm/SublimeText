{
	"scope": "source.js",
	"completions": [
		[
			"new PropertyMetadata( defaultValue: any, options?: number, onChanged?: PropertyChangedCallback, onValidateValue?: PropertyValidationCallback, equalityComparer?: PropertyEqualityComparer ): PropertyMetadata\tNativeScript - PropertyMetadata",
			"new PropertyMetadata(${1:defaultValue: any}, ${2:options?: number}, ${3:onChanged?: PropertyChangedCallback}, ${4:onValidateValue?: PropertyValidationCallback}, ${5:equalityComparer?: PropertyEqualityComparer})"
		],
		[
			"new PropertyMetadata( defaultValue: any, options?: number, onChanged?: PropertyChangedCallback, onValidateValue?: PropertyValidationCallback, onSetNativeValue?: PropertyChangedCallback ): PropertyMetadata\tNativeScript - PropertyMetadata",
			"new PropertyMetadata(${1:defaultValue: any}, ${2:options?: number}, ${3:onChanged?: PropertyChangedCallback}, ${4:onValidateValue?: PropertyValidationCallback}, ${5:onSetNativeValue?: PropertyChangedCallback})"
		],
		[
			"PropertyMetadata( defaultValue: any, options?: number, onChanged?: PropertyChangedCallback, onValidateValue?: PropertyValidationCallback, equalityComparer?: PropertyEqualityComparer ): PropertyMetadata\tNativeScript - PropertyMetadata",
			"PropertyMetadata(${1:defaultValue: any}, ${2:options?: number}, ${3:onChanged?: PropertyChangedCallback}, ${4:onValidateValue?: PropertyValidationCallback}, ${5:equalityComparer?: PropertyEqualityComparer})"
		],
		[
			"PropertyMetadata( defaultValue: any, options?: number, onChanged?: PropertyChangedCallback, onValidateValue?: PropertyValidationCallback, onSetNativeValue?: PropertyChangedCallback ): PropertyMetadata\tNativeScript - PropertyMetadata",
			"PropertyMetadata(${1:defaultValue: any}, ${2:options?: number}, ${3:onChanged?: PropertyChangedCallback}, ${4:onValidateValue?: PropertyValidationCallback}, ${5:onSetNativeValue?: PropertyChangedCallback})"
		],
		[
			"new Background( color: Color, image: ImageSource, repeat: string, position: string, size: string, borderWidth: number, borderColor: Color, borderRadius: number, clipPath: string ): Background\tNativeScript - Background",
			"new Background(${1:color: Color}, ${2:image: ImageSource}, ${3:repeat: string}, ${4:position: string}, ${5:size: string}, ${6:borderWidth: number}, ${7:borderColor: Color}, ${8:borderRadius: number}, ${9:clipPath: string})"
		],
		[
			"Background( color: Color, image: ImageSource, repeat: string, position: string, size: string, borderWidth: number, borderColor: Color, borderRadius: number, clipPath: string ): Background\tNativeScript - Background",
			"Background(${1:color: Color}, ${2:image: ImageSource}, ${3:repeat: string}, ${4:position: string}, ${5:size: string}, ${6:borderWidth: number}, ${7:borderColor: Color}, ${8:borderRadius: number}, ${9:clipPath: string})"
		],
		[
			"onRequestPermissionsResult( activity: any, requestCode: number, permissions: Array<String>, grantResults: Array<number>, superFunc: Function ): void\tNativeScript - AndroidActivityCallbacks",
			"onRequestPermissionsResult(${1:activity: any}, ${2:requestCode: number}, ${3:permissions: Array<String>}, ${4:grantResults: Array<number>}, ${5:superFunc: Function})"
		],
		[
			"initProgressEvent( typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, lengthComputableArg: boolean, loadedArg: number, totalArg: number ): void\tNativeScript - ProgressEvent",
			"initProgressEvent(${1:typeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean}, ${4:lengthComputableArg: boolean}, ${5:loadedArg: number}, ${6:totalArg: number})"
		],
		[
			"initProgressEvent( typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, lengthComputableArg: boolean, loadedArg: number, totalArg: number ): void\tNativeScript - ProgressEvent",
			"initProgressEvent(${1:typeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean}, ${4:lengthComputableArg: boolean}, ${5:loadedArg: number}, ${6:totalArg: number})"
		],
		[
			"setPropertyValue( instance: View, instanceModuleExports: Object, pageExports: Object, propertyName: string, propertyValue: any ): void\tNativeScript - Module ui/builder/component-builder",
			"setPropertyValue(${1:instance: View}, ${2:instanceModuleExports: Object}, ${3:pageExports: Object}, ${4:propertyName: string}, ${5:propertyValue: any})"
		],
		[
			"_setAndroidFragmentTransitions( navigationTransition: NavigationTransition, currentFragment: any, newFragment: any, fragmentTransaction: any ): void\tNativeScript - Module ui/transition",
			"_setAndroidFragmentTransitions(${1:navigationTransition: NavigationTransition}, ${2:currentFragment: any}, ${3:newFragment: any}, ${4:fragmentTransaction: any})"
		],
		[
			"new StylePropertyChangedHandler( applyCallback: function, resetCallback: function, getNativeValue?: function ): StylePropertyChangedHandler\tNativeScript - StylePropertyChangedHandler",
			"new StylePropertyChangedHandler(${1:applyCallback: function}, ${2:resetCallback: function}, ${3:getNativeValue?: function})"
		],
		[
			"_createIOSAnimatedTransitioning( navigationTransition: NavigationTransition, nativeCurve: any, operation: number, fromVC: any, toVC: any ): any\tNativeScript - Module ui/transition",
			"_createIOSAnimatedTransitioning(${1:navigationTransition: NavigationTransition}, ${2:nativeCurve: any}, ${3:operation: number}, ${4:fromVC: any}, ${5:toVC: any})"
		],
		[
			"new DateConstructor( year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number ): DateConstructor\tNativeScript - DateConstructor",
			"new DateConstructor(${1:year: number}, ${2:month: number}, ${3:date?: number}, ${4:hours?: number}, ${5:minutes?: number}, ${6:seconds?: number}, ${7:ms?: number})"
		],
		[
			"new DateConstructor( year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number ): DateConstructor\tNativeScript - DateConstructor",
			"new DateConstructor(${1:year: number}, ${2:month: number}, ${3:date?: number}, ${4:hours?: number}, ${5:minutes?: number}, ${6:seconds?: number}, ${7:ms?: number})"
		],
		[
			"StylePropertyChangedHandler( applyCallback: function, resetCallback: function, getNativeValue?: function ): StylePropertyChangedHandler\tNativeScript - StylePropertyChangedHandler",
			"StylePropertyChangedHandler(${1:applyCallback: function}, ${2:resetCallback: function}, ${3:getNativeValue?: function})"
		],
		[
			"DateConstructor( year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number ): DateConstructor\tNativeScript - DateConstructor",
			"DateConstructor(${1:year: number}, ${2:month: number}, ${3:date?: number}, ${4:hours?: number}, ${5:minutes?: number}, ${6:seconds?: number}, ${7:ms?: number})"
		],
		[
			"DateConstructor( year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number ): DateConstructor\tNativeScript - DateConstructor",
			"DateConstructor(${1:year: number}, ${2:month: number}, ${3:date?: number}, ${4:hours?: number}, ${5:minutes?: number}, ${6:seconds?: number}, ${7:ms?: number})"
		],
		[
			"initErrorEvent( typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, messageArg: string, filenameArg: string, linenoArg: number ): void\tNativeScript - ErrorEvent",
			"initErrorEvent(${1:typeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean}, ${4:messageArg: string}, ${5:filenameArg: string}, ${6:linenoArg: number})"
		],
		[
			"initErrorEvent( typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, messageArg: string, filenameArg: string, linenoArg: number ): void\tNativeScript - ErrorEvent",
			"initErrorEvent(${1:typeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean}, ${4:messageArg: string}, ${5:filenameArg: string}, ${6:linenoArg: number})"
		],
		[
			"new Uint8ClampedArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"new Uint8ClampedArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Uint8ClampedArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"new Uint8ClampedArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"getComponentModule( elementName: string, namespace: string, attributes: Object, exports: Object ): ComponentModule\tNativeScript - Module ui/builder/component-builder",
			"getComponentModule(${1:elementName: string}, ${2:namespace: string}, ${3:attributes: Object}, ${4:exports: Object})"
		],
		[
			"Uint8ClampedArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"Uint8ClampedArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Uint8ClampedArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"Uint8ClampedArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"findFileMatch( path: string, ext: string, candidates: Array<string>, context: PlatformContext ): string\tNativeScript - Module file-system/file-name-resolver",
			"findFileMatch(${1:path: string}, ${2:ext: string}, ${3:candidates: Array<string>}, ${4:context: PlatformContext})"
		],
		[
			"removeWeakEventListener( source: Observable, eventName: string, handler: function, target: any ): voidvoid\tNativeScript - Module ui/core/weak-event-listener",
			"removeWeakEventListener(${1:source: Observable}, ${2:eventName: string}, ${3:handler: function}, ${4:target: any})"
		],
		[
			"UTC( year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number ): number\tNativeScript - DateConstructor",
			"UTC(${1:year: number}, ${2:month: number}, ${3:date?: number}, ${4:hours?: number}, ${5:minutes?: number}, ${6:seconds?: number}, ${7:ms?: number})"
		],
		[
			"UTC( year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number ): number\tNativeScript - DateConstructor",
			"UTC(${1:year: number}, ${2:month: number}, ${3:date?: number}, ${4:hours?: number}, ${5:minutes?: number}, ${6:seconds?: number}, ${7:ms?: number})"
		],
		[
			"addWeakEventListener( source: Observable, eventName: string, handler: function, target: any ): voidvoid\tNativeScript - Module ui/core/weak-event-listener",
			"addWeakEventListener(${1:source: Observable}, ${2:eventName: string}, ${3:handler: function}, ${4:target: any})"
		],
		[
			"new Float64ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"new Float64ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Float32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"new Float32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Float64ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"new Float64ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Float32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"new Float32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"_updateCharactersInRangeReplacementString( rangeLocation: number, rangeLength: number, replacementString: string ): void\tNativeScript - FormattedString",
			"_updateCharactersInRangeReplacementString(${1:rangeLocation: number}, ${2:rangeLength: number}, ${3:replacementString: string})"
		],
		[
			"onActivityResult( activity: any, requestCode: number, resultCode: number, data: any, superFunc: Function ): any\tNativeScript - AndroidActivityCallbacks",
			"onActivityResult(${1:activity: any}, ${2:requestCode: number}, ${3:resultCode: number}, ${4:data: any}, ${5:superFunc: Function})"
		],
		[
			"onCreateView( fragment: any, inflater: any, container: any, savedInstanceState: any, superFunc: Function ): any\tNativeScript - AndroidFragmentCallbacks",
			"onCreateView(${1:fragment: any}, ${2:inflater: any}, ${3:container: any}, ${4:savedInstanceState: any}, ${5:superFunc: Function})"
		],
		[
			"onCreateAnimator( fragment: any, transit: number, enter: boolean, nextAnim: number, superFunc: Function ): any\tNativeScript - AndroidFragmentCallbacks",
			"onCreateAnimator(${1:fragment: any}, ${2:transit: number}, ${3:enter: boolean}, ${4:nextAnim: number}, ${5:superFunc: Function})"
		],
		[
			"animateIOSTransition( containerView: any, fromView: any, toView: any, operation: any, completion: function ): voidvoid\tNativeScript - SlideTransition",
			"animateIOSTransition(${1:containerView: any}, ${2:fromView: any}, ${3:toView: any}, ${4:operation: any}, ${5:completion: function})"
		],
		[
			"animateIOSTransition( containerView: any, fromView: any, toView: any, operation: any, completion: function ): voidvoid\tNativeScript - SlideTransition",
			"animateIOSTransition(${1:containerView: any}, ${2:fromView: any}, ${3:toView: any}, ${4:operation: any}, ${5:completion: function})"
		],
		[
			"new Uint32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"new Uint32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Uint16ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"new Uint16ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Uint16ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"new Uint16ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Uint32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"new Uint32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Float32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"Float32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Float32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"Float32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"animateIOSTransition( containerView: any, fromView: any, toView: any, operation: any, completion: function ): voidvoid\tNativeScript - FadeTransition",
			"animateIOSTransition(${1:containerView: any}, ${2:fromView: any}, ${3:toView: any}, ${4:operation: any}, ${5:completion: function})"
		],
		[
			"Float64ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"Float64ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Float64ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"Float64ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"animateIOSTransition( containerView: any, fromView: any, toView: any, operation: any, completion: function ): voidvoid\tNativeScript - FadeTransition",
			"animateIOSTransition(${1:containerView: any}, ${2:fromView: any}, ${3:toView: any}, ${4:operation: any}, ${5:completion: function})"
		],
		[
			"new CubicBezierAnimationCurve( x1: number, y1: number, x2: number, y2: number ): CubicBezierAnimationCurve\tNativeScript - CubicBezierAnimationCurve",
			"new CubicBezierAnimationCurve(${1:x1: number}, ${2:y1: number}, ${3:x2: number}, ${4:y2: number})"
		],
		[
			"withStyleProperty( name: string, value: any, resolvedCallback: ResolvedStylePropertyHandler ): void\tNativeScript - Module ui/styling/style-property",
			"withStyleProperty(${1:name: string}, ${2:value: any}, ${3:resolvedCallback: ResolvedStylePropertyHandler})"
		],
		[
			"new Uint8ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"new Uint8ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"addEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): any\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"new Int16ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"new Int16ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Int32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"new Int32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"addEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): any\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"new Int16ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"new Int16ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Int32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"new Int32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Uint8ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"new Uint8ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Uint16ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"Uint16ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Uint32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"Uint32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"removeEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - XMLHttpRequestUpload",
			"removeEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"Uint32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"Uint32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"removeEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - XMLHttpRequestUpload",
			"removeEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"Uint16ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"Uint16ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"adjustChildrenLayoutParams( layoutBase: LayoutBase, widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ProxyViewContainer",
			"adjustChildrenLayoutParams(${1:layoutBase: LayoutBase}, ${2:widthMeasureSpec: number}, ${3:heightMeasureSpec: number})"
		],
		[
			"new DataViewConstructor( buffer: ArrayBuffer, byteOffset?: number, byteLength?: number ): DataViewConstructor\tNativeScript - DataViewConstructor",
			"new DataViewConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:byteLength?: number})"
		],
		[
			"new DataViewConstructor( buffer: ArrayBuffer, byteOffset?: number, byteLength?: number ): DataViewConstructor\tNativeScript - DataViewConstructor",
			"new DataViewConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:byteLength?: number})"
		],
		[
			"animateIOSTransition( containerView: any, fromView: any, toView: any, operation: any, completion: function ): voidvoid\tNativeScript - Transition",
			"animateIOSTransition(${1:containerView: any}, ${2:fromView: any}, ${3:toView: any}, ${4:operation: any}, ${5:completion: function})"
		],
		[
			"new XmlParser( onEvent: function, onError?: function, processNamespaces?: boolean, angularSyntax?: boolean ): XmlParser\tNativeScript - XmlParser",
			"new XmlParser(${1:onEvent: function}, ${2:onError?: function}, ${3:processNamespaces?: boolean}, ${4:angularSyntax?: boolean})"
		],
		[
			"registerShorthandCallback( name: string, callback: function ): ArrayKeyValuePairPropertyanyvoid\tNativeScript - Module ui/styling/style-property",
			"registerShorthandCallback(${1:name: string}, ${2:callback: function})"
		],
		[
			"CubicBezierAnimationCurve( x1: number, y1: number, x2: number, y2: number ): CubicBezierAnimationCurve\tNativeScript - CubicBezierAnimationCurve",
			"CubicBezierAnimationCurve(${1:x1: number}, ${2:y1: number}, ${3:x2: number}, ${4:y2: number})"
		],
		[
			"new Int8ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"new Int8ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"new Int8ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"new Int8ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Int16ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"Int16ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"addEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - XMLHttpRequestUpload",
			"addEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"Uint8ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"Uint8ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Int16ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"Int16ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Uint8ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"Uint8ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Int32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"Int32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"Int32ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"Int32ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"addEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - XMLHttpRequestUpload",
			"addEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - ProxyViewContainer",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"adjustChildrenLayoutParams( layoutBase: LayoutBase, widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - AbsoluteLayout",
			"adjustChildrenLayoutParams(${1:layoutBase: LayoutBase}, ${2:widthMeasureSpec: number}, ${3:heightMeasureSpec: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - ActivityIndicator",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"XmlParser( onEvent: function, onError?: function, processNamespaces?: boolean, angularSyntax?: boolean ): XmlParser\tNativeScript - XmlParser",
			"XmlParser(${1:onEvent: function}, ${2:onError?: function}, ${3:processNamespaces?: boolean}, ${4:angularSyntax?: boolean})"
		],
		[
			"DataViewConstructor( buffer: ArrayBuffer, byteOffset?: number, byteLength?: number ): DataViewConstructor\tNativeScript - DataViewConstructor",
			"DataViewConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:byteLength?: number})"
		],
		[
			"DataViewConstructor( buffer: ArrayBuffer, byteOffset?: number, byteLength?: number ): DataViewConstructor\tNativeScript - DataViewConstructor",
			"DataViewConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:byteLength?: number})"
		],
		[
			"removeEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - XMLHttpRequest",
			"removeEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"Int8ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"Int8ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - CustomLayoutView",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"addEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"registerHandler( property: Property, handler: StylePropertyChangedHandler, className?: string ): any\tNativeScript - Module ui/styling/style",
			"registerHandler(${1:property: Property}, ${2:handler: StylePropertyChangedHandler}, ${3:className?: string})"
		],
		[
			"removeEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - XMLHttpRequest",
			"removeEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"Int8ArrayConstructor( buffer: ArrayBuffer, byteOffset?: number, length?: number ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"Int8ArrayConstructor(${1:buffer: ArrayBuffer}, ${2:byteOffset?: number}, ${3:length?: number})"
		],
		[
			"addEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - EditableTextBase",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"adjustChildrenLayoutParams( layoutBase: LayoutBase, widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - StackLayout",
			"adjustChildrenLayoutParams(${1:layoutBase: LayoutBase}, ${2:widthMeasureSpec: number}, ${3:heightMeasureSpec: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - ProxyViewContainer",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberUint8ClampedArray\tNativeScript - Uint8ClampedArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberUint8ClampedArray\tNativeScript - Uint8ClampedArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - AbsoluteLayout",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActivityIndicator",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"adjustChildrenLayoutParams( layoutBase: LayoutBase, widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - GridLayout",
			"adjustChildrenLayoutParams(${1:layoutBase: LayoutBase}, ${2:widthMeasureSpec: number}, ${3:heightMeasureSpec: number})"
		],
		[
			"adjustChildrenLayoutParams( layoutBase: LayoutBase, widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - WrapLayout",
			"adjustChildrenLayoutParams(${1:layoutBase: LayoutBase}, ${2:widthMeasureSpec: number}, ${3:heightMeasureSpec: number})"
		],
		[
			"adjustChildrenLayoutParams( layoutBase: LayoutBase, widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - LayoutBase",
			"adjustChildrenLayoutParams(${1:layoutBase: LayoutBase}, ${2:widthMeasureSpec: number}, ${3:heightMeasureSpec: number})"
		],
		[
			"adjustChildrenLayoutParams( layoutBase: LayoutBase, widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - DockLayout",
			"adjustChildrenLayoutParams(${1:layoutBase: LayoutBase}, ${2:widthMeasureSpec: number}, ${3:heightMeasureSpec: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - ProxyViewContainer",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"removeEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - EventTarget",
			"removeEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"removeEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - EventTarget",
			"removeEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - EditableTextBase",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"new ControlStateChangeListener( control: any, callback: function ): ControlStateChangeListener\tNativeScript - ControlStateChangeListener",
			"new ControlStateChangeListener(${1:control: any}, ${2:callback: function})"
		],
		[
			"new Property( name: string, ownerType: string, metadata: PropertyMetadata, valueConverter?: function ): Property\tNativeScript - Property",
			"new Property(${1:name: string}, ${2:ownerType: string}, ${3:metadata: PropertyMetadata}, ${4:valueConverter?: function})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - CustomLayoutView",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - ActivityIndicator",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - SegmentedBar",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"new StylePropertyChangedHandler( view: View, nativeValue: any ): StylePropertyChangedHandler\tNativeScript - StylePropertyChangedHandler",
			"new StylePropertyChangedHandler(${1:view: View}, ${2:nativeValue: any})"
		],
		[
			"observe( target: View, type: GestureTypes, callback: function, context?: any ): voidGesturesObserver\tNativeScript - Module ui/gestures",
			"observe(${1:target: View}, ${2:type: GestureTypes}, ${3:callback: function}, ${4:context?: any})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Placeholder",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"new Property( name: string, cssName: string, metadata: PropertyMetadata, valueConverter?: function ): Property\tNativeScript - Property",
			"new Property(${1:name: string}, ${2:cssName: string}, ${3:metadata: PropertyMetadata}, ${4:valueConverter?: function})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - CustomLayoutView",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - ContentView",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - StackLayout",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"new Uint8ClampedArrayConstructor( array: ArrayLike<number> ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"new Uint8ClampedArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - EditableTextBase",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"new Property( name: string, cssName: string, metadata: PropertyMetadata, valueConverter?: function ): Property\tNativeScript - Property",
			"new Property(${1:name: string}, ${2:cssName: string}, ${3:metadata: PropertyMetadata}, ${4:valueConverter?: function})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - AbsoluteLayout",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"new Uint8ClampedArrayConstructor( array: ArrayLike<number> ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"new Uint8ClampedArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - WrapLayout",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - ListPicker",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"addEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - EventTarget",
			"addEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"then( onFulfilled?: function, onRejected?: function ): PromiseLikevoidPromiseLikevoidAnimationPromise\tNativeScript - AnimationPromise",
			"then(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - ScrollView",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - DockLayout",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - LayoutBase",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"addEventListener( type: string, listener: EventListenerOrEventListenerObject, useCapture?: boolean ): void\tNativeScript - EventTarget",
			"addEventListener(${1:type: string}, ${2:listener: EventListenerOrEventListenerObject}, ${3:useCapture?: boolean})"
		],
		[
			"adjustChildrenLayoutParams( layoutBase: LayoutBase, widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Layout",
			"adjustChildrenLayoutParams(${1:layoutBase: LayoutBase}, ${2:widthMeasureSpec: number}, ${3:heightMeasureSpec: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - DatePicker",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - GridLayout",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - TimePicker",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - SegmentedBar",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - TextField",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"ControlStateChangeListener( control: any, callback: function ): ControlStateChangeListener\tNativeScript - ControlStateChangeListener",
			"ControlStateChangeListener(${1:control: any}, ${2:callback: function})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - AbsoluteLayout",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"new StylePropertyChangedHandler( view: View, newValue: any ): StylePropertyChangedHandler\tNativeScript - StylePropertyChangedHandler",
			"new StylePropertyChangedHandler(${1:view: View}, ${2:newValue: any})"
		],
		[
			"Property( name: string, ownerType: string, metadata: PropertyMetadata, valueConverter?: function ): Property\tNativeScript - Property",
			"Property(${1:name: string}, ${2:ownerType: string}, ${3:metadata: PropertyMetadata}, ${4:valueConverter?: function})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - ActionBar",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - SearchBar",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - TextView",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - HtmlView",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"request: functionHttpRequestOptionsPromiseHttpResponseHttpRequestOptionsPromiseHttpResponse\tNativeScript - Module http/http-request",
			"request"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Repeater",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - ContentView",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Progress",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"StylePropertyChangedHandler( view: View, nativeValue: any ): StylePropertyChangedHandler\tNativeScript - StylePropertyChangedHandler",
			"StylePropertyChangedHandler(${1:view: View}, ${2:nativeValue: any})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - ListView",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Placeholder",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - TextBase",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - StackLayout",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - TimePicker",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - DatePicker",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - WebView",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - WrapLayout",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - SegmentedBar",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - LayoutBase",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"Uint8ClampedArrayConstructor( array: ArrayLike<number> ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"Uint8ClampedArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - TabView",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"Property( name: string, cssName: string, metadata: PropertyMetadata, valueConverter?: function ): Property\tNativeScript - Property",
			"Property(${1:name: string}, ${2:cssName: string}, ${3:metadata: PropertyMetadata}, ${4:valueConverter?: function})"
		],
		[
			"Property( name: string, cssName: string, metadata: PropertyMetadata, valueConverter?: function ): Property\tNativeScript - Property",
			"Property(${1:name: string}, ${2:cssName: string}, ${3:metadata: PropertyMetadata}, ${4:valueConverter?: function})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - DockLayout",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"Uint8ClampedArrayConstructor( array: ArrayLike<number> ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"Uint8ClampedArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListPicker",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - ScrollView",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - GridLayout",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - StackLayout",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Layout",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Placeholder",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"loadstart\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"loadstart\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Border",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"addEventListener( type: \"loadstart\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"loadstart\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Switch",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextField",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - ContentView",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Button",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - SearchBar",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Slider",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"new Animation( animationDefinitions: Array<AnimationDefinition>, playSequentially?: boolean ): Animation\tNativeScript - Animation",
			"new Animation(${1:animationDefinitions: Array<AnimationDefinition>}, ${2:playSequentially?: boolean})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActionBar",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - ListPicker",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Image",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberFloat64Array\tNativeScript - Float64ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - ScrollView",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - GridLayout",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberFloat32Array\tNativeScript - Float32ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberFloat32Array\tNativeScript - Float32ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextBase",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"StylePropertyChangedHandler( view: View, newValue: any ): StylePropertyChangedHandler\tNativeScript - StylePropertyChangedHandler",
			"StylePropertyChangedHandler(${1:view: View}, ${2:newValue: any})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Label",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - DockLayout",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - WrapLayout",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextView",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Repeater",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - TimePicker",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Frame",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberFloat64Array\tNativeScript - Float64ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Progress",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - HtmlView",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - DatePicker",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - LayoutBase",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListView",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"startLocationMonitoring( onLocation: function, onError?: function, options?: Options ): anyanyany\tNativeScript - LocationManager",
			"startLocationMonitoring(${1:onLocation: function}, ${2:onError?: function}, ${3:options?: Options})"
		],
		[
			"addEventListener( type: \"timeout\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"timeout\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - TextField",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUPromiseLikeUPromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - SearchBar",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"timeout\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"timeout\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - ActionBar",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - TabView",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - Page",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - WebView",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUPromiseLikeUPromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"resolveSizeAndState( size: number, specSize: number, specMode: number, childMeasuredState: number ): number\tNativeScript - View",
			"resolveSizeAndState(${1:size: number}, ${2:specSize: number}, ${3:specMode: number}, ${4:childMeasuredState: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Button",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"defaultValueGetter: functionDependencyObservableNativeValueResultDependencyObservableNativeValueResult\tNativeScript - Property",
			"defaultValueGetter"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberUint32Array\tNativeScript - Uint32ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"defaultValueGetter: functionDependencyObservableNativeValueResultDependencyObservableNativeValueResult\tNativeScript - Property",
			"defaultValueGetter"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - TextBase",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Border",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberUint16Array\tNativeScript - Uint16ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - TextView",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Progress",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - HtmlView",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"defaultValueGetter: functionDependencyObservableNativeValueResultDependencyObservableNativeValueResult\tNativeScript - Property",
			"defaultValueGetter"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Switch",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberUint16Array\tNativeScript - Uint16ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Slider",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberUint32Array\tNativeScript - Uint32ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Layout",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Repeater",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - ListView",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Image",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"addEventListener( type: \"readystatechange\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"readystatechange\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Label",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - TabView",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"abort\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"abort\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"Animation( animationDefinitions: Array<AnimationDefinition>, playSequentially?: boolean ): Animation\tNativeScript - Animation",
			"Animation(${1:animationDefinitions: Array<AnimationDefinition>}, ${2:playSequentially?: boolean})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - WebView",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"then<TResult>( onfulfilled?: function, onrejected?: function ): PromiseLikeUvoidPromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<TResult>(${1:onfulfilled?: function}, ${2:onrejected?: function})"
		],
		[
			"addEventListener( type: \"abort\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"abort\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Frame",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"addEventListener( type: \"readystatechange\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"readystatechange\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"then<TResult>( onfulfilled?: function, onrejected?: function ): PromiseLikeUvoidPromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<TResult>(${1:onfulfilled?: function}, ${2:onrejected?: function})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - Page",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Switch",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"progress\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"progress\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"addEventListener( type: \"load\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"load\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Slider",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"load\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"load\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Border",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberInt16Array\tNativeScript - Int16ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"new SlideTransition( direction: string, duration: number, nativeCurve: any ): SlideTransition\tNativeScript - SlideTransition",
			"new SlideTransition(${1:direction: string}, ${2:duration: number}, ${3:nativeCurve: any})"
		],
		[
			"new Uint8ClampedArrayConstructor( length: number ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"new Uint8ClampedArrayConstructor(${1:length: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberInt32Array\tNativeScript - Int32ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"new SlideTransition( direction: string, duration: number, nativeCurve: any ): SlideTransition\tNativeScript - SlideTransition",
			"new SlideTransition(${1:direction: string}, ${2:duration: number}, ${3:nativeCurve: any})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberUint8Array\tNativeScript - Uint8ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberUint8Array\tNativeScript - Uint8ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Button",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"progress\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"progress\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"layoutChild( parent: View, child: View, left: number, top: number, right: number, bottom: number ): void\tNativeScript - View",
			"layoutChild(${1:parent: View}, ${2:child: View}, ${3:left: number}, ${4:top: number}, ${5:right: number}, ${6:bottom: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Layout",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberInt16Array\tNativeScript - Int16ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberInt32Array\tNativeScript - Int32ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"new Uint8ClampedArrayConstructor( length: number ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"new Uint8ClampedArrayConstructor(${1:length: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Frame",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"loadend\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"loadend\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Image",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"loadend\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"loadend\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"keyframeAnimationFromInfo( info: KeyframeAnimationInfo, valueSourceModifier: number ): any\tNativeScript - KeyframeAnimation",
			"keyframeAnimationFromInfo(${1:info: KeyframeAnimationInfo}, ${2:valueSourceModifier: number})"
		],
		[
			"getShorthandPairs( name: string, value: any ): ArrayKeyValuePairPropertyany\tNativeScript - Module ui/styling/style-property",
			"getShorthandPairs(${1:name: string}, ${2:value: any})"
		],
		[
			"action( message: string, cancelButtonText: string, actions: Array<string> ): Promisestring\tNativeScript - Module ui/dialogs",
			"action(${1:message: string}, ${2:cancelButtonText: string}, ${3:actions: Array<string>})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Label",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ProxyViewContainer",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActivityIndicator",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberInt8Array\tNativeScript - Int8ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"open( method: string, url: string, async?: boolean, user?: string, password?: string ): void\tNativeScript - XMLHttpRequest",
			"open(${1:method: string}, ${2:url: string}, ${3:async?: boolean}, ${4:user?: string}, ${5:password?: string})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUPromiseLikeUPromiseU\tNativeScript - AnimationPromise",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"open( method: string, url: string, async?: boolean, user?: string, password?: string ): void\tNativeScript - XMLHttpRequest",
			"open(${1:method: string}, ${2:url: string}, ${3:async?: boolean}, ${4:user?: string}, ${5:password?: string})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - Page",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"measureChild( parent: View, child: View, widthMeasureSpec: number, heightMeasureSpec: number ): object\tNativeScript - View",
			"measureChild(${1:parent: View}, ${2:child: View}, ${3:widthMeasureSpec: number}, ${4:heightMeasureSpec: number})"
		],
		[
			"from( arrayLike: ArrayLike<number>, mapfn?: function, thisArg?: any ): numberInt8Array\tNativeScript - Int8ArrayConstructor",
			"from(${1:arrayLike: ArrayLike<number>}, ${2:mapfn?: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( type: \"error\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"error\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - EditableTextBase",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( type: \"error\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequestEventTarget",
			"addEventListener(${1:type: \"error\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - ProxyViewContainer",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - CustomLayoutView",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"registerSpecialProperty( name: string, setter: PropertySetter ): void\tNativeScript - Module ui/builder/special-properties",
			"registerSpecialProperty(${1:name: string}, ${2:setter: PropertySetter})"
		],
		[
			"new GesturesObserver( target: View, callback: function, context: any ): GesturesObserver\tNativeScript - GesturesObserver",
			"new GesturesObserver(${1:target: View}, ${2:callback: function}, ${3:context: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - ActivityIndicator",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"SlideTransition( direction: string, duration: number, nativeCurve: any ): SlideTransition\tNativeScript - SlideTransition",
			"SlideTransition(${1:direction: string}, ${2:duration: number}, ${3:nativeCurve: any})"
		],
		[
			"SlideTransition( direction: string, duration: number, nativeCurve: any ): SlideTransition\tNativeScript - SlideTransition",
			"SlideTransition(${1:direction: string}, ${2:duration: number}, ${3:nativeCurve: any})"
		],
		[
			"Uint8ClampedArrayConstructor( length: number ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"Uint8ClampedArrayConstructor(${1:length: number})"
		],
		[
			"Uint8ClampedArrayConstructor( length: number ): Uint8ClampedArrayConstructor\tNativeScript - Uint8ClampedArrayConstructor",
			"Uint8ClampedArrayConstructor(${1:length: number})"
		],
		[
			"new Float32ArrayConstructor( array: ArrayLike<number> ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"new Float32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - AbsoluteLayout",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - EditableTextBase",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"new Float64ArrayConstructor( array: ArrayLike<number> ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"new Float64ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - ProxyViewContainer",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"new Float64ArrayConstructor( array: ArrayLike<number> ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"new Float64ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"new Float32ArrayConstructor( array: ArrayLike<number> ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"new Float32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - CustomLayoutView",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"loadstart\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"loadstart\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"onSaveInstanceState( fragment: any, outState: any, superFunc: Function ): void\tNativeScript - AndroidFragmentCallbacks",
			"onSaveInstanceState(${1:fragment: any}, ${2:outState: any}, ${3:superFunc: Function})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - ActivityIndicator",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( type: \"loadstart\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"loadstart\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"writeText( path: string, content: string, onError?: function, encoding?: any ): anyany\tNativeScript - FileSystemAccess",
			"writeText(${1:path: string}, ${2:content: string}, ${3:onError?: function}, ${4:encoding?: any})"
		],
		[
			"showModal( moduleName: string, context: any, closeCallback: Function, fullscreen?: boolean ): Page\tNativeScript - Page",
			"showModal(${1:moduleName: string}, ${2:context: any}, ${3:closeCallback: Function}, ${4:fullscreen?: boolean})"
		],
		[
			"onSaveInstanceState( activity: any, outState: any, superFunc: Function ): void\tNativeScript - AndroidActivityCallbacks",
			"onSaveInstanceState(${1:activity: any}, ${2:outState: any}, ${3:superFunc: Function})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - DependencyObservable",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - SegmentedBar",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onCreate( fragment: any, savedInstanceState: any, superFunc: Function ): void\tNativeScript - AndroidFragmentCallbacks",
			"onCreate(${1:fragment: any}, ${2:savedInstanceState: any}, ${3:superFunc: Function})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - EditableTextBase",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"new ControlStateChangeListener( state: string ): ControlStateChangeListener\tNativeScript - ControlStateChangeListener",
			"new ControlStateChangeListener(${1:state: string})"
		],
		[
			"onCreate( activity: any, savedInstanceState: any, superFunc: Function ): void\tNativeScript - AndroidActivityCallbacks",
			"onCreate(${1:activity: any}, ${2:savedInstanceState: any}, ${3:superFunc: Function})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ProxyViewContainer",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - AbsoluteLayout",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"new ReferenceErrorConstructor( message?: string ): ReferenceErrorConstructor\tNativeScript - ReferenceErrorConstructor",
			"new ReferenceErrorConstructor(${1:message?: string})"
		],
		[
			"new StylePropertyChangedHandler( view: View ): StylePropertyChangedHandler\tNativeScript - StylePropertyChangedHandler",
			"new StylePropertyChangedHandler(${1:view: View})"
		],
		[
			"new ReferenceErrorConstructor( message?: string ): ReferenceErrorConstructor\tNativeScript - ReferenceErrorConstructor",
			"new ReferenceErrorConstructor(${1:message?: string})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - CustomLayoutView",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUPromiseLikeUPromiseU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUPromiseLikeUPromiseU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"new Uint32ArrayConstructor( array: ArrayLike<number> ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"new Uint32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ObservableArray<T>",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUUPromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"GesturesObserver( target: View, callback: function, context: any ): GesturesObserver\tNativeScript - GesturesObserver",
			"GesturesObserver(${1:target: View}, ${2:callback: function}, ${3:context: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ProxyViewContainer",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new Uint16ArrayConstructor( array: ArrayLike<number> ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"new Uint16ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ActivityIndicator",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ContentView",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new Uint32ArrayConstructor( array: ArrayLike<number> ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"new Uint32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ProxyViewContainer",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onHiddenChanged( fragment: any, hidden: boolean, superFunc: Function ): void\tNativeScript - AndroidFragmentCallbacks",
			"onHiddenChanged(${1:fragment: any}, ${2:hidden: boolean}, ${3:superFunc: Function})"
		],
		[
			"new Uint16ArrayConstructor( array: ArrayLike<number> ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"new Uint16ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"addFormattedStringToView( view: FormattedStringView, name: string, value: any ): void\tNativeScript - FormattedString",
			"addFormattedStringToView(${1:view: FormattedStringView}, ${2:name: string}, ${3:value: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Placeholder",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - StackLayout",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUUPromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - SegmentedBar",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - CustomLayoutView",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ScrollView",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - LayoutBase",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListPicker",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"Float64ArrayConstructor( array: ArrayLike<number> ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"Float64ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"login( message: string, userName?: string, password?: string ): PromiseLoginResult\tNativeScript - Module ui/dialogs",
			"login(${1:message: string}, ${2:userName?: string}, ${3:password?: string})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TimePicker",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"Float32ArrayConstructor( array: ArrayLike<number> ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"Float32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - AbsoluteLayout",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - DatePicker",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"Float64ArrayConstructor( array: ArrayLike<number> ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"Float64ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"Float32ArrayConstructor( array: ArrayLike<number> ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"Float32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActivityIndicator",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"initEvent( eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean ): void\tNativeScript - ProgressEvent",
			"initEvent(${1:eventTypeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean})"
		],
		[
			"new PromiseConstructor( resolve: function, reject: function ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"new PromiseConstructor(${1:resolve: function}, ${2:reject: function})"
		],
		[
			"initEvent( eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean ): void\tNativeScript - ProgressEvent",
			"initEvent(${1:eventTypeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ActivityIndicator",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - WrapLayout",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new PromiseConstructor( resolve: function, reject: function ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"new PromiseConstructor(${1:resolve: function}, ${2:reject: function})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - EditableTextBase",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - GridLayout",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - DockLayout",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( type: \"abort\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"abort\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - CustomLayoutView",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( type: \"abort\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"abort\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Placeholder",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - ContentView",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextField",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - SegmentedBarItem",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - SearchBar",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - StackLayout",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActionBar",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - EditableTextBase",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - CustomLayoutView",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - NavigationButton",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - EditableTextBase",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new Uint8ArrayConstructor( array: ArrayLike<number> ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"new Uint8ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"_onFragmentHidden( fragment: any, isBack: boolean, destroyed: boolean ): void\tNativeScript - Module ui/transition",
			"_onFragmentHidden(${1:fragment: any}, ${2:isBack: boolean}, ${3:destroyed: boolean})"
		],
		[
			"new Uint8ArrayConstructor( array: ArrayLike<number> ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"new Uint8ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"new Int16ArrayConstructor( array: ArrayLike<number> ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"new Int16ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"ControlStateChangeListener( state: string ): ControlStateChangeListener\tNativeScript - ControlStateChangeListener",
			"ControlStateChangeListener(${1:state: string})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - DockLayout",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - WrapLayout",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"new Int16ArrayConstructor( array: ArrayLike<number> ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"new Int16ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - GridLayout",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextView",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - DependencyObservable",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"StylePropertyChangedHandler( view: View ): StylePropertyChangedHandler\tNativeScript - StylePropertyChangedHandler",
			"StylePropertyChangedHandler(${1:view: View})"
		],
		[
			"addEventListener( type: \"load\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"load\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - VirtualArray<T>",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Repeater",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - FormattedString",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new Int32ArrayConstructor( array: ArrayLike<number> ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"new Int32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextBase",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( type: \"progress\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"progress\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"eachEntity( path: string, onEntity: function, onError?: function ): booleananyany\tNativeScript - FileSystemAccess",
			"eachEntity(${1:path: string}, ${2:onEntity: function}, ${3:onError?: function})"
		],
		[
			"ReferenceErrorConstructor( message?: string ): ReferenceErrorConstructor\tNativeScript - ReferenceErrorConstructor",
			"ReferenceErrorConstructor(${1:message?: string})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - HtmlView",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - DatePicker",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - AbsoluteLayout",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Progress",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - TimePicker",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - LayoutBase",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - ScrollView",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - ListPicker",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"load\", listener: function, useCapture?: boolean ): anyvoid\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"load\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListView",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"ReferenceErrorConstructor( message?: string ): ReferenceErrorConstructor\tNativeScript - ReferenceErrorConstructor",
			"ReferenceErrorConstructor(${1:message?: string})"
		],
		[
			"addEventListener( type: \"progress\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"progress\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - SegmentedBar",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"new Int32ArrayConstructor( array: ArrayLike<number> ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"new Int32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"Uint32ArrayConstructor( array: ArrayLike<number> ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"Uint32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - ContentView",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"Uint32ArrayConstructor( array: ArrayLike<number> ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"Uint32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"getHandler( property: Property, view: View ): StylePropertyChangedHandler\tNativeScript - Module ui/styling/style",
			"getHandler(${1:property: Property}, ${2:view: View})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - DependencyObservable",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"createSelectorsFromCss( css: string, cssFileName: string, keyframes: Object ): RuleSet\tNativeScript - StyleScope",
			"createSelectorsFromCss(${1:css: string}, ${2:cssFileName: string}, ${3:keyframes: Object})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - ActionBar",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"initEvent( eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean ): void\tNativeScript - ErrorEvent",
			"initEvent(${1:eventTypeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean})"
		],
		[
			"addEventListener( type: \"timeout\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"timeout\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TabView",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - SearchBar",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"addEventListener( type: \"loadend\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"loadend\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"Uint16ArrayConstructor( array: ArrayLike<number> ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"Uint16ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - WebView",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( type: \"loadend\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"loadend\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - TextField",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - AbsoluteLayout",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"initEvent( eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean ): void\tNativeScript - ErrorEvent",
			"initEvent(${1:eventTypeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean})"
		],
		[
			"Uint16ArrayConstructor( array: ArrayLike<number> ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"Uint16ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - StackLayout",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Placeholder",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( type: \"timeout\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"timeout\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - AbsoluteLayout",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Switch",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - WrapLayout",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - DatePicker",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - TextBase",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - DockLayout",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - GridLayout",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Slider",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - ListPicker",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - HtmlView",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - TextView",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - TimePicker",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - ListView",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Border",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Repeater",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ObservableArray<T>",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - ScrollView",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Button",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"PromiseConstructor( resolve: function, reject: function ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"PromiseConstructor(${1:resolve: function}, ${2:reject: function})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ProxyViewContainer",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - LayoutBase",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"PromiseConstructor( resolve: function, reject: function ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"PromiseConstructor(${1:resolve: function}, ${2:reject: function})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Progress",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Layout",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Image",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new ArrayBufferConstructor( byteLength: number ): ArrayBufferConstructor\tNativeScript - ArrayBufferConstructor",
			"new ArrayBufferConstructor(${1:byteLength: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - SegmentedBar",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( type: \"error\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"error\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - StackLayout",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - TextField",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Frame",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ProxyViewContainer",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"new ArrayBufferConstructor( byteLength: number ): ArrayBufferConstructor\tNativeScript - ArrayBufferConstructor",
			"new ArrayBufferConstructor(${1:byteLength: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - SearchBar",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( type: \"error\", listener: function, useCapture?: boolean ): any\tNativeScript - XMLHttpRequest",
			"addEventListener(${1:type: \"error\"}, ${2:listener: function}, ${3:useCapture?: boolean})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - SegmentedBar",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - ActionBar",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"new Int8ArrayConstructor( array: ArrayLike<number> ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"new Int8ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"new Int8ArrayConstructor( array: ArrayLike<number> ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"new Int8ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ActivityIndicator",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ContentView",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Label",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"showModal( page: Page, context: any, closeCallback: Function, fullscreen?: boolean ): Page\tNativeScript - Page",
			"showModal(${1:page: Page}, ${2:context: any}, ${3:closeCallback: Function}, ${4:fullscreen?: boolean})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - WebView",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - TabView",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - AndroidFrame",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"Int32ArrayConstructor( array: ArrayLike<number> ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"Int32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Placeholder",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Border",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - HtmlView",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - SegmentedBarItem",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ProxyObject",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - View",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new Float32ArrayConstructor( length: number ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"new Float32ArrayConstructor(${1:length: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - StackLayout",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - TextView",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - ListView",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Slider",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - LayoutBase",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - TextBase",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - WrapLayout",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - GridLayout",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - DockLayout",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ActivityIndicator",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - DatePicker",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Button",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Repeater",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ContentView",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Switch",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - NavigationButton",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - StackLayout",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new Float64ArrayConstructor( length: number ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"new Float64ArrayConstructor(${1:length: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - TabViewItem",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ListPicker",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ContentView",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TimePicker",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"Int16ArrayConstructor( array: ArrayLike<number> ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"Int16ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - EditableTextBase",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - ProxyViewContainer",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_setCurrentLayoutBounds( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Page",
			"_setCurrentLayoutBounds(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - DependencyObservable",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"then<TResult>( onfulfilled?: function, onrejected?: function ): PromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<TResult>(${1:onfulfilled?: function}, ${2:onrejected?: function})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Placeholder",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new Float64ArrayConstructor( length: number ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"new Float64ArrayConstructor(${1:length: number})"
		],
		[
			"then<TResult>( onfulfilled?: function, onrejected?: function ): PromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<TResult>(${1:onfulfilled?: function}, ${2:onrejected?: function})"
		],
		[
			"Uint8ArrayConstructor( array: ArrayLike<number> ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"Uint8ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - CustomLayoutView",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"new Float32ArrayConstructor( length: number ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"new Float32ArrayConstructor(${1:length: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Progress",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Layout",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"Int16ArrayConstructor( array: ArrayLike<number> ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"Int16ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"Uint8ArrayConstructor( array: ArrayLike<number> ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"Uint8ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"Int32ArrayConstructor( array: ArrayLike<number> ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"Int32ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: string[] ): string\tNativeScript - TemplateStringsArray",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: string[]})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - TemplateStringsArray",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"new SyntaxErrorConstructor( message?: string ): SyntaxErrorConstructor\tNativeScript - SyntaxErrorConstructor",
			"new SyntaxErrorConstructor(${1:message?: string})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - ActivityIndicator",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - LayoutBase",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new RegExpConstructor( pattern: string, flags?: string ): RegExpConstructor\tNativeScript - RegExpConstructor",
			"new RegExpConstructor(${1:pattern: string}, ${2:flags?: string})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Label",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - TabView",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - WrapLayout",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - GridLayout",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new SyntaxErrorConstructor( message?: string ): SyntaxErrorConstructor\tNativeScript - SyntaxErrorConstructor",
			"new SyntaxErrorConstructor(${1:message?: string})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - EditableTextBase",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - LayoutBase",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - TemplateStringsArray",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: string[] ): string\tNativeScript - TemplateStringsArray",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: string[]})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - WebView",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Image",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ScrollView",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - DockLayout",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ActionBar",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ScrollView",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - VirtualArray<T>",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ProxyViewContainer",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - NavigationButton",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - DatePicker",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - FormattedString",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - SegmentedBarItem",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TextField",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new RegExpConstructor( pattern: string, flags?: string ): RegExpConstructor\tNativeScript - RegExpConstructor",
			"new RegExpConstructor(${1:pattern: string}, ${2:flags?: string})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - DockLayout",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - DatePicker",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ActionItem",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - CustomLayoutView",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Frame",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Observable",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getFile( options: HttpRequestOptions, destinationFilePath?: string ): PromiseFile\tNativeScript - Module http",
			"getFile(${1:options: HttpRequestOptions}, ${2:destinationFilePath?: string})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ListPicker",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TimePicker",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"getSpecialPropertySetter( name: string ): PropertySetter\tNativeScript - Module ui/builder/special-properties",
			"getSpecialPropertySetter(${1:name: string})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - TimePicker",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - GridLayout",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListPicker",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - WrapLayout",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Slider",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Repeater",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ProxyViewContainer",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - EditableTextBase",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Progress",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ActionBar",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - SearchBar",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - CustomLayoutView",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - View",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Layout",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Switch",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextField",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActivityIndicator",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ObservableArray<T>",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActionBar",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"initEvent( eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean ): void\tNativeScript - Event",
			"initEvent(${1:eventTypeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean})"
		],
		[
			"initEvent( eventTypeArg: string, canBubbleArg: boolean, cancelableArg: boolean ): void\tNativeScript - Event",
			"initEvent(${1:eventTypeArg: string}, ${2:canBubbleArg: boolean}, ${3:cancelableArg: boolean})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TextView",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - TextField",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - AbsoluteLayout",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ProxyViewContainer",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"Experimental( target: Object, key?: string | symbol, value?: any ): void\tNativeScript - Module NativeScript",
			"Experimental(${1:target: Object}, ${2:key?: string | symbol}, ${3:value?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - HtmlView",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setCurrentMeasureSpecs( widthMeasureSpec: number, heightMeasureSpec: number ): boolean\tNativeScript - Page",
			"_setCurrentMeasureSpecs(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Border",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TextBase",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Button",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - SearchBar",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListView",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new Uint16ArrayConstructor( length: number ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"new Uint16ArrayConstructor(${1:length: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Progress",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new Uint32ArrayConstructor( length: number ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"new Uint32ArrayConstructor(${1:length: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Progress",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Image",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"new PromiseConstructor( value?: T | PromiseLike<T> ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"new PromiseConstructor(${1:value?: T | PromiseLike<T>})"
		],
		[
			"new PromiseConstructor( value?: T | PromiseLike<T> ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"new PromiseConstructor(${1:value?: T | PromiseLike<T>})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Frame",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ProxyViewContainer",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - EditableTextBase",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Label",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"Int8ArrayConstructor( array: ArrayLike<number> ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"Int8ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"ArrayBufferConstructor( byteLength: number ): ArrayBufferConstructor\tNativeScript - ArrayBufferConstructor",
			"ArrayBufferConstructor(${1:byteLength: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Repeater",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Repeater",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ListView",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - CustomLayoutView",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextView",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - HtmlView",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new Uint16ArrayConstructor( length: number ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"new Uint16ArrayConstructor(${1:length: number})"
		],
		[
			"Int8ArrayConstructor( array: ArrayLike<number> ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"Int8ArrayConstructor(${1:array: ArrayLike<number>})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - TextView",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - DependencyObservable",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new Uint32ArrayConstructor( length: number ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"new Uint32ArrayConstructor(${1:length: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Bindable",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextBase",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"ArrayBufferConstructor( byteLength: number ): ArrayBufferConstructor\tNativeScript - ArrayBufferConstructor",
			"ArrayBufferConstructor(${1:byteLength: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - TextBase",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ActivityIndicator",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - HtmlView",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ActivityIndicator",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - AbsoluteLayout",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Border",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUUPromiseU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"Float64ArrayConstructor( length: number ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"Float64ArrayConstructor(${1:length: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - EditableTextBase",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"new RangeErrorConstructor( message?: string ): RangeErrorConstructor\tNativeScript - RangeErrorConstructor",
			"new RangeErrorConstructor(${1:message?: string})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint8ClampedArray",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - EditableTextBase",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - ProxyViewContainer",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - NavigationButton",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint8ClampedArray",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TabView",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"Deprecated( target: Object, key?: string | symbol, value?: any ): void\tNativeScript - Module NativeScript",
			"Deprecated(${1:target: Object}, ${2:key?: string | symbol}, ${3:value?: any})"
		],
		[
			"Float32ArrayConstructor( length: number ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"Float32ArrayConstructor(${1:length: number})"
		],
		[
			"Float64ArrayConstructor( length: number ): Float64ArrayConstructor\tNativeScript - Float64ArrayConstructor",
			"Float64ArrayConstructor(${1:length: number})"
		],
		[
			"defineProperty( o: any, p: string, attributes: PropertyDescriptor ): any\tNativeScript - ObjectConstructor",
			"defineProperty(${1:o: any}, ${2:p: string}, ${3:attributes: PropertyDescriptor})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActivityIndicator",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onNavigatingTo( context: any, isBackNavigation: boolean, bindingContext?: any ): void\tNativeScript - Page",
			"onNavigatingTo(${1:context: any}, ${2:isBackNavigation: boolean}, ${3:bindingContext?: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - Page",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"new SourceError( child: Error, source: Source, message?: string ): SourceError\tNativeScript - SourceError",
			"new SourceError(${1:child: Error}, ${2:source: Source}, ${3:message?: string})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - WebView",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - SegmentedBar",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"defineProperty( o: any, p: string, attributes: PropertyDescriptor ): any\tNativeScript - ObjectConstructor",
			"defineProperty(${1:o: any}, ${2:p: string}, ${3:attributes: PropertyDescriptor})"
		],
		[
			"new RangeErrorConstructor( message?: string ): RangeErrorConstructor\tNativeScript - RangeErrorConstructor",
			"new RangeErrorConstructor(${1:message?: string})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - SegmentedBarItem",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - AndroidFrame",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - CustomLayoutView",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"Float32ArrayConstructor( length: number ): Float32ArrayConstructor\tNativeScript - Float32ArrayConstructor",
			"Float32ArrayConstructor(${1:length: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - WebView",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"resolveFileName( path: string, ext: string ): string\tNativeScript - Module file-system/file-name-resolver",
			"resolveFileName(${1:path: string}, ${2:ext: string})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - AbsoluteLayout",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Layout",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeUUPromiseU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Slider",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Switch",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - TabView",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - CustomLayoutView",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"off( eventNames: string | GestureTypes, callback?: function, thisArg?: any ): voidany\tNativeScript - View",
			"off(${1:eventNames: string | GestureTypes}, ${2:callback?: function}, ${3:thisArg?: any})"
		],
		[
			"RegExpConstructor( pattern: string, flags?: string ): RegExpConstructor\tNativeScript - RegExpConstructor",
			"RegExpConstructor(${1:pattern: string}, ${2:flags?: string})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Switch",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - SegmentedBar",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ProxyViewContainer",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ProxyObject",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - VirtualArray<T>",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: string[] ): string\tNativeScript - RegExpMatchArray",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: string[]})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: string[] ): string\tNativeScript - RegExpMatchArray",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: string[]})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ContentView",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - RegExpMatchArray",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - FormattedString",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Label",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - ActivityIndicator",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - TabViewItem",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - EditableTextBase",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"SyntaxErrorConstructor( message?: string ): SyntaxErrorConstructor\tNativeScript - SyntaxErrorConstructor",
			"SyntaxErrorConstructor(${1:message?: string})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanUint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - CustomLayoutView",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"SyntaxErrorConstructor( message?: string ): SyntaxErrorConstructor\tNativeScript - SyntaxErrorConstructor",
			"SyntaxErrorConstructor(${1:message?: string})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - RegExpMatchArray",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Button",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Button",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - DependencyObservable",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanUint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - AbsoluteLayout",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Slider",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Image",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Layout",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"selectedIndexChanged\", callback: function, thisArg?: any ): void\tNativeScript - SegmentedBar",
			"on(${1:event: \"selectedIndexChanged\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Slider",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Placeholder",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Switch",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Layout",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"RegExpConstructor( pattern: string, flags?: string ): RegExpConstructor\tNativeScript - RegExpConstructor",
			"RegExpConstructor(${1:pattern: string}, ${2:flags?: string})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Border",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Border",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - StackLayout",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"new Uint8ArrayConstructor( length: number ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"new Uint8ArrayConstructor(${1:length: number})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - RegExpExecArray",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"new Uint8ArrayConstructor( length: number ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"new Uint8ArrayConstructor(${1:length: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Frame",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - TemplateStringsArray",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Observable",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Frame",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - AbsoluteLayout",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ActivityIndicator",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Label",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - TemplateStringsArray",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - AbsoluteLayout",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: string[] ): string\tNativeScript - RegExpExecArray",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: string[]})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Cache",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Placeholder",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"new Int32ArrayConstructor( length: number ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"new Int32ArrayConstructor(${1:length: number})"
		],
		[
			"new Int32ArrayConstructor( length: number ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"new Int32ArrayConstructor(${1:length: number})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - GridLayout",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - WrapLayout",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ListPicker",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ContentView",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - DatePicker",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - EditableTextBase",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"new Int16ArrayConstructor( length: number ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"new Int16ArrayConstructor(${1:length: number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - SegmentedBar",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - LayoutBase",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ActionItem",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - CustomLayoutView",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: string[] ): string\tNativeScript - RegExpExecArray",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: string[]})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - StackLayout",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Style",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ProxyObject",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - DockLayout",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"readText( path: string, onError?: function, encoding?: any ): anystring\tNativeScript - FileSystemAccess",
			"readText(${1:path: string}, ${2:onError?: function}, ${3:encoding?: any})"
		],
		[
			"on( eventNames: string | GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - View",
			"on(${1:eventNames: string | GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - TimePicker",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"new Int16ArrayConstructor( length: number ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"new Int16ArrayConstructor(${1:length: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ScrollView",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Style",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"startMonitoring( connectionTypeChangedCallback: function ): voidvoid\tNativeScript - Module connectivity",
			"startMonitoring(${1:connectionTypeChangedCallback: function})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Image",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Image",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - RegExpExecArray",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - TabViewItem",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Label",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_applyXmlAttribute( attributeName: string, attrValue: any ): boolean\tNativeScript - ApplyXmlAttributes",
			"_applyXmlAttribute(${1:attributeName: string}, ${2:attrValue: any})"
		],
		[
			"new FadeTransition( duration: number, nativeCurve: any ): FadeTransition\tNativeScript - FadeTransition",
			"new FadeTransition(${1:duration: number}, ${2:nativeCurve: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - StackLayout",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"Uint32ArrayConstructor( length: number ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"Uint32ArrayConstructor(${1:length: number})"
		],
		[
			"Uint16ArrayConstructor( length: number ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"Uint16ArrayConstructor(${1:length: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - SearchBar",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"getBindingOptions( name: string, value: string ): any\tNativeScript - Module ui/builder/binding-builder",
			"getBindingOptions(${1:name: string}, ${2:value: string})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Placeholder",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"Uint16ArrayConstructor( length: number ): Uint16ArrayConstructor\tNativeScript - Uint16ArrayConstructor",
			"Uint16ArrayConstructor(${1:length: number})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ObservableArray<T>",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - CustomLayoutView",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - SegmentedBar",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"getKeyframeAnimationWithName( animationName: string ): KeyframeAnimationInfo\tNativeScript - StyleScope",
			"getKeyframeAnimationWithName(${1:animationName: string})"
		],
		[
			"toStringOverride( fragment: any, superFunc: Function ): string\tNativeScript - AndroidFragmentCallbacks",
			"toStringOverride(${1:fragment: any}, ${2:superFunc: Function})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Span",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"PromiseConstructor( value?: T | PromiseLike<T> ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"PromiseConstructor(${1:value?: T | PromiseLike<T>})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ScrollView",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"eachInheritableProperty( callback: function ): voidany\tNativeScript - Module ui/styling/style-property",
			"eachInheritableProperty(${1:callback: function})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - View",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ActionItem",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"PromiseConstructor( value?: T | PromiseLike<T> ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"PromiseConstructor(${1:value?: T | PromiseLike<T>})"
		],
		[
			"new EvalErrorConstructor( message?: string ): EvalErrorConstructor\tNativeScript - EvalErrorConstructor",
			"new EvalErrorConstructor(${1:message?: string})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - GridLayout",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"new FadeTransition( duration: number, nativeCurve: any ): FadeTransition\tNativeScript - FadeTransition",
			"new FadeTransition(${1:duration: number}, ${2:nativeCurve: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - DependencyObservable",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"new TypeErrorConstructor( message?: string ): TypeErrorConstructor\tNativeScript - TypeErrorConstructor",
			"new TypeErrorConstructor(${1:message?: string})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - View",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - WrapLayout",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ActionBar",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - DockLayout",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"Uint32ArrayConstructor( length: number ): Uint32ArrayConstructor\tNativeScript - Uint32ArrayConstructor",
			"Uint32ArrayConstructor(${1:length: number})"
		],
		[
			"new TypeErrorConstructor( message?: string ): TypeErrorConstructor\tNativeScript - TypeErrorConstructor",
			"new TypeErrorConstructor(${1:message?: string})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - AbsoluteLayout",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - SegmentedBarItem",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ListPicker",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"then( onFulfilled?: function, onRejected?: function ): PromiseLikevoid\tNativeScript - AnimationPromise",
			"then(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - LayoutBase",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"layoutNativeView( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Page",
			"layoutNativeView(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"addEventListener( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Page",
			"addEventListener(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - EditableTextBase",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - TimePicker",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - ContentView",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - DatePicker",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ProxyViewContainer",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"new EvalErrorConstructor( message?: string ): EvalErrorConstructor\tNativeScript - EvalErrorConstructor",
			"new EvalErrorConstructor(${1:message?: string})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - TextField",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"RangeErrorConstructor( message?: string ): RangeErrorConstructor\tNativeScript - RangeErrorConstructor",
			"RangeErrorConstructor(${1:message?: string})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - TextField",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"prompt( message: string, defaultText?: string ): PromisePromptResult\tNativeScript - Module ui/dialogs",
			"prompt(${1:message: string}, ${2:defaultText?: string})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - DatePicker",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"mergeSort( arr: Array<any>, compareFunc: function ): numberArrayany\tNativeScript - Module utils/utils",
			"mergeSort(${1:arr: Array<any>}, ${2:compareFunc: function})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - HtmlView",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"setFloat32( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setFloat32(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"setFloat64( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setFloat64(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - AndroidFrame",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - DockLayout",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - TextView",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"setFloat32( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setFloat32(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Bindable",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"setFloat64( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setFloat64(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - ListPicker",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - ProxyViewContainer",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"SourceError( child: Error, source: Source, message?: string ): SourceError\tNativeScript - SourceError",
			"SourceError(${1:child: Error}, ${2:source: Source}, ${3:message?: string})"
		],
		[
			"_onFragmentCreateAnimator( fragment: any, nextAnim: number ): any\tNativeScript - Module ui/transition",
			"_onFragmentCreateAnimator(${1:fragment: any}, ${2:nextAnim: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ListView",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ActionBar",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - StackLayout",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"getBoolean( key: string, defaultValue?: boolean ): boolean\tNativeScript - Module application-settings",
			"getBoolean(${1:key: string}, ${2:defaultValue?: boolean})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - SearchBar",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - AbsoluteLayout",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - DependencyObservable",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Repeater",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - TimePicker",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ActivityIndicator",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - SegmentedBar",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - GridLayout",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - FormattedString",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - WrapLayout",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Progress",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - LayoutBase",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"RangeErrorConstructor( message?: string ): RangeErrorConstructor\tNativeScript - RangeErrorConstructor",
			"RangeErrorConstructor(${1:message?: string})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - TextBase",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ContentView",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Placeholder",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - ScrollView",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - ProxyViewContainer",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - SegmentedBar",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberUint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - SegmentedBar",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"lastIndexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - TemplateStringsArray",
			"lastIndexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - ActivityIndicator",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"new FunctionConstructor( ...args: string[] ): FunctionConstructor\tNativeScript - FunctionConstructor",
			"new FunctionConstructor(${1:...args: string[]})"
		],
		[
			"lastIndexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - TemplateStringsArray",
			"lastIndexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"setUint16( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setUint16(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TimePicker",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"setUint32( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setUint32(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"writeTextSync( content: string, onError?: function, encoding?: string ): anyvoid\tNativeScript - File",
			"writeTextSync(${1:content: string}, ${2:onError?: function}, ${3:encoding?: string})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - TextBase",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ProxyObject",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - WebView",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListPicker",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - DatePicker",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"setUint16( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setUint16(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - ProxyViewContainer",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - SearchBar",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"setUint32( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setUint32(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - EditableTextBase",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"rename( path: string, newPath: string, onError?: function ): anyvoid\tNativeScript - FileSystemAccess",
			"rename(${1:path: string}, ${2:newPath: string}, ${3:onError?: function})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - GridLayout",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Float64Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - ListView",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"PseudoClassHandler( ...pseudoClasses: string[] ): MethodDecorator\tNativeScript - Module ui/core/view",
			"PseudoClassHandler(${1:...pseudoClasses: string[]})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - DockLayout",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new FunctionConstructor( ...args: string[] ): FunctionConstructor\tNativeScript - FunctionConstructor",
			"new FunctionConstructor(${1:...args: string[]})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ScrollView",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ProxyViewContainer",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ContentView",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - HtmlView",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Placeholder",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"new Int8ArrayConstructor( length: number ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"new Int8ArrayConstructor(${1:length: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Bindable",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Float64Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Float32Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"new Int8ArrayConstructor( length: number ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"new Int8ArrayConstructor(${1:length: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - StackLayout",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint8ClampedArray",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberUint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - ActionBar",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint8ClampedArray",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - TextView",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - ActivityIndicator",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - TabView",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"createSelectorsFromImports( tree: SyntaxTree, keyframes: Object ): RuleSet\tNativeScript - StyleScope",
			"createSelectorsFromImports(${1:tree: SyntaxTree}, ${2:keyframes: Object})"
		],
		[
			"new ObservableArray<T>( arrayLength?: number ): ObservableArray<T>\tNativeScript - ObservableArray<T>",
			"new ObservableArray<T>(${1:arrayLength?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - CustomLayoutView",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - WrapLayout",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Placeholder",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Float32Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - LayoutBase",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Repeater",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - SegmentedBarItem",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - TextField",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - AbsoluteLayout",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - StackLayout",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ContentView",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Progress",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - TabViewItem",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Button",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - DatePicker",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"Int16ArrayConstructor( length: number ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"Int16ArrayConstructor(${1:length: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - SearchBar",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"setInt16( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setInt16(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"Uint8ArrayConstructor( length: number ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"Uint8ArrayConstructor(${1:length: number})"
		],
		[
			"setInt32( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setInt32(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"setInt32( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setInt32(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - TimePicker",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): string\tNativeScript - TemplateStringsArray",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"new URIErrorConstructor( message?: string ): URIErrorConstructor\tNativeScript - URIErrorConstructor",
			"new URIErrorConstructor(${1:message?: string})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Layout",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ActionItem",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - WebView",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"on( event: \"itemsLoading\", callback: function, thisArg?: any ): void\tNativeScript - VirtualArray<T>",
			"on(${1:event: \"itemsLoading\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Repeater",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - LayoutBase",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - DatePicker",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Placeholder",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ListPicker",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"Int16ArrayConstructor( length: number ): Int16ArrayConstructor\tNativeScript - Int16ArrayConstructor",
			"Int16ArrayConstructor(${1:length: number})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - VirtualArray<T>",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - StackLayout",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - TabView",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"new URIErrorConstructor( message?: string ): URIErrorConstructor\tNativeScript - URIErrorConstructor",
			"new URIErrorConstructor(${1:message?: string})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Float32Array\tNativeScript - Float32Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - GridLayout",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - TextBase",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"setInterval( callback: Function, milliseconds?: number ): number\tNativeScript - Module NativeScript",
			"setInterval(${1:callback: Function}, ${2:milliseconds?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - CustomLayoutView",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ObservableArray<T>",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"Uint8ArrayConstructor( length: number ): Uint8ArrayConstructor\tNativeScript - Uint8ArrayConstructor",
			"Uint8ArrayConstructor(${1:length: number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - HtmlView",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint16Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Progress",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"Int32ArrayConstructor( length: number ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"Int32ArrayConstructor(${1:length: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - LayoutBase",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - EditableTextBase",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"selectedIndexChanged\", callback: function, thisArg?: any ): void\tNativeScript - TabView",
			"on(${1:event: \"selectedIndexChanged\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - DockLayout",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - SegmentedBar",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - RegExpMatchArray",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint32Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ListPicker",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint32Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"defineProperties( o: any, properties: PropertyDescriptorMap ): any\tNativeScript - ObjectConstructor",
			"defineProperties(${1:o: any}, ${2:properties: PropertyDescriptorMap})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Float64Array\tNativeScript - Float64Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"Int32ArrayConstructor( length: number ): Int32ArrayConstructor\tNativeScript - Int32ArrayConstructor",
			"Int32ArrayConstructor(${1:length: number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - RegExpMatchArray",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ContentView",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - ActivityIndicator",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"defineProperties( o: any, properties: PropertyDescriptorMap ): any\tNativeScript - ObjectConstructor",
			"defineProperties(${1:o: any}, ${2:properties: PropertyDescriptorMap})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - DockLayout",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ScrollView",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ScrollView",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint16Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Switch",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Observable",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - GridLayout",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ProxyViewContainer",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - EditableTextBase",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActionBar",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - WrapLayout",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): string\tNativeScript - TemplateStringsArray",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextField",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Float64Array\tNativeScript - Float64Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - FormattedString",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ActivityIndicator",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Border",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - ListView",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - WrapLayout",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - TextView",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TimePicker",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Float32Array\tNativeScript - Float32Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - CustomLayoutView",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setInt16( byteOffset: number, value: number, littleEndian?: boolean ): void\tNativeScript - DataView",
			"setInt16(${1:byteOffset: number}, ${2:value: number}, ${3:littleEndian?: boolean})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Slider",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int16Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - WrapLayout",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"EvalErrorConstructor( message?: string ): EvalErrorConstructor\tNativeScript - EvalErrorConstructor",
			"EvalErrorConstructor(${1:message?: string})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - ProxyViewContainer",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TextField",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Style",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - SearchBar",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint8Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ActionBar",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - ContentView",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"getString( key: string, defaultValue?: string ): string\tNativeScript - Module application-settings",
			"getString(${1:key: string}, ${2:defaultValue?: string})"
		],
		[
			"getNumber( key: string, defaultValue?: number ): number\tNativeScript - Module application-settings",
			"getNumber(${1:key: string}, ${2:defaultValue?: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - CustomLayoutView",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"setTimeout( callback: Function, milliseconds?: number ): number\tNativeScript - Module NativeScript",
			"setTimeout(${1:callback: Function}, ${2:milliseconds?: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Style",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - RegExpExecArray",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Cache",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ActionBar",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - HtmlView",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - SegmentedBar",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListPicker",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"getOwnPropertyDescriptor( o: any, p: string ): PropertyDescriptor\tNativeScript - ObjectConstructor",
			"getOwnPropertyDescriptor(${1:o: any}, ${2:p: string})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int16Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Frame",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - EditableTextBase",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Label",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"EvalErrorConstructor( message?: string ): EvalErrorConstructor\tNativeScript - EvalErrorConstructor",
			"EvalErrorConstructor(${1:message?: string})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Button",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - TextField",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"new PromiseConstructor( executor: function ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"new PromiseConstructor(${1:executor: function})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Image",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"new PromiseConstructor( executor: function ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"new PromiseConstructor(${1:executor: function})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - StackLayout",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - EditableTextBase",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - LayoutBase",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - DockLayout",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - SegmentedBarItem",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - CustomLayoutView",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Progress",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Switch",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - AndroidFrame",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint8Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - NavigationButton",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"getOwnPropertyDescriptor( o: any, p: string ): PropertyDescriptor\tNativeScript - ObjectConstructor",
			"getOwnPropertyDescriptor(${1:o: any}, ${2:p: string})"
		],
		[
			"FadeTransition( duration: number, nativeCurve: any ): FadeTransition\tNativeScript - FadeTransition",
			"FadeTransition(${1:duration: number}, ${2:nativeCurve: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Repeater",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - SearchBar",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TimePicker",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextBase",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextView",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ScrollView",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Border",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"new FileNameResolver( context: PlatformContext ): FileNameResolver\tNativeScript - FileNameResolver",
			"new FileNameResolver(${1:context: PlatformContext})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int32Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"TypeErrorConstructor( message?: string ): TypeErrorConstructor\tNativeScript - TypeErrorConstructor",
			"TypeErrorConstructor(${1:message?: string})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Placeholder",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"TypeErrorConstructor( message?: string ): TypeErrorConstructor\tNativeScript - TypeErrorConstructor",
			"TypeErrorConstructor(${1:message?: string})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - TabView",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Layout",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - ProxyObject",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListView",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: string ): stringstring\tNativeScript - RegExpExecArray",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: string})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - DatePicker",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - GridLayout",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - AbsoluteLayout",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Slider",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int32Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - WebView",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ActivityIndicator",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"FadeTransition( duration: number, nativeCurve: any ): FadeTransition\tNativeScript - FadeTransition",
			"FadeTransition(${1:duration: number}, ${2:nativeCurve: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - WebView",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"setUTCHours( hours: number, min?: number, sec?: number, ms?: number ): number\tNativeScript - Date",
			"setUTCHours(${1:hours: number}, ${2:min?: number}, ${3:sec?: number}, ${4:ms?: number})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int8Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextField",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Bindable",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Progress",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Layout",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Border",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - ListView",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - CustomLayoutView",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Repeater",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - EditableTextBase",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - NavigationButton",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - TextView",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TextView",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - TimePicker",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"new Font( family: string, size: number, style: string, weight: string ): Font\tNativeScript - Font",
			"new Font(${1:family: string}, ${2:size: number}, ${3:style: string}, ${4:weight: string})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Uint32Array\tNativeScript - Uint32Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Slider",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Progress",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - StackLayout",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - LayoutBase",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Image",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TextBase",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Style",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Placeholder",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_prepareCurrentFragmentForClearHistory( fragment: any ): void\tNativeScript - Module ui/transition",
			"_prepareCurrentFragmentForClearHistory(${1:fragment: any})"
		],
		[
			"onBackPressed( activity: any, superFunc: Function ): void\tNativeScript - AndroidActivityCallbacks",
			"onBackPressed(${1:activity: any}, ${2:superFunc: Function})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Switch",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Frame",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"setUTCHours( hours: number, min?: number, sec?: number, ms?: number ): number\tNativeScript - Date",
			"setUTCHours(${1:hours: number}, ${2:min?: number}, ${3:sec?: number}, ${4:ms?: number})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Uint16Array\tNativeScript - Uint16Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - ScrollView",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - DependencyObservable",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - GridLayout",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - ListView",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - ListPicker",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - DatePicker",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TabView",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onDestroyView( fragment: any, superFunc: Function ): void\tNativeScript - AndroidFragmentCallbacks",
			"onDestroyView(${1:fragment: any}, ${2:superFunc: Function})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Span",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - SegmentedBarItem",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint8ClampedArray",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Style",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - AbsoluteLayout",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ActionBar",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Uint32Array\tNativeScript - Uint32Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Label",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Page",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Button",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - TabViewItem",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int8Array",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - HtmlView",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"removeEventListener( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - View",
			"removeEventListener(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ContentView",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Uint16Array\tNativeScript - Uint16Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - TextBase",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint8ClampedArray",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - SearchBar",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - ActivityIndicator",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - HtmlView",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - DockLayout",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - ProxyObject",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - AbsoluteLayout",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - WrapLayout",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Repeater",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - TabView",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - WebView",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ScrollView",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - HtmlView",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - AndroidFrame",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Repeater",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: T[] ): T\tNativeScript - ObservableArray<T>",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: T[]})"
		],
		[
			"new Color( alpha: number, red: number, green: number, blue: number ): Color\tNativeScript - Color",
			"new Color(${1:alpha: number}, ${2:red: number}, ${3:green: number}, ${4:blue: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextView",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"FunctionConstructor( ...args: string[] ): FunctionConstructor\tNativeScript - FunctionConstructor",
			"FunctionConstructor(${1:...args: string[]})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - WebView",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Frame",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - TabView",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"on( event: \"change\", callback: function, thisArg?: any ): voidany\tNativeScript - VirtualArray<T>",
			"on(${1:event: \"change\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getAncestor( view: View, criterion: string | Function ): View\tNativeScript - Module ui/core/view",
			"getAncestor(${1:view: View}, ${2:criterion: string | Function})"
		],
		[
			"indexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - TemplateStringsArray",
			"indexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint8ClampedArray",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Layout",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - SegmentedBar",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - WrapLayout",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"FunctionConstructor( ...args: string[] ): FunctionConstructor\tNativeScript - FunctionConstructor",
			"FunctionConstructor(${1:...args: string[]})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Border",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - EditableTextBase",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Progress",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"indexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - TemplateStringsArray",
			"indexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Switch",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - AbsoluteLayout",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TextBase",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Button",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - DockLayout",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - CustomLayoutView",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - ProxyViewContainer",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addArrayFromBuilder( name: string, value: Array<any> ): void\tNativeScript - AddArrayFromBuilder",
			"_addArrayFromBuilder(${1:name: string}, ${2:value: Array<any>})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - DatePicker",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"new DependencyObservable( json?: any ): DependencyObservable\tNativeScript - DependencyObservable",
			"new DependencyObservable(${1:json?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - VirtualArray<T>",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"isUniversal( sel: SimpleSelector ): boolean\tNativeScript - Module ui/styling/css-selector-parser",
			"isUniversal(${1:sel: SimpleSelector})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Image",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"isAttribute( sel: SimpleSelector ): boolean\tNativeScript - Module ui/styling/css-selector-parser",
			"isAttribute(${1:sel: SimpleSelector})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - ActionBar",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - FormattedString",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): PromiseLikeU\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - TextField",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - GridLayout",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - ListView",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - Observable",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Page",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - SearchBar",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - View",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Label",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TimePicker",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"Int8ArrayConstructor( length: number ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"Int8ArrayConstructor(${1:length: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Slider",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - LayoutBase",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"saveToFile( path: string, format: string, quality?: number ): boolean\tNativeScript - ImageSource",
			"saveToFile(${1:path: string}, ${2:format: string}, ${3:quality?: number})"
		],
		[
			"new GesturesObserver( args: GestureEventData ): GesturesObserver\tNativeScript - GesturesObserver",
			"new GesturesObserver(${1:args: GestureEventData})"
		],
		[
			"lastIndexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - RegExpMatchArray",
			"lastIndexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"getKeyframeAnimationWithName( animationName: string ): KeyframeAnimationInfo\tNativeScript - Page",
			"getKeyframeAnimationWithName(${1:animationName: string})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ListPicker",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - AbsoluteLayout",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - SegmentedBar",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint8ClampedArray",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"ObservableArray<T>( arrayLength?: number ): ObservableArray<T>\tNativeScript - ObservableArray<T>",
			"ObservableArray<T>(${1:arrayLength?: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - TemplateStringsArray",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"Int8ArrayConstructor( length: number ): Int8ArrayConstructor\tNativeScript - Int8ArrayConstructor",
			"Int8ArrayConstructor(${1:length: number})"
		],
		[
			"_onPropertyChanged( property: Property, oldValue: any, newValue: any ): void\tNativeScript - Span",
			"_onPropertyChanged(${1:property: Property}, ${2:oldValue: any}, ${3:newValue: any})"
		],
		[
			"lastIndexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - RegExpMatchArray",
			"lastIndexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"on( event: \"change\", callback: function, thisArg?: any ): void\tNativeScript - ObservableArray<T>",
			"on(${1:event: \"change\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - TemplateStringsArray",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Button",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ProxyObject",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Slider",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - StackLayout",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): string\tNativeScript - RegExpMatchArray",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - ActivityIndicator",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"stringify( value: any, replacer: function, space: string | number ): string\tNativeScript - JSON",
			"stringify(${1:value: any}, ${2:replacer: function}, ${3:space: string | number})"
		],
		[
			"stringify( value: any, replacer: any[], space: string | number ): anystring\tNativeScript - JSON",
			"stringify(${1:value: any}, ${2:replacer: any[]}, ${3:space: string | number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Float32Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - AbsoluteLayout",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - HtmlView",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"write( path: string, content: any, onError?: function ): anyany\tNativeScript - FileSystemAccess",
			"write(${1:path: string}, ${2:content: any}, ${3:onError?: function})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ObservableArray<T>",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"catch( onRejected?: function ): PromiseLikevoidAnimationPromise\tNativeScript - AnimationPromise",
			"catch(${1:onRejected?: function})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - SegmentedBar",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Repeater",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Layout",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Slider",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - TabViewItem",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getEntities( path: string, onError?: function ): anyArrayobject\tNativeScript - FileSystemAccess",
			"getEntities(${1:path: string}, ${2:onError?: function})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - TextView",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Label",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"stringify( value: any, replacer: function, space: string | number ): string\tNativeScript - JSON",
			"stringify(${1:value: any}, ${2:replacer: function}, ${3:space: string | number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - Page",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"URIErrorConstructor( message?: string ): URIErrorConstructor\tNativeScript - URIErrorConstructor",
			"URIErrorConstructor(${1:message?: string})"
		],
		[
			"stringify( value: any, replacer: any[], space: string | number ): anystring\tNativeScript - JSON",
			"stringify(${1:value: any}, ${2:replacer: any[]}, ${3:space: string | number})"
		],
		[
			"lastIndexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - RegExpExecArray",
			"lastIndexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - TemplateStringsArray",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Uint8Array\tNativeScript - Uint8Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Int16Array\tNativeScript - Int16Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - TabView",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - TextBase",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"URIErrorConstructor( message?: string ): URIErrorConstructor\tNativeScript - URIErrorConstructor",
			"URIErrorConstructor(${1:message?: string})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - WebView",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Border",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Placeholder",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - ListView",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ContentView",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TextField",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - SearchBar",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Int32Array\tNativeScript - Int32Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Float32Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - TemplateStringsArray",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Layout",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): string\tNativeScript - RegExpMatchArray",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Int32Array\tNativeScript - Int32Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ProxyViewContainer",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Progress",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Float64Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Switch",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ProxyViewContainer",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Float64Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Border",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Uint8Array\tNativeScript - Uint8Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Switch",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Image",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"applyInlineSyle( view: View, style: string ): void\tNativeScript - Module ui/styling/style-scope",
			"applyInlineSyle(${1:view: View}, ${2:style: string})"
		],
		[
			"lastIndexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - RegExpExecArray",
			"lastIndexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint8ClampedArray",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint8ClampedArray",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ActionBar",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Frame",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"setMeasuredDimension( measuredWidth: number, measuredHeight: number ): void\tNativeScript - View",
			"setMeasuredDimension(${1:measuredWidth: number}, ${2:measuredHeight: number})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Int16Array\tNativeScript - Int16Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Button",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"eachDescendant( view: View, callback: function ): booleanany\tNativeScript - Module ui/core/view",
			"eachDescendant(${1:view: View}, ${2:callback: function})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint16Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Cache",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - WebView",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): string\tNativeScript - TemplateStringsArray",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanFloat64Array\tNativeScript - Float64Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"PromiseConstructor( executor: function ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"PromiseConstructor(${1:executor: function})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - CustomLayoutView",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"PromiseConstructor( executor: function ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"PromiseConstructor(${1:executor: function})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ListPicker",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Frame",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getPropertyByCssName( name: string ): Property\tNativeScript - Module ui/styling/style-property",
			"getPropertyByCssName(${1:name: string})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Progress",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"setHours( hours: number, min?: number, sec?: number, ms?: number ): number\tNativeScript - Date",
			"setHours(${1:hours: number}, ${2:min?: number}, ${3:sec?: number}, ${4:ms?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): string\tNativeScript - RegExpExecArray",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - ProxyViewContainer",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - View",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Image",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Style",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Frame",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Border",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint32Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"parse( selector: string ): SimpleSelector\tNativeScript - Module ui/styling/css-selector-parser",
			"parse(${1:selector: string})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Switch",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - ContentView",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"getDrawParams( width: number, height: number ): BackgroundDrawParams\tNativeScript - Background",
			"getDrawParams(${1:width: number}, ${2:height: number})"
		],
		[
			"new ArrayConstructor( arrayLength?: number ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"new ArrayConstructor(${1:arrayLength?: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - HtmlView",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - DockLayout",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TimePicker",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TextBase",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Image",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - AbsoluteLayout",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"_removePageNativeViewFromAndroidParent( page: Page ): void\tNativeScript - Module ui/transition",
			"_removePageNativeViewFromAndroidParent(${1:page: Page})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint16Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanFloat32Array\tNativeScript - Float32Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Layout",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Button",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"FileNameResolver( context: PlatformContext ): FileNameResolver\tNativeScript - FileNameResolver",
			"FileNameResolver(${1:context: PlatformContext})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - ContentView",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - WrapLayout",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - TabView",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Label",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Style",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - EditableTextBase",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Label",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - StackLayout",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): string\tNativeScript - TemplateStringsArray",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Placeholder",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - Bindable",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"setHours( hours: number, min?: number, sec?: number, ms?: number ): number\tNativeScript - Date",
			"setHours(${1:hours: number}, ${2:min?: number}, ${3:sec?: number}, ${4:ms?: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ListView",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ScrollView",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint32Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): string\tNativeScript - RegExpExecArray",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"onLayout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Page",
			"onLayout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - GridLayout",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"new ArrayConstructor( arrayLength?: number ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"new ArrayConstructor(${1:arrayLength?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ScrollView",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - SegmentedBar",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Slider",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ActivityIndicator",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - LayoutBase",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Repeater",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanFloat32Array\tNativeScript - Float32Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ActivityIndicator",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - SegmentedBar",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - StackLayout",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - DatePicker",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - ObservableArray<T>",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TextView",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Observable",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanFloat64Array\tNativeScript - Float64Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int32Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"onDestroy( fragment: any, superFunc: Function ): void\tNativeScript - AndroidFragmentCallbacks",
			"onDestroy(${1:fragment: any}, ${2:superFunc: Function})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint8ClampedArray",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"assert( test: boolean, message: string, ...formatParams: any[] ): void\tNativeScript - Console",
			"assert(${1:test: boolean}, ${2:message: string}, ${3:...formatParams: any[]})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int16Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Frame",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new ObservableArray<T>( ...items: T[] ): ObservableArray<T>\tNativeScript - ObservableArray<T>",
			"new ObservableArray<T>(${1:...items: T[]})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Float64Array\tNativeScript - Float64Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"assert( test: boolean, message: string, ...formatParams: any[] ): void\tNativeScript - Console",
			"assert(${1:test: boolean}, ${2:message: string}, ${3:...formatParams: any[]})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - AndroidFrame",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int32Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Float32Array\tNativeScript - Float32Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - ContentView",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"on( event: \"loadMoreItems\", callback: function, thisArg?: any ): void\tNativeScript - ListView",
			"on(${1:event: \"loadMoreItems\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Page",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - NavigationButton",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Placeholder",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int16Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - EditableTextBase",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Float32Array\tNativeScript - Float32Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - SegmentedBarItem",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - DockLayout",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - WebView",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ContentView",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - SegmentedBarItem",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - DatePicker",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"lastIndexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - ObservableArray<T>",
			"lastIndexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - LayoutBase",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Int8Array\tNativeScript - Int8Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - StackLayout",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - ActivityIndicator",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - View",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - SearchBar",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"assert( test: boolean, message: string, ...formatParams: any[] ): void\tNativeScript - Console",
			"assert(${1:test: boolean}, ${2:message: string}, ${3:...formatParams: any[]})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint8Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint8ClampedArray",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - ScrollView",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Placeholder",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - TimePicker",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - SegmentedBar",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_setNavBarBackgroundColor( navBar: any, color: any ): any\tNativeScript - Module ui/action-bar",
			"_setNavBarBackgroundColor(${1:navBar: any}, ${2:color: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Switch",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - SearchBar",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Float64Array\tNativeScript - Float64Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - SegmentedBarItem",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"on( event: \"loadStarted\", callback: function, thisArg?: any ): voidany\tNativeScript - WebView",
			"on(${1:event: \"loadStarted\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new ArrayConstructor( arrayLength: number ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"new ArrayConstructor(${1:arrayLength: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - DockLayout",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Button",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TabView",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - ObservableArray<T>",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - GridLayout",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint8ClampedArray",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Label",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"new ArrayConstructor( arrayLength: number ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"new ArrayConstructor(${1:arrayLength: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - DatePicker",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - NavigationButton",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"onDestroy( activity: any, superFunc: Function ): void\tNativeScript - AndroidActivityCallbacks",
			"onDestroy(${1:activity: any}, ${2:superFunc: Function})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - CustomLayoutView",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - EditableTextBase",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Uint8Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TextField",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Image",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - StackLayout",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - TabViewItem",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - TimePicker",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Border",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint8ClampedArray",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - ListPicker",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"navigatedFrom\", callback: function, thisArg?: any ): voidvoid\tNativeScript - Page",
			"on(${1:event: \"navigatedFrom\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"Font( family: string, size: number, style: string, weight: string ): Font\tNativeScript - Font",
			"Font(${1:family: string}, ${2:size: number}, ${3:style: string}, ${4:weight: string})"
		],
		[
			"onprogress: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onprogress"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - CustomLayoutView",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"onprogress: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onprogress"
		],
		[
			"tokenize( code: string, options?: Options ): ArrayToken\tNativeScript - Module js-libs/esprima",
			"tokenize(${1:code: string}, ${2:options?: Options})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - View",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ActionBar",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - NavigationButton",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ProxyObject",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - WrapLayout",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"isPseudo( sel: SimpleSelector ): boolean\tNativeScript - Module ui/styling/css-selector-parser",
			"isPseudo(${1:sel: SimpleSelector})"
		],
		[
			"copyWithin( target: number, start: number, end?: number ): Int8Array\tNativeScript - Int8Array",
			"copyWithin(${1:target: number}, ${2:start: number}, ${3:end?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - ListPicker",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - WrapLayout",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - GridLayout",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Slider",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_createPropertyChangeData( name: string, value: any ): PropertyChangeData\tNativeScript - Span",
			"_createPropertyChangeData(${1:name: string}, ${2:value: any})"
		],
		[
			"observe( type: GestureTypes, callback: function, thisArg?: any ): voidany\tNativeScript - Page",
			"observe(${1:type: GestureTypes}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Layout",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - LayoutBase",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Image",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ContentView",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"indexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - RegExpMatchArray",
			"indexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - HtmlView",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - RegExpMatchArray",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - AbsoluteLayout",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getFile( url: string, destinationFilePath?: string ): PromiseFile\tNativeScript - Module http",
			"getFile(${1:url: string}, ${2:destinationFilePath?: string})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - SegmentedBar",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"_onFragmentShown( fragment: any, isBack: boolean ): void\tNativeScript - Module ui/transition",
			"_onFragmentShown(${1:fragment: any}, ${2:isBack: boolean})"
		],
		[
			"getEntitiesSync( onError?: function ): anyPromiseArrayFileSystemEntity\tNativeScript - Folder",
			"getEntitiesSync(${1:onError?: function})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - View",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"layout( left: number, top: number, right: number, bottom: number ): void\tNativeScript - Page",
			"layout(${1:left: number}, ${2:top: number}, ${3:right: number}, ${4:bottom: number})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Float64Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"ontimeout: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestEventTarget",
			"ontimeout"
		],
		[
			"onloadend: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onloadend"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int8Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - TabViewItem",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"on( event: \"shownModally\", callback: function, thisArg?: any ): voidvoid\tNativeScript - Page",
			"on(${1:event: \"shownModally\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - VirtualArray<T>",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - TemplateStringsArray",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - TimePicker",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - SearchBar",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"getValue( model: any, isBackConvert: any, changedModel: any ): any\tNativeScript - Expression",
			"getValue(${1:model: any}, ${2:isBackConvert: any}, ${3:changedModel: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - ListView",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"toString( type: GestureTypes, separator?: string ): string\tNativeScript - Module ui/gestures",
			"toString(${1:type: GestureTypes}, ${2:separator?: string})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - GridLayout",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - ListView",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanUint16Array\tNativeScript - Uint16Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - GridLayout",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - CustomLayoutView",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Placeholder",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): T\tNativeScript - ObservableArray<T>",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - TimePicker",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - DatePicker",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Switch",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TextBase",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Float32Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - DatePicker",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ProxyObject",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_addArrayFromBuilder( name: string, value: Array<any> ): void\tNativeScript - FormattedString",
			"_addArrayFromBuilder(${1:name: string}, ${2:value: Array<any>})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanUint32Array\tNativeScript - Uint32Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ScrollView",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - StackLayout",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - FormattedString",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"GesturesObserver( args: GestureEventData ): GesturesObserver\tNativeScript - GesturesObserver",
			"GesturesObserver(${1:args: GestureEventData})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - ScrollView",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - TemplateStringsArray",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanUint16Array\tNativeScript - Uint16Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Layout",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TextView",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Border",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): U\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Repeater",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Progress",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: number ): numbernumber\tNativeScript - Int8Array",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: number})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint8ClampedArray",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - WrapLayout",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"new PromiseConstructor( reason?: any ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"new PromiseConstructor(${1:reason?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - EditableTextBase",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ActionItem",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Slider",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanUint32Array\tNativeScript - Uint32Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - TextField",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"setInterval( callback: Function, milliseconds?: number ): number\tNativeScript - Module timer",
			"setInterval(${1:callback: Function}, ${2:milliseconds?: number})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint8ClampedArray",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - LayoutBase",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - DependencyObservable",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"new PromiseConstructor( reason?: any ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"new PromiseConstructor(${1:reason?: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): U\tNativeScript - PromiseLike<T, T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"DependencyObservable( json?: any ): DependencyObservable\tNativeScript - DependencyObservable",
			"DependencyObservable(${1:json?: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - DockLayout",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Button",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - DockLayout",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - ActionBar",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Bindable",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onloadend: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onloadend"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - WrapLayout",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"ontimeout: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestEventTarget",
			"ontimeout"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ListPicker",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Label",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - ProxyViewContainer",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Frame",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - ListPicker",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - LayoutBase",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"decodeURIComponent( encodedURIComponent: string ): string\tNativeScript - Module NativeScript",
			"decodeURIComponent(${1:encodedURIComponent: string})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Float32Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - TextField",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - ProxyViewContainer",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"fetch( url: string, init?: RequestInit ): PromiseResponse\tNativeScript - Module NativeScript",
			"fetch(${1:url: string}, ${2:init?: RequestInit})"
		],
		[
			"isClass( sel: SimpleSelector ): boolean\tNativeScript - Module ui/styling/css-selector-parser",
			"isClass(${1:sel: SimpleSelector})"
		],
		[
			"Color( alpha: number, red: number, green: number, blue: number ): Color\tNativeScript - Color",
			"Color(${1:alpha: number}, ${2:red: number}, ${3:green: number}, ${4:blue: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - RegExpMatchArray",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - ActionBar",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"indexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - RegExpMatchArray",
			"indexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Float64Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Placeholder",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"scrollToHorizontalOffset( value: number, animated: boolean ): any\tNativeScript - ScrollView",
			"scrollToHorizontalOffset(${1:value: number}, ${2:animated: boolean})"
		],
		[
			"new BooleanConstructor( value?: any ): BooleanConstructor\tNativeScript - BooleanConstructor",
			"new BooleanConstructor(${1:value?: any})"
		],
		[
			"subarray( begin: number, end?: number ): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - WebView",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - LayoutBase",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - WebView",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Uint16Array\tNativeScript - Uint16Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - GridLayout",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Image",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - TimePicker",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Repeater",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - AbsoluteLayout",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - Progress",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ActionItem",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"getPropertyByName( name: string ): Property\tNativeScript - Module ui/styling/style-property",
			"getPropertyByName(${1:name: string})"
		],
		[
			"on( event: \"loadFinished\", callback: function, thisArg?: any ): void\tNativeScript - WebView",
			"on(${1:event: \"loadFinished\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Float32Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Uint32Array\tNativeScript - Uint32Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"eachProperty( callback: function ): voidany\tNativeScript - Module ui/styling/style-property",
			"eachProperty(${1:callback: function})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - TextBase",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - SearchBar",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint8ClampedArray",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint16Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"setTimeout( callback: Function, milliseconds?: number ): number\tNativeScript - Module timer",
			"setTimeout(${1:callback: Function}, ${2:milliseconds?: number})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: T ): TT\tNativeScript - ObservableArray<T>",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"subarray( begin: number, end?: number ): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint32Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Float64Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - TextField",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ScrollView",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"new BooleanConstructor( value?: any ): BooleanConstructor\tNativeScript - BooleanConstructor",
			"new BooleanConstructor(${1:value?: any})"
		],
		[
			"onStart( activity: any, superFunc: Function ): void\tNativeScript - AndroidActivityCallbacks",
			"onStart(${1:activity: any}, ${2:superFunc: Function})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - ProxyViewContainer",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - SearchBar",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint8ClampedArray",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - Page",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - TextBase",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ListPicker",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Frame",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Label",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Progress",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"on( event: \"optionSelected\", callback: function, thisArg?: any ): void\tNativeScript - Frame",
			"on(${1:event: \"optionSelected\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - ActivityIndicator",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - RegExpExecArray",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"indexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - RegExpExecArray",
			"indexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"_onPropertyChangedFromNative( property: Property, newValue: any ): void\tNativeScript - View",
			"_onPropertyChangedFromNative(${1:property: Property}, ${2:newValue: any})"
		],
		[
			"indexOf( searchElement: string, fromIndex?: number ): number\tNativeScript - RegExpExecArray",
			"indexOf(${1:searchElement: string}, ${2:fromIndex?: number})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Uint32Array\tNativeScript - Uint32Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - HtmlView",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint16Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - TextView",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - AbsoluteLayout",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - StackLayout",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"on( event: \"itemLoading\", callback: function, thisArg?: any ): void\tNativeScript - ListView",
			"on(${1:event: \"itemLoading\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - Style",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - WrapLayout",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint32Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ActionBar",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Observable",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - DatePicker",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"new VirtualArray<T>( arrayLength?: number ): VirtualArray<T>\tNativeScript - VirtualArray<T>",
			"new VirtualArray<T>(${1:arrayLength?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Float64Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - RegExpExecArray",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - RegExpMatchArray",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - TextField",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Float32Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"isType( sel: SimpleSelector ): boolean\tNativeScript - Module ui/styling/css-selector-parser",
			"isType(${1:sel: SimpleSelector})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - RegExpMatchArray",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - TabView",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - HtmlView",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - DockLayout",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - ProxyViewContainer",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Uint16Array\tNativeScript - Uint16Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - TabView",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - ContentView",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - Repeater",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - Style",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - ListView",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - ActionBar",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - ActivityIndicator",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"on( event: \"navigatedTo\", callback: function, thisArg?: any ): voidvoid\tNativeScript - Page",
			"on(${1:event: \"navigatedTo\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - TextView",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"ArrayConstructor( arrayLength?: number ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"ArrayConstructor(${1:arrayLength?: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Progress",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - LayoutBase",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanInt32Array\tNativeScript - Int32Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"ArrayConstructor( arrayLength?: number ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"ArrayConstructor(${1:arrayLength?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - SearchBar",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - ProxyViewContainer",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - TimePicker",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - GridLayout",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int32Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Switch",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"callback: functionGestureEventDatavoidGestureEventDatavoid\tNativeScript - GesturesObserver",
			"callback"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int16Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"onStop( activity: any, superFunc: Function ): void\tNativeScript - AndroidActivityCallbacks",
			"onStop(${1:activity: any}, ${2:superFunc: Function})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Float32Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - WebView",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - TabView",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - DatePicker",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanInt16Array\tNativeScript - Int16Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"onreadystatechange: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequest",
			"onreadystatechange"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Button",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"onreadystatechange: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequest",
			"onreadystatechange"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanInt32Array\tNativeScript - Int32Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Page",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"create( o: any, properties?: PropertyDescriptorMap ): any\tNativeScript - ObjectConstructor",
			"create(${1:o: any}, ${2:properties?: PropertyDescriptorMap})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - ActivityIndicator",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - EditableTextBase",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint32Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Button",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint32Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberFloat64Array\tNativeScript - Float64Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"create( o: any, properties?: PropertyDescriptorMap ): any\tNativeScript - ObjectConstructor",
			"create(${1:o: any}, ${2:properties?: PropertyDescriptorMap})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - ActivityIndicator",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"new ProxyViewContainer( json?: any ): ProxyViewContainer\tNativeScript - ProxyViewContainer",
			"new ProxyViewContainer(${1:json?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - TextBase",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Border",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"on( event: \"itemTap\", callback: function, thisArg?: any ): voidany\tNativeScript - ListView",
			"on(${1:event: \"itemTap\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Progress",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - CustomLayoutView",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - ListView",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - CustomLayoutView",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Bindable",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ActionBar",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint16Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"renameSync( newName: string, onError?: function ): anyvoid\tNativeScript - FileSystemEntity",
			"renameSync(${1:newName: string}, ${2:onError?: function})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - TextView",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - ListPicker",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): string\tNativeScript - RegExpMatchArray",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint8ClampedArray",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"new Transition( duration: number, nativeCurve: any ): Transition\tNativeScript - Transition",
			"new Transition(${1:duration: number}, ${2:nativeCurve: any})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanUint8Array\tNativeScript - Uint8Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Float64Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"new ErrorConstructor( message?: string ): ErrorConstructor\tNativeScript - ErrorConstructor",
			"new ErrorConstructor(${1:message?: string})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - WrapLayout",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - HtmlView",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - ListView",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - HtmlView",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - RegExpExecArray",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanUint8Array\tNativeScript - Uint8Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"onMeasure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - View",
			"onMeasure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint16Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"new ErrorConstructor( message?: string ): ErrorConstructor\tNativeScript - ErrorConstructor",
			"new ErrorConstructor(${1:message?: string})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - TextBase",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint8Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Float32Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - DockLayout",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - ObservableArray<T>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"new Request( input: string | Request, init?: RequestInit ): Request\tNativeScript - Request",
			"new Request(${1:input: string | Request}, ${2:init?: RequestInit})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Repeater",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberFloat32Array\tNativeScript - Float32Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint8Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int16Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - ScrollView",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Repeater",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Slider",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - TextField",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): string\tNativeScript - RegExpMatchArray",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - AbsoluteLayout",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberFloat32Array\tNativeScript - Float32Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - EditableTextBase",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - RegExpExecArray",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Layout",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanInt16Array\tNativeScript - Int16Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int32Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"on( event: \"navigatingFrom\", callback: function, thisArg?: any ): void\tNativeScript - Page",
			"on(${1:event: \"navigatingFrom\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - TextView",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"new ObservableArray<T>( items: T[] ): ObservableArray<T>\tNativeScript - ObservableArray<T>",
			"new ObservableArray<T>(${1:items: T[]})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ProxyViewContainer",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"on( event: \"showingModally\", callback: function, thisArg?: any ): void\tNativeScript - Page",
			"on(${1:event: \"showingModally\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Float64Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint8ClampedArray",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"setBoolean( key: string, value: boolean ): void\tNativeScript - Module application-settings",
			"setBoolean(${1:key: string}, ${2:value: boolean})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberFloat64Array\tNativeScript - Float64Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"on( event: \"propertyChange\", callback: function, thisArg?: any ): void\tNativeScript - Span",
			"on(${1:event: \"propertyChange\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new Request( input: string | Request, init?: RequestInit ): Request\tNativeScript - Request",
			"new Request(${1:input: string | Request}, ${2:init?: RequestInit})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Uint8ClampedArray",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - SegmentedBar",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - SegmentedBar",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - HtmlView",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - ProxyViewContainer",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Style",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"isId( sel: SimpleSelector ): boolean\tNativeScript - Module ui/styling/css-selector-parser",
			"isId(${1:sel: SimpleSelector})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - ProxyViewContainer",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Int16Array\tNativeScript - Int16Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint16Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"on( event: \"close\", callback: function, thisArg?: any ): voidany\tNativeScript - SearchBar",
			"on(${1:event: \"close\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - ContentView",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Style",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - ActivityIndicator",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"setUTCFullYear( year: number, month?: number, date?: number ): number\tNativeScript - Date",
			"setUTCFullYear(${1:year: number}, ${2:month?: number}, ${3:date?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Layout",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - ActionBar",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - WebView",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): string\tNativeScript - RegExpExecArray",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Uint8Array\tNativeScript - Uint8Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ActivityIndicator",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Uint8ClampedArray",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Frame",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Label",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"setUTCFullYear( year: number, month?: number, date?: number ): number\tNativeScript - Date",
			"setUTCFullYear(${1:year: number}, ${2:month?: number}, ${3:date?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Bindable",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Frame",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidvoid\tNativeScript - Page",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Cache",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - SearchBar",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - EditableTextBase",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - EditableTextBase",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - AddChildFromBuilder",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int8Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Int16Array\tNativeScript - Int16Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - DependencyObservable",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Button",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int16Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"slice( start?: number, end?: number ): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"ArrayConstructor( arrayLength: number ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"ArrayConstructor(${1:arrayLength: number})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint32Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - TextField",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: T[] ): T\tNativeScript - Array<T, T>",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: T[]})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): string\tNativeScript - RegExpExecArray",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - Slider",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - WebView",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int16Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - CustomLayoutView",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - CustomLayoutView",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Switch",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - AndroidFrame",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint8Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"slice( start?: number, end?: number ): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Progress",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Uint8Array\tNativeScript - Uint8Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"lastIndexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int8Array",
			"lastIndexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Repeater",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"scrollToVerticalOffset( value: number, animated: boolean ): any\tNativeScript - ScrollView",
			"scrollToVerticalOffset(${1:value: number}, ${2:animated: boolean})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Image",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - Border",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - TextView",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - Layout",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint8Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - ListView",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - TabView",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int32Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - StackLayout",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Int32Array\tNativeScript - Int32Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - TabView",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Border",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint32Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"ArrayConstructor( arrayLength: number ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"ArrayConstructor(${1:arrayLength: number})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: T[] ): T\tNativeScript - Array<T, T>",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: T[]})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Int32Array\tNativeScript - Int32Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - Switch",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int32Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"ObservableArray<T>( ...items: T[] ): ObservableArray<T>\tNativeScript - ObservableArray<T>",
			"ObservableArray<T>(${1:...items: T[]})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint16Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - TextBase",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Slider",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanT\tNativeScript - ObservableArray<T>",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"indexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - ObservableArray<T>",
			"indexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"notifyEvent( object: Object, name: string, data?: any ): any\tNativeScript - Module trace",
			"notifyEvent(${1:object: Object}, ${2:name: string}, ${3:data?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ContentView",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"new StringConstructor( value?: any ): StringConstructor\tNativeScript - StringConstructor",
			"new StringConstructor(${1:value?: any})"
		],
		[
			"PromiseConstructor( reason?: any ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"PromiseConstructor(${1:reason?: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Float64Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Button",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - EditableTextBase",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Label",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - TabViewItem",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Float64Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - StackLayout",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - TabViewItem",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"setString( key: string, value: string ): void\tNativeScript - Module application-settings",
			"setString(${1:key: string}, ${2:value: string})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanInt8Array\tNativeScript - Int8Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - TabViewItem",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"onprogress: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestUpload",
			"onprogress"
		],
		[
			"setNumber( key: string, value: number ): void\tNativeScript - Module application-settings",
			"setNumber(${1:key: string}, ${2:value: number})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int16Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_onTextPropertyChanged( data: PropertyChangeData ): void\tNativeScript - EditableTextBase",
			"_onTextPropertyChanged(${1:data: PropertyChangeData})"
		],
		[
			"on( eventNames: string, callback: function, thisArg?: any ): voidany\tNativeScript - Span",
			"on(${1:eventNames: string}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"onprogress: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestUpload",
			"onprogress"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - ActivityIndicator",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Layout",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ContentView",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"getFolder( path: string, onError?: function ): anyobject\tNativeScript - FileSystemAccess",
			"getFolder(${1:path: string}, ${2:onError?: function})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - RegExpMatchArray",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"getFloat64( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getFloat64(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"emptyFolder( path: string, onError?: function ): anyvoid\tNativeScript - FileSystemAccess",
			"emptyFolder(${1:path: string}, ${2:onError?: function})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberUint16Array\tNativeScript - Uint16Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"PromiseConstructor( reason?: any ): PromiseConstructor\tNativeScript - PromiseConstructor",
			"PromiseConstructor(${1:reason?: any})"
		],
		[
			"getFloat32( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getFloat32(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Float64Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Placeholder",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - CustomLayoutView",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - Page",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Switch",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - Image",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new NumberConstructor( value?: any ): NumberConstructor\tNativeScript - NumberConstructor",
			"new NumberConstructor(${1:value?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - WrapLayout",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int8Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - StackLayout",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int8Array",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Frame",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint8Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Slider",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Switch",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Repeater",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - TabView",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - LayoutBase",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - TextView",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Float32Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - TimePicker",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"deleteFolder( path: string, onError?: function ): anyany\tNativeScript - FileSystemAccess",
			"deleteFolder(${1:path: string}, ${2:onError?: function})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Float32Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - ActivityIndicator",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - CustomLayoutView",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Progress",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"new StringConstructor( value?: any ): StringConstructor\tNativeScript - StringConstructor",
			"new StringConstructor(${1:value?: any})"
		],
		[
			"measure( widthMeasureSpec: number, heightMeasureSpec: number ): void\tNativeScript - View",
			"measure(${1:widthMeasureSpec: number}, ${2:heightMeasureSpec: number})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): booleanInt8Array\tNativeScript - Int8Array",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Float32Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - NavigationButton",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - AbsoluteLayout",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - Label",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ProxyObject",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Float64Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Placeholder",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint8Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"updateSpansBindingContext( newBindingContext: any ): void\tNativeScript - FormattedString",
			"updateSpansBindingContext(${1:newBindingContext: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - GridLayout",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getFloat64( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getFloat64(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - DatePicker",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberUint32Array\tNativeScript - Uint32Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"getFloat32( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getFloat32(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ProxyObject",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - ListView",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"on( event: \"navigatingTo\", callback: function, thisArg?: any ): void\tNativeScript - Page",
			"on(${1:event: \"navigatingTo\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - SegmentedBar",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - WebView",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"new ObjectConstructor( value?: any ): ObjectConstructor\tNativeScript - ObjectConstructor",
			"new ObjectConstructor(${1:value?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - DockLayout",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - AbsoluteLayout",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Border",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ProxyObject",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"scroll\", callback: function, thisArg?: any ): void\tNativeScript - ScrollView",
			"on(${1:event: \"scroll\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"insertTab( tabItem: SegmentedBarItem, index?: number ): void\tNativeScript - SegmentedBar",
			"insertTab(${1:tabItem: SegmentedBarItem}, ${2:index?: number})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - ListPicker",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - HtmlView",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"getParent( path: string, onError?: function ): anyobject\tNativeScript - FileSystemAccess",
			"getParent(${1:path: string}, ${2:onError?: function})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Float32Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"new ObjectConstructor( value?: any ): ObjectConstructor\tNativeScript - ObjectConstructor",
			"new ObjectConstructor(${1:value?: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - EditableTextBase",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberUint32Array\tNativeScript - Uint32Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Layout",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Slider",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"new NumberConstructor( value?: any ): NumberConstructor\tNativeScript - NumberConstructor",
			"new NumberConstructor(${1:value?: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - RegExpMatchArray",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"isEventOrGesture( name: string, view: View ): boolean\tNativeScript - Module ui/core/view",
			"isEventOrGesture(${1:name: string}, ${2:view: View})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int32Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int32Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Image",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Button",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - TextBase",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int16Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Border",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - SegmentedBarItem",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberUint16Array\tNativeScript - Uint16Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int8Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): T\tNativeScript - ObservableArray<T>",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Image",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Layout",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - DatePicker",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint32Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"new ActivityIndicator( json?: any ): ActivityIndicator\tNativeScript - ActivityIndicator",
			"new ActivityIndicator(${1:json?: any})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - CustomLayoutView",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - TimePicker",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ScrollView",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Float32Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint32Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Switch",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - StackLayout",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - DatePicker",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint16Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"new ArrayConstructor( ...items: T[] ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"new ArrayConstructor(${1:...items: T[]})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Observable",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - GridLayout",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ScrollView",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Border",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - WebView",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"of( ...items: number[] ): Uint8ClampedArray\tNativeScript - Uint8ClampedArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - CustomLayoutView",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - TabView",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Int8Array\tNativeScript - Int8Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"findIndex( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int8Array",
			"findIndex(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"BooleanConstructor( value?: any ): BooleanConstructor\tNativeScript - BooleanConstructor",
			"BooleanConstructor(${1:value?: any})"
		],
		[
			"parse( value: string | Template, exports?: any ): View\tNativeScript - Module ui/builder",
			"parse(${1:value: string | Template}, ${2:exports?: any})"
		],
		[
			"set( array: Uint8ClampedArray, offset?: number ): void\tNativeScript - Uint8ClampedArray",
			"set(${1:array: Uint8ClampedArray}, ${2:offset?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - GridLayout",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Array<T, T>",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"VirtualArray<T>( arrayLength?: number ): VirtualArray<T>\tNativeScript - VirtualArray<T>",
			"VirtualArray<T>(${1:arrayLength?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Slider",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - EditableTextBase",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Placeholder",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - ActionItem",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - RegExpExecArray",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"parse( code: string, options?: Options ): Program\tNativeScript - Module js-libs/esprima",
			"parse(${1:code: string}, ${2:options?: Options})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Array<T, T>",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint32Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - TimePicker",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"getUint16( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getUint16(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"getUint32( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getUint32(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint16Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ActionItem",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - AbsoluteLayout",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ActionItem",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"fill( value: number, start?: number, end?: number ): Int8Array\tNativeScript - Int8Array",
			"fill(${1:value: number}, ${2:start?: number}, ${3:end?: number})"
		],
		[
			"set( array: Uint8ClampedArray, offset?: number ): void\tNativeScript - Uint8ClampedArray",
			"set(${1:array: Uint8ClampedArray}, ${2:offset?: number})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint16Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint32Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - EditableTextBase",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"new ArrayConstructor( ...items: T[] ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"new ArrayConstructor(${1:...items: T[]})"
		],
		[
			"of( ...items: number[] ): Uint8ClampedArray\tNativeScript - Uint8ClampedArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - WrapLayout",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"BooleanConstructor( value?: any ): BooleanConstructor\tNativeScript - BooleanConstructor",
			"BooleanConstructor(${1:value?: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - DependencyObservable",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Button",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"write( message: any, category: string, type?: number ): any\tNativeScript - Module trace",
			"write(${1:message: any}, ${2:category: string}, ${3:type?: number})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - AbsoluteLayout",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"restoreOriginalParams( layoutBase: LayoutBase ): void\tNativeScript - ProxyViewContainer",
			"restoreOriginalParams(${1:layoutBase: LayoutBase})"
		],
		[
			"catch<U>( onRejected?: function ): PromiseLikeUPromiseU\tNativeScript - AnimationPromise",
			"catch<U>(${1:onRejected?: function})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - DockLayout",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"getUint16( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getUint16(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"getUint32( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getUint32(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"on( event: \"downloaded\", callback: function, thisArg?: any ): void\tNativeScript - Cache",
			"on(${1:event: \"downloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"on( event: \"unloaded\", callback: function, thisArg?: any ): voidany\tNativeScript - View",
			"on(${1:event: \"unloaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - RegExpExecArray",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - ActionBar",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Label",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - WrapLayout",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - LayoutBase",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ListPicker",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Label",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - LayoutBase",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"onloadend: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestUpload",
			"onloadend"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Frame",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"ontimeout: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestUpload",
			"ontimeout"
		],
		[
			"on( event: \"submit\", callback: function, thisArg?: any ): void\tNativeScript - SearchBar",
			"on(${1:event: \"submit\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Float64Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ListPicker",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Float64Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - DockLayout",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Style",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - Page",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"JavaProxy( nativeClassName: string ): ClassDecorator\tNativeScript - Module NativeScript",
			"JavaProxy(${1:nativeClassName: string})"
		],
		[
			"onloadend: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestUpload",
			"onloadend"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ProxyViewContainer",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Frame",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - TextField",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Float32Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ProxyViewContainer",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Style",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"fromAstNodes( astRules: Node[] ): RuleSet\tNativeScript - Module ui/styling/css-selector",
			"fromAstNodes(${1:astRules: Node[]})"
		],
		[
			"ontimeout: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequestUpload",
			"ontimeout"
		],
		[
			"takePicture( options?: CameraOptions ): PromiseImageSource\tNativeScript - Module camera",
			"takePicture(${1:options?: CameraOptions})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - ContentView",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_addViewToNativeVisualTree( view: View, atIndex?: number ): boolean\tNativeScript - View",
			"_addViewToNativeVisualTree(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint16Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Image",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Cache",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"new Response( body?: BodyInit, init?: ResponseInit ): Response\tNativeScript - Response",
			"new Response(${1:body?: BodyInit}, ${2:init?: ResponseInit})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - LayoutBase",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ActionBar",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - TextField",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberInt32Array\tNativeScript - Int32Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"Request( input: string | Request, init?: RequestInit ): Request\tNativeScript - Request",
			"Request(${1:input: string | Request}, ${2:init?: RequestInit})"
		],
		[
			"new ScopeError( child: Error, message?: string ): ScopeError\tNativeScript - ScopeError",
			"new ScopeError(${1:child: Error}, ${2:message?: string})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - HtmlView",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - GridLayout",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Float32Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"lastIndexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - Array<T, T>",
			"lastIndexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Float32Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int16Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - ListPicker",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Float64Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"getInt32( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getInt32(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - View",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - SearchBar",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"getInt16( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getInt16(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"deleteFile( path: string, onError?: function ): anyany\tNativeScript - FileSystemAccess",
			"deleteFile(${1:path: string}, ${2:onError?: function})"
		],
		[
			"ObservableArray<T>( items: T[] ): ObservableArray<T>\tNativeScript - ObservableArray<T>",
			"ObservableArray<T>(${1:items: T[]})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Float64Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Image",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"new Response( body?: BodyInit, init?: ResponseInit ): Response\tNativeScript - Response",
			"new Response(${1:body?: BodyInit}, ${2:init?: ResponseInit})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberInt16Array\tNativeScript - Int16Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - Repeater",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Frame",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ActionBar",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"getFile( path: string, onError?: function ): anyobject\tNativeScript - FileSystemAccess",
			"getFile(${1:path: string}, ${2:onError?: function})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Style",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int32Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint32Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int16Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"prompt( options: PromptOptions ): PromisePromptResult\tNativeScript - Module ui/dialogs",
			"prompt(${1:options: PromptOptions})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - TextView",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - SearchBar",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberUint8Array\tNativeScript - Uint8Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - View",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint16Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Switch",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - SegmentedBar",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"replace( searchValue: string, replacer: function ): stringstring\tNativeScript - String",
			"replace(${1:searchValue: string}, ${2:replacer: function})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - Progress",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint16Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - AbsoluteLayout",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint8Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int16Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ActivityIndicator",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - DatePicker",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_checkMetadataOnPropertyChanged( metadata: PropertyMetadata ): any\tNativeScript - Page",
			"_checkMetadataOnPropertyChanged(${1:metadata: PropertyMetadata})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int16Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"Transition( duration: number, nativeCurve: any ): Transition\tNativeScript - Transition",
			"Transition(${1:duration: number}, ${2:nativeCurve: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Array<T, T>",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Slider",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - ScrollView",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"ErrorConstructor( message?: string ): ErrorConstructor\tNativeScript - ErrorConstructor",
			"ErrorConstructor(${1:message?: string})"
		],
		[
			"getInt16( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getInt16(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberInt16Array\tNativeScript - Int16Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Page",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint8Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"getInt32( byteOffset: number, littleEndian?: boolean ): number\tNativeScript - DataView",
			"getInt32(${1:byteOffset: number}, ${2:littleEndian?: boolean})"
		],
		[
			"_setValue( property: Property, value: any, source?: number ): void\tNativeScript - Span",
			"_setValue(${1:property: Property}, ${2:value: any}, ${3:source?: number})"
		],
		[
			"ErrorConstructor( message?: string ): ErrorConstructor\tNativeScript - ErrorConstructor",
			"ErrorConstructor(${1:message?: string})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Label",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"reduce( callbackfn: function, initialValue?: T ): TT\tNativeScript - ObservableArray<T>",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - WrapLayout",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"setFullYear( year: number, month?: number, date?: number ): number\tNativeScript - Date",
			"setFullYear(${1:year: number}, ${2:month?: number}, ${3:date?: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int32Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Array<T, T>",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Border",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Layout",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint8Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - DockLayout",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Style",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - TextField",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_addArrayFromBuilder( name: string, value: Array<any> ): void\tNativeScript - ActionBar",
			"_addArrayFromBuilder(${1:name: string}, ${2:value: Array<any>})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int32Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"Request( input: string | Request, init?: RequestInit ): Request\tNativeScript - Request",
			"Request(${1:input: string | Request}, ${2:init?: RequestInit})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Button",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"ProxyViewContainer( json?: any ): ProxyViewContainer\tNativeScript - ProxyViewContainer",
			"ProxyViewContainer(${1:json?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - TextBase",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"lastIndexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - Array<T, T>",
			"lastIndexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - EditableTextBase",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"getImage( options: HttpRequestOptions ): PromiseImageSource\tNativeScript - Module http",
			"getImage(${1:options: HttpRequestOptions})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - TimePicker",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - SegmentedBar",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ActivityIndicator",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberInt32Array\tNativeScript - Int32Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"replace( searchValue: string, replacer: function ): stringstring\tNativeScript - String",
			"replace(${1:searchValue: string}, ${2:replacer: function})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Uint8Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"request( options: HttpRequestOptions ): PromiseHttpResponse\tNativeScript - Module http",
			"request(${1:options: HttpRequestOptions})"
		],
		[
			"write( message: any, category: string, type?: number ): any\tNativeScript - TraceWriter",
			"write(${1:message: any}, ${2:category: string}, ${3:type?: number})"
		],
		[
			"setFullYear( year: number, month?: number, date?: number ): number\tNativeScript - Date",
			"setFullYear(${1:year: number}, ${2:month?: number}, ${3:date?: number})"
		],
		[
			"sort( compareFn?: function ): numberUint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"sort(${1:compareFn?: function})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint32Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberUint8Array\tNativeScript - Uint8Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int32Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"sort( compareFn?: function ): numberUint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"sort(${1:compareFn?: function})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - AbsoluteLayout",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Frame",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int8Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Label",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - TextView",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - ListView",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Progress",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint8Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int16Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Bindable",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"new XmlParser( error: Error, position: Position ): XmlParser\tNativeScript - XmlParser",
			"new XmlParser(${1:error: Error}, ${2:position: Position})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - CustomLayoutView",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): U\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Span",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int32Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"setRequestHeader( header: string, value: string ): void\tNativeScript - XMLHttpRequest",
			"setRequestHeader(${1:header: string}, ${2:value: string})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Repeater",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - ContentView",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Bindable",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"then<U>( onFulfilled?: function, onRejected?: function ): U\tNativeScript - Promise<T>",
			"then<U>(${1:onFulfilled?: function}, ${2:onRejected?: function})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int8Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int8Array",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"setRequestHeader( header: string, value: string ): void\tNativeScript - XMLHttpRequest",
			"setRequestHeader(${1:header: string}, ${2:value: string})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - TemplateStringsArray",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int32Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Repeater",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - CustomLayoutView",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Bindable",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_onColumnRemoved( itemSpec: ItemSpec, index: number ): void\tNativeScript - GridLayout",
			"_onColumnRemoved(${1:itemSpec: ItemSpec}, ${2:index: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - StackLayout",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): T\tNativeScript - Array<T, T>",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - TextView",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - AbsoluteLayout",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - View",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - TextBase",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint32Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - FormattedString",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - SegmentedBar",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"indexOf( searchElement: number, fromIndex?: number ): number\tNativeScript - Int8Array",
			"indexOf(${1:searchElement: number}, ${2:fromIndex?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - HtmlView",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - TemplateStringsArray",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"new Source( uri: string, line: number, column: number ): Source\tNativeScript - Source",
			"new Source(${1:uri: string}, ${2:line: number}, ${3:column: number})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - AbsoluteLayout",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int16Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ProxyViewContainer",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"slice( start?: number, end?: number, contentType?: string ): Blob\tNativeScript - Blob",
			"slice(${1:start?: number}, ${2:end?: number}, ${3:contentType?: string})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - SegmentedBarItem",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Placeholder",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: T[] ): T\tNativeScript - List<T>",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: T[]})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): T\tNativeScript - Array<T, T>",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - SegmentedBar",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Progress",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - HtmlView",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - EditableTextBase",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - TextField",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Placeholder",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Float64Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Uint8Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - TextBase",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - SegmentedBarItem",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"encodeURIComponent( uriComponent: string ): string\tNativeScript - Module NativeScript",
			"encodeURIComponent(${1:uriComponent: string})"
		],
		[
			"slice( start?: number, end?: number, contentType?: string ): Blob\tNativeScript - Blob",
			"slice(${1:start?: number}, ${2:end?: number}, ${3:contentType?: string})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - ProxyViewContainer",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_setFormattedTextPropertyToNative( value: any ): void\tNativeScript - EditableTextBase",
			"_setFormattedTextPropertyToNative(${1:value: any})"
		],
		[
			"splice( start: number, deleteCount: number, ...items: T[] ): T\tNativeScript - List<T>",
			"splice(${1:start: number}, ${2:deleteCount: number}, ${3:...items: T[]})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - EditableTextBase",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint16Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint16Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"notifyPropertyChange( propertyName: string, newValue: any ): void\tNativeScript - Page",
			"notifyPropertyChange(${1:propertyName: string}, ${2:newValue: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - StackLayout",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - ListView",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Float32Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - ProxyViewContainer",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - SearchBar",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"on( eventNames: string, callback: function ): voidany\tNativeScript - NavigationButton",
			"on(${1:eventNames: string}, ${2:callback: function})"
		],
		[
			"toBase64String( format: string, quality?: number ): string\tNativeScript - ImageSource",
			"toBase64String(${1:format: string}, ${2:quality?: number})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - NavigationButton",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Float64Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint32Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - ActionBar",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - NavigationButton",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - ContentView",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Image",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Float32Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - TabView",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Float32Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - ContentView",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - LayoutBase",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"new NavigationButton( json?: any ): NavigationButton\tNativeScript - NavigationButton",
			"new NavigationButton(${1:json?: any})"
		],
		[
			"new DateConstructor( value: number ): DateConstructor\tNativeScript - DateConstructor",
			"new DateConstructor(${1:value: number})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - Border",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - DockLayout",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - HtmlView",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint32Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"new SegmentedBarItem( json?: any ): SegmentedBarItem\tNativeScript - SegmentedBarItem",
			"new SegmentedBarItem(${1:json?: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Float64Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - WebView",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - DockLayout",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - ListPicker",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Float32Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Progress",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - Switch",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"new DateConstructor( value: string ): DateConstructor\tNativeScript - DateConstructor",
			"new DateConstructor(${1:value: string})"
		],
		[
			"lastIndexOf( searchString: string, position?: number ): number\tNativeScript - String",
			"lastIndexOf(${1:searchString: string}, ${2:position?: number})"
		],
		[
			"new DateConstructor( value: number ): DateConstructor\tNativeScript - DateConstructor",
			"new DateConstructor(${1:value: number})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - ProxyViewContainer",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - DatePicker",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint16Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberInt8Array\tNativeScript - Int8Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint8Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int32Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - ScrollView",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"registerNoStylingClass( className: any ): any\tNativeScript - Module ui/styling/style",
			"registerNoStylingClass(${1:className: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Float64Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - ListView",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - LayoutBase",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - TimePicker",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint16Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint32Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: T ): TT\tNativeScript - Array<T, T>",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - ListPicker",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - WebView",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - StackLayout",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - Layout",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"readTextSync( onError?: function, encoding?: string ): anystring\tNativeScript - File",
			"readTextSync(${1:onError?: function}, ${2:encoding?: string})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int16Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"new DateConstructor( value: string ): DateConstructor\tNativeScript - DateConstructor",
			"new DateConstructor(${1:value: string})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - WrapLayout",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - TimePicker",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - DatePicker",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Placeholder",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - TabView",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - GridLayout",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"NumberConstructor( value?: any ): NumberConstructor\tNativeScript - NumberConstructor",
			"NumberConstructor(${1:value?: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - SegmentedBar",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - StackLayout",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - View",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"StringConstructor( value?: any ): StringConstructor\tNativeScript - StringConstructor",
			"StringConstructor(${1:value?: any})"
		],
		[
			"ObjectConstructor( value?: any ): ObjectConstructor\tNativeScript - ObjectConstructor",
			"ObjectConstructor(${1:value?: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int32Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - TextView",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: T ): TT\tNativeScript - Array<T, T>",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Repeater",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"resolveFileName( path: string, ext: string ): string\tNativeScript - FileNameResolver",
			"resolveFileName(${1:path: string}, ${2:ext: string})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Placeholder",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_clearBackwardTransitions( fragment: any ): void\tNativeScript - Module ui/transition",
			"_clearBackwardTransitions(${1:fragment: any})"
		],
		[
			"lastIndexOf( searchString: string, position?: number ): number\tNativeScript - String",
			"lastIndexOf(${1:searchString: string}, ${2:position?: number})"
		],
		[
			"getGestureObservers( type: GestureTypes ): ArrayGesturesObserver\tNativeScript - Page",
			"getGestureObservers(${1:type: GestureTypes})"
		],
		[
			"new CustomLayoutView( json?: any ): CustomLayoutView\tNativeScript - CustomLayoutView",
			"new CustomLayoutView(${1:json?: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - SegmentedBar",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ActivityIndicator",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"map( callbackfn: function, thisArg?: any ): numberInt8Array\tNativeScript - Int8Array",
			"map(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - Slider",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - WrapLayout",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - GridLayout",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int8Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int16Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - ActivityIndicator",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - ScrollView",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - ActivityIndicator",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"NumberConstructor( value?: any ): NumberConstructor\tNativeScript - NumberConstructor",
			"NumberConstructor(${1:value?: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Uint8Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"new FPSCallback( currentTimeMillis: number ): FPSCallback\tNativeScript - FPSCallback",
			"new FPSCallback(${1:currentTimeMillis: number})"
		],
		[
			"StringConstructor( value?: any ): StringConstructor\tNativeScript - StringConstructor",
			"StringConstructor(${1:value?: any})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - Int8Array",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"new EditableTextBase( json?: any ): EditableTextBase\tNativeScript - EditableTextBase",
			"new EditableTextBase(${1:json?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - TextBase",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"ObjectConstructor( value?: any ): ObjectConstructor\tNativeScript - ObjectConstructor",
			"ObjectConstructor(${1:value?: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - ContentView",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - SegmentedBarItem",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - GridLayout",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - ProxyViewContainer",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - TimePicker",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - ScrollView",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"restoreOriginalParams( layoutBase: LayoutBase ): void\tNativeScript - AbsoluteLayout",
			"restoreOriginalParams(${1:layoutBase: LayoutBase})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - CustomLayoutView",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"ActivityIndicator( json?: any ): ActivityIndicator\tNativeScript - ActivityIndicator",
			"ActivityIndicator(${1:json?: any})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int32Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_setNavBarColor( navBar: any, color: any ): any\tNativeScript - Module ui/action-bar",
			"_setNavBarColor(${1:navBar: any}, ${2:color: any})"
		],
		[
			"login( options: LoginOptions ): PromiseLoginResult\tNativeScript - Module ui/dialogs",
			"login(${1:options: LoginOptions})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - DockLayout",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Array<T, T>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ProxyObject",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - StackLayout",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - TabView",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint8Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - SearchBar",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int16Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"setUTCMinutes( min: number, sec?: number, ms?: number ): number\tNativeScript - Date",
			"setUTCMinutes(${1:min: number}, ${2:sec?: number}, ${3:ms?: number})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - LayoutBase",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - StackLayout",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Uint32Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - DockLayout",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Uint16Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - CustomLayoutView",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - AbsoluteLayout",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Slider",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - TimePicker",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - ActionBar",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Button",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - ListPicker",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - Image",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - NavigationButton",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - LayoutBase",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - ListPicker",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - EditableTextBase",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - WebView",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - AbsoluteLayout",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - ScrollView",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - ProxyViewContainer",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Button",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - GridLayout",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int32Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"createAndroidAnimator( transitionType: string ): any\tNativeScript - SlideTransition",
			"createAndroidAnimator(${1:transitionType: string})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Switch",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"setUTCMinutes( min: number, sec?: number, ms?: number ): number\tNativeScript - Date",
			"setUTCMinutes(${1:min: number}, ${2:sec?: number}, ${3:ms?: number})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - WrapLayout",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - EditableTextBase",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"insertChild( child: View, atIndex: number ): void\tNativeScript - ProxyViewContainer",
			"insertChild(${1:child: View}, ${2:atIndex: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - TabViewItem",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - ActivityIndicator",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - SearchBar",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_clearForwardTransitions( fragment: any ): void\tNativeScript - Module ui/transition",
			"_clearForwardTransitions(${1:fragment: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Border",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Uint32Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"ArrayConstructor( ...items: T[] ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"ArrayConstructor(${1:...items: T[]})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Layout",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - List<T>",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - EditableTextBase",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Switch",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Placeholder",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - ContentView",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int8Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): number\tNativeScript - Int8Array",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"createAndroidAnimator( transitionType: string ): any\tNativeScript - SlideTransition",
			"createAndroidAnimator(${1:transitionType: string})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Layout",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int16Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - CustomLayoutView",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - TextField",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - DatePicker",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Placeholder",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Slider",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Array<T, T>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - ObservableArray<T>",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - Label",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - ActionBar",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - SegmentedBar",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Uint16Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"resolvePageFromEntry( entry: NavigationEntry ): Page\tNativeScript - Module ui/frame",
			"resolvePageFromEntry(${1:entry: NavigationEntry})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - DatePicker",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - WrapLayout",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Uint8Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"every( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - List<T>",
			"every(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"equals( value1: Background, value2: Background ): boolean\tNativeScript - Background",
			"equals(${1:value1: Background}, ${2:value2: Background})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - TextField",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"confirm( options: ConfirmOptions ): Promiseboolean\tNativeScript - Module ui/dialogs",
			"confirm(${1:options: ConfirmOptions})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ContentView",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Border",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - SegmentedBar",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"ArrayConstructor( ...items: T[] ): ArrayConstructor\tNativeScript - ArrayConstructor",
			"ArrayConstructor(${1:...items: T[]})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - List<T>",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - TextField",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Label",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"lastIndexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - List<T>",
			"lastIndexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - SegmentedBar",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Progress",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - WrapLayout",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - ActionBar",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Style",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Image",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - ActionBar",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Uint8Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Int16Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"onprogress: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequest",
			"onprogress"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int8Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"find( predicate: function, thisArg?: any ): booleannumber\tNativeScript - Int8Array",
			"find(${1:predicate: function}, ${2:thisArg?: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - TextField",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - ContentView",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Int32Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Frame",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"on( event: \"loaded\", callback: function, thisArg?: any ): void\tNativeScript - View",
			"on(${1:event: \"loaded\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Float64Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Frame",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Label",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - ProxyViewContainer",
			"_eachChildView(${1:callback: function})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Int16Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Button",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - SearchBar",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"some( callbackfn: function, thisArg?: any ): booleanboolean\tNativeScript - List<T>",
			"some(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - StackLayout",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Float64Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - SearchBar",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"replace( searchValue: RegExp, replaceValue: string ): string\tNativeScript - String",
			"replace(${1:searchValue: RegExp}, ${2:replaceValue: string})"
		],
		[
			"getString( options: HttpRequestOptions ): Promisestring\tNativeScript - Module http",
			"getString(${1:options: HttpRequestOptions})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - ContentView",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ActionItem",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"replace( searchValue: string, replaceValue: string ): string\tNativeScript - String",
			"replace(${1:searchValue: string}, ${2:replaceValue: string})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - StackLayout",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"getAnimations( ruleset: RuleSet ): KeyframeAnimationInfo\tNativeScript - StyleScope",
			"getAnimations(${1:ruleset: RuleSet})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Float32Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Switch",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - HtmlView",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Progress",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Int32Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - TextView",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Placeholder",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Float32Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - ListView",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - WrapLayout",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - DockLayout",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Style",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - DockLayout",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Uint8Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - LayoutBase",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - LayoutBase",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - TextBase",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"fromFileOrResource( path: string ): ImageSource\tNativeScript - Module image-source",
			"fromFileOrResource(${1:path: string})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - CustomLayoutView",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"lastIndexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - List<T>",
			"lastIndexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"replace( searchValue: RegExp, replaceValue: string ): string\tNativeScript - String",
			"replace(${1:searchValue: RegExp}, ${2:replaceValue: string})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - EditableTextBase",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ListPicker",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Image",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - ListPicker",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Border",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - DatePicker",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"replace( searchValue: string, replaceValue: string ): string\tNativeScript - String",
			"replace(${1:searchValue: string}, ${2:replaceValue: string})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - DatePicker",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"ScopeError( child: Error, message?: string ): ScopeError\tNativeScript - ScopeError",
			"ScopeError(${1:child: Error}, ${2:message?: string})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - TextView",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - ScrollView",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Repeater",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Cache",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ScrollView",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"onprogress: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequest",
			"onprogress"
		],
		[
			"_onRowRemoved( itemSpec: ItemSpec, index: number ): void\tNativeScript - GridLayout",
			"_onRowRemoved(${1:itemSpec: ItemSpec}, ${2:index: number})"
		],
		[
			"resolve<T>( promise?: PromiseLike<T> ): PromiseT\tNativeScript - PromiseConstructor",
			"resolve<T>(${1:promise?: PromiseLike<T>})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - ActivityIndicator",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"indexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - Array<T, T>",
			"indexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - GridLayout",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - GridLayout",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"indexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - Array<T, T>",
			"indexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"Response( body?: BodyInit, init?: ResponseInit ): Response\tNativeScript - Response",
			"Response(${1:body?: BodyInit}, ${2:init?: ResponseInit})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Repeater",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - ActivityIndicator",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"createAndroidAnimator( transitionType: string ): any\tNativeScript - FadeTransition",
			"createAndroidAnimator(${1:transitionType: string})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - TextBase",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - TimePicker",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"Response( body?: BodyInit, init?: ResponseInit ): Response\tNativeScript - Response",
			"Response(${1:body?: BodyInit}, ${2:init?: ResponseInit})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Layout",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Slider",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"resolve<T>( promise?: PromiseLike<T> ): PromiseT\tNativeScript - PromiseConstructor",
			"resolve<T>(${1:promise?: PromiseLike<T>})"
		],
		[
			"createAndroidAnimator( transitionType: string ): any\tNativeScript - FadeTransition",
			"createAndroidAnimator(${1:transitionType: string})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - HtmlView",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Placeholder",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - TimePicker",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - ListView",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Page",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Span",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Uint32Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): T\tNativeScript - List<T>",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - SearchBar",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Int8Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - DatePicker",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"subarray( begin: number, end?: number ): Float32Array\tNativeScript - Float32Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - View",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"Source( uri: string, line: number, column: number ): Source\tNativeScript - Source",
			"Source(${1:uri: string}, ${2:line: number}, ${3:column: number})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - ProxyViewContainer",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"eachLayoutChild( callback: function ): voidvoid\tNativeScript - ProxyViewContainer",
			"eachLayoutChild(${1:callback: function})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - EditableTextBase",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - DockLayout",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - TimePicker",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Label",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"_onContentChanged( oldView: View, newView: View ): any\tNativeScript - ContentView",
			"_onContentChanged(${1:oldView: View}, ${2:newView: View})"
		],
		[
			"on( event: \"tap\", callback: function, thisArg?: any ): void\tNativeScript - Button",
			"on(${1:event: \"tap\"}, ${2:callback: function}, ${3:thisArg?: any})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - SegmentedBar",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"subarray( begin: number, end?: number ): Float64Array\tNativeScript - Float64Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Int8Array",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"ontimeout: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequest",
			"ontimeout"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Frame",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - TextView",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"setLayerType( layerType: number, paint: any ): void\tNativeScript - CacheLayerType",
			"setLayerType(${1:layerType: number}, ${2:paint: any})"
		],
		[
			"_onTextPropertyChanged( data: PropertyChangeData ): void\tNativeScript - TextField",
			"_onTextPropertyChanged(${1:data: PropertyChangeData})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - TextView",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"ontimeout: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequest",
			"ontimeout"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Map<K, V>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): boolean\tNativeScript - Array<T, T>",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - ScrollView",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"filter( callbackfn: function, thisArg?: any ): boolean\tNativeScript - Array<T, T>",
			"filter(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"slice( start?: number, end?: number ): string\tNativeScript - TemplateStringsArray",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"onloadend: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequest",
			"onloadend"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - GridLayout",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - WrapLayout",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"onloadend: functionProgressEventanyProgressEventany\tNativeScript - XMLHttpRequest",
			"onloadend"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Uint16Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Map<K, V>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - CustomLayoutView",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - View",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - DependencyObservable",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Image",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - RegExpMatchArray",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - TextBase",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"fromObjectRecursive( obj: any ): Observable\tNativeScript - Module data/observable",
			"fromObjectRecursive(${1:obj: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - HtmlView",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - TextField",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - TabView",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - ListView",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - ListPicker",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - EditableTextBase",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"reduceRight<U>( callbackfn: function, initialValue: U ): T\tNativeScript - List<T>",
			"reduceRight<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Uint16Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_onBindingContextChanged( oldValue: any, newValue: any ): any\tNativeScript - Span",
			"_onBindingContextChanged(${1:oldValue: any}, ${2:newValue: any})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - ProxyViewContainer",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - ListPicker",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - GridLayout",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - DatePicker",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"off( eventNames: string, callback?: any, thisArg?: any ): any\tNativeScript - Span",
			"off(${1:eventNames: string}, ${2:callback?: any}, ${3:thisArg?: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - TextBase",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - AbsoluteLayout",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Repeater",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - TextField",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Progress",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - WrapLayout",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"XmlParser( error: Error, position: Position ): XmlParser\tNativeScript - XmlParser",
			"XmlParser(${1:error: Error}, ${2:position: Position})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - CustomLayoutView",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - ActionBar",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Repeater",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - AbsoluteLayout",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ActionBar",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Progress",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - ActivityIndicator",
			"_eachChildView(${1:callback: function})"
		],
		[
			"distance( loc1: Location, loc2: Location ): number\tNativeScript - LocationManager",
			"distance(${1:loc1: Location}, ${2:loc2: Location})"
		],
		[
			"slice( start?: number, end?: number ): string\tNativeScript - TemplateStringsArray",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - LayoutBase",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - TimePicker",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"subarray( begin: number, end?: number ): Float64Array\tNativeScript - Float64Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"subarray( begin: number, end?: number ): Float32Array\tNativeScript - Float32Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"catch<U>( onRejected?: function ): PromiseLikeUPromiseU\tNativeScript - Promise<T>",
			"catch<U>(${1:onRejected?: function})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - WebView",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - SegmentedBar",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - ListView",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - AbsoluteLayout",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - DockLayout",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - TabView",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - RegExpMatchArray",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - SearchBar",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - ScrollView",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"getExpression( expression: string ): Expression\tNativeScript - PolymerExpressions",
			"getExpression(${1:expression: string})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - LayoutBase",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"catch<U>( onRejected?: function ): PromiseLikeUPromiseU\tNativeScript - Promise<T>",
			"catch<U>(${1:onRejected?: function})"
		],
		[
			"_updateTwoWayBinding( propertyName: string, value: any ): any\tNativeScript - Page",
			"_updateTwoWayBinding(${1:propertyName: string}, ${2:value: any})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - ContentView",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - HtmlView",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - WebView",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Uint32Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Switch",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_onTextPropertyChanged( data: PropertyChangeData ): void\tNativeScript - TextView",
			"_onTextPropertyChanged(${1:data: PropertyChangeData})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Int32Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Placeholder",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - RegExpExecArray",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Placeholder",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"isFileOrResourcePath( path: string ): boolean\tNativeScript - Module image-source",
			"isFileOrResourcePath(${1:path: string})"
		],
		[
			"on( eventNames: string, callback: function ): voidany\tNativeScript - Placeholder",
			"on(${1:eventNames: string}, ${2:callback: function})"
		],
		[
			"on( event: \"creatingView\", callback: function ): void\tNativeScript - Placeholder",
			"on(${1:event: \"creatingView\"}, ${2:callback: function})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - TextView",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ContentView",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - ActionBar",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"indexOf( searchString: string, position?: number ): number\tNativeScript - String",
			"indexOf(${1:searchString: string}, ${2:position?: number})"
		],
		[
			"replace( searchValue: RegExp, replacer: function ): string\tNativeScript - String",
			"replace(${1:searchValue: RegExp}, ${2:replacer: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ContentView",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"toImage: functionPromiseImageSourcePromiseImageSource\tNativeScript - HttpContent",
			"toImage"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: T ): TT\tNativeScript - List<T>",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"FPSCallback( currentTimeMillis: number ): FPSCallback\tNativeScript - FPSCallback",
			"FPSCallback(${1:currentTimeMillis: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Progress",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"on( object: Object, name: string, data?: any ): any\tNativeScript - EventListener",
			"on(${1:object: Object}, ${2:name: string}, ${3:data?: any})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - CustomLayoutView",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Progress",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"read( path: string, onError?: function ): anyany\tNativeScript - FileSystemAccess",
			"read(${1:path: string}, ${2:onError?: function})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - ActionBar",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - TextView",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - View",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Uint8Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Int16Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - TextField",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"restoreOriginalParams( layoutBase: LayoutBase ): void\tNativeScript - StackLayout",
			"restoreOriginalParams(${1:layoutBase: LayoutBase})"
		],
		[
			"append( name: any, value: any, blobName?: string ): void\tNativeScript - FormData",
			"append(${1:name: any}, ${2:value: any}, ${3:blobName?: string})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Int32Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"renameSync( newName: string, onError?: function ): anyvoid\tNativeScript - Folder",
			"renameSync(${1:newName: string}, ${2:onError?: function})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - StackLayout",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - ActivityIndicator",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Button",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - AbsoluteLayout",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Int16Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - ListView",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - TextField",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - ListView",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Button",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"append( name: any, value: any, blobName?: string ): void\tNativeScript - FormData",
			"append(${1:name: any}, ${2:value: any}, ${3:blobName?: string})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - StackLayout",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"addCss( cssString: string, cssFileName: string ): void\tNativeScript - StyleScope",
			"addCss(${1:cssString: string}, ${2:cssFileName: string})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - SearchBar",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Slider",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - WebView",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Bindable",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"parseInt( s: string, radix?: number ): number\tNativeScript - Module NativeScript",
			"parseInt(${1:s: string}, ${2:radix?: number})"
		],
		[
			"zonedCallback( callback: Function ): Function\tNativeScript - Module NativeScript",
			"zonedCallback(${1:callback: Function})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - SearchBar",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"NavigationButton( json?: any ): NavigationButton\tNativeScript - NavigationButton",
			"NavigationButton(${1:json?: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - WebView",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Switch",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"DateConstructor( value: string ): DateConstructor\tNativeScript - DateConstructor",
			"DateConstructor(${1:value: string})"
		],
		[
			"DateConstructor( value: number ): DateConstructor\tNativeScript - DateConstructor",
			"DateConstructor(${1:value: number})"
		],
		[
			"reduceRight( callbackfn: function, initialValue?: T ): TT\tNativeScript - List<T>",
			"reduceRight(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"SegmentedBarItem( json?: any ): SegmentedBarItem\tNativeScript - SegmentedBarItem",
			"SegmentedBarItem(${1:json?: any})"
		],
		[
			"setMinutes( min: number, sec?: number, ms?: number ): number\tNativeScript - Date",
			"setMinutes(${1:min: number}, ${2:sec?: number}, ${3:ms?: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Border",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"getLocation( options?: Options ): PromiseLocation\tNativeScript - Module location",
			"getLocation(${1:options?: Options})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - RegExpExecArray",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"DateConstructor( value: string ): DateConstructor\tNativeScript - DateConstructor",
			"DateConstructor(${1:value: string})"
		],
		[
			"DateConstructor( value: number ): DateConstructor\tNativeScript - DateConstructor",
			"DateConstructor(${1:value: number})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Uint8Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"replace( searchValue: RegExp, replacer: function ): string\tNativeScript - String",
			"replace(${1:searchValue: RegExp}, ${2:replacer: function})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - TextBase",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ProxyObject",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"setMinutes( min: number, sec?: number, ms?: number ): number\tNativeScript - Date",
			"setMinutes(${1:min: number}, ${2:sec?: number}, ${3:ms?: number})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Border",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - EditableTextBase",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - TextBase",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): T\tNativeScript - Array<T, T>",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Layout",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_onTextPropertyChanged( data: PropertyChangeData ): void\tNativeScript - TextBase",
			"_onTextPropertyChanged(${1:data: PropertyChangeData})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - TabView",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ProxyObject",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - TabView",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): T\tNativeScript - Array<T, T>",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - TabViewItem",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Repeater",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - HtmlView",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"indexOf( searchString: string, position?: number ): number\tNativeScript - String",
			"indexOf(${1:searchString: string}, ${2:position?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - HtmlView",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Slider",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"CustomLayoutView( json?: any ): CustomLayoutView\tNativeScript - CustomLayoutView",
			"CustomLayoutView(${1:json?: any})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - ActivityIndicator",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Repeater",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - TabViewItem",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_onContentChanged( oldView: View, newView: View ): any\tNativeScript - ScrollView",
			"_onContentChanged(${1:oldView: View}, ${2:newView: View})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - ScrollView",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Layout",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"EditableTextBase( json?: any ): EditableTextBase\tNativeScript - EditableTextBase",
			"EditableTextBase(${1:json?: any})"
		],
		[
			"action( options: ActionOptions ): Promisestring\tNativeScript - Module ui/dialogs",
			"action(${1:options: ActionOptions})"
		],
		[
			"_applyXmlAttribute( attribute: string, value: any ): boolean\tNativeScript - Page",
			"_applyXmlAttribute(${1:attribute: string}, ${2:value: any})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - LayoutBase",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"restoreOriginalParams( layoutBase: LayoutBase ): void\tNativeScript - WrapLayout",
			"restoreOriginalParams(${1:layoutBase: LayoutBase})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - CustomLayoutView",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"on( eventNames: string, callback: function ): voidany\tNativeScript - ActionItem",
			"on(${1:eventNames: string}, ${2:callback: function})"
		],
		[
			"restoreOriginalParams( layoutBase: LayoutBase ): void\tNativeScript - GridLayout",
			"restoreOriginalParams(${1:layoutBase: LayoutBase})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - DatePicker",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - GridLayout",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Progress",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - DockLayout",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"Static autocapitalizationTypeProperty: Property\tNativeScript - EditableTextBase",
			"Static autocapitalizationTypeProperty"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ListPicker",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"fromNativeSource( source: any ): ImageSource\tNativeScript - Module image-source",
			"fromNativeSource(${1:source: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - TabView",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ActionItem",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"reduce( callbackfn: function, initialValue?: T ): TT\tNativeScript - Array<T, T>",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - SegmentedBar",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Image",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"reduce( callbackfn: function, initialValue?: T ): TT\tNativeScript - Array<T, T>",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - SegmentedBar",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ScrollView",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - LayoutBase",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - ListView",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"restoreOriginalParams( layoutBase: LayoutBase ): void\tNativeScript - DockLayout",
			"restoreOriginalParams(${1:layoutBase: LayoutBase})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Int8Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"isFileOrResourcePath( path: string ): boolean\tNativeScript - Module utils/utils",
			"isFileOrResourcePath(${1:path: string})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ListPicker",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Layout",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Border",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"slice( start?: number, end?: number ): Float64Array\tNativeScript - Float64Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"writeText( content: string, encoding?: string ): Promiseany\tNativeScript - File",
			"writeText(${1:content: string}, ${2:encoding?: string})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - AbsoluteLayout",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - TimePicker",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - TimePicker",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - WrapLayout",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"subarray( begin: number, end?: number ): Uint32Array\tNativeScript - Uint32Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - DatePicker",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Slider",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - TextView",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Slider",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - CustomLayoutView",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - TabView",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Repeater",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - WrapLayout",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ActionItem",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"catch( onRejected?: function ): PromiseLikevoid\tNativeScript - AnimationPromise",
			"catch(${1:onRejected?: function})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - ProxyViewContainer",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Border",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - HtmlView",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - EditableTextBase",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"subarray( begin: number, end?: number ): Uint16Array\tNativeScript - Uint16Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Button",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Label",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - WebView",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"slice( start?: number, end?: number ): Float64Array\tNativeScript - Float64Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"joinPath( left: string, right: string ): string\tNativeScript - FileSystemAccess",
			"joinPath(${1:left: string}, ${2:right: string})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Repeater",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ProxyViewContainer",
			"_getValueSource(${1:property: Property})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Button",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Frame",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - WebView",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - TextBase",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Progress",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - List<T>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - List<T>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ScrollView",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Frame",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - EditableTextBase",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - TextBase",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Image",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Switch",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - TextView",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - HtmlView",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"insertChild( child: View, atIndex: number ): void\tNativeScript - AbsoluteLayout",
			"insertChild(${1:child: View}, ${2:atIndex: number})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - AbsoluteLayout",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"slice( start?: number, end?: number ): Float32Array\tNativeScript - Float32Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Label",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"subarray( begin: number, end?: number ): Uint16Array\tNativeScript - Uint16Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"removeEventListener( listener: EventListener ): any\tNativeScript - Module trace",
			"removeEventListener(${1:listener: EventListener})"
		],
		[
			"set( array: ArrayLike<number>, offset?: number ): void\tNativeScript - Int8Array",
			"set(${1:array: ArrayLike<number>}, ${2:offset?: number})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Layout",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - ListView",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Switch",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"slice( start?: number, end?: number ): Float32Array\tNativeScript - Float32Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - GridLayout",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - TextField",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"subarray( begin: number, end?: number ): Uint32Array\tNativeScript - Uint32Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"restoreOriginalParams( layoutBase: LayoutBase ): void\tNativeScript - LayoutBase",
			"restoreOriginalParams(${1:layoutBase: LayoutBase})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - DockLayout",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - SegmentedBar",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - ActionBar",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ContentView",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"renameSync( newName: string, onError?: function ): anyvoid\tNativeScript - File",
			"renameSync(${1:newName: string}, ${2:onError?: function})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - Page",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"escapeRegexSymbols( source: string ): string\tNativeScript - Module utils/utils",
			"escapeRegexSymbols(${1:source: string})"
		],
		[
			"new ItemSpec( value: number, type: \"pixel\" ): ItemSpec\tNativeScript - ItemSpec",
			"new ItemSpec(${1:value: number}, ${2:type: \"pixel\"})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - Page",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ProxyObject",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"indexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - List<T>",
			"indexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Slider",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Border",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Slider",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"EventTarget: object__type__typeEventTarget\tNativeScript - XMLHttpRequestUpload",
			"EventTarget"
		],
		[
			"onloadstart: functionEventanyEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onloadstart"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Border",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - DependencyObservable",
			"hasListeners(${1:eventName: string})"
		],
		[
			"sort( compareFn?: function ): numberstring\tNativeScript - TemplateStringsArray",
			"sort(${1:compareFn?: function})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - TextBase",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Placeholder",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Image",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Image",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Placeholder",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Placeholder",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"getKnownColor( name: string ): string\tNativeScript - Module color/known-colors",
			"getKnownColor(${1:name: string})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - TextView",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"load( fileName: string, exports?: any ): View\tNativeScript - Module ui/builder",
			"load(${1:fileName: string}, ${2:exports?: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Switch",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ActivityIndicator",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - TabView",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Set<T>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Switch",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ActionBar",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - TextField",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - ContentView",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - ContentView",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"getJSON<T>( options: HttpRequestOptions ): PromiseT\tNativeScript - Module http",
			"getJSON<T>(${1:options: HttpRequestOptions})"
		],
		[
			"forEach( callbackfn: function, thisArg?: any ): voidvoid\tNativeScript - Set<T>",
			"forEach(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - SearchBar",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - SegmentedBar",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - TabViewItem",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - StackLayout",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Label",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"new SelectorsMap( rules: RuleSet[] ): SelectorsMap\tNativeScript - SelectorsMap",
			"new SelectorsMap(${1:rules: RuleSet[]})"
		],
		[
			"indexOf( searchElement: T, fromIndex?: number ): number\tNativeScript - List<T>",
			"indexOf(${1:searchElement: T}, ${2:fromIndex?: number})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Label",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - StackLayout",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - ActivityIndicator",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_addToSuperview( superview: any, index?: number ): boolean\tNativeScript - View",
			"_addToSuperview(${1:superview: any}, ${2:index?: number})"
		],
		[
			"_setFormattedTextPropertyToNative( value: any ): void\tNativeScript - TextField",
			"_setFormattedTextPropertyToNative(${1:value: any})"
		],
		[
			"createAndroidAnimator( transitionType: string ): any\tNativeScript - Transition",
			"createAndroidAnimator(${1:transitionType: string})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ActionBar",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - TabView",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - StackLayout",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Layout",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"new AbsoluteLayout( json?: any ): AbsoluteLayout\tNativeScript - AbsoluteLayout",
			"new AbsoluteLayout(${1:json?: any})"
		],
		[
			"getViewById( view: View, id: string ): View\tNativeScript - Module ui/core/view",
			"getViewById(${1:view: View}, ${2:id: string})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - WebView",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"onloadstart: functionEventanyEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onloadstart"
		],
		[
			"EventTarget: object__type__typeEventTarget\tNativeScript - XMLHttpRequestUpload",
			"EventTarget"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - SearchBar",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"createAnimation( options: AnimationDefinition ): Animation\tNativeScript - View",
			"createAnimation(${1:options: AnimationDefinition})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Layout",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Frame",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - AbsoluteLayout",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Frame",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - TextField",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Button",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - WebView",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Button",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_onTextPropertyChanged( data: PropertyChangeData ): void\tNativeScript - Button",
			"_onTextPropertyChanged(${1:data: PropertyChangeData})"
		],
		[
			"sort( compareFn?: function ): numberstring\tNativeScript - TemplateStringsArray",
			"sort(${1:compareFn?: function})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Slider",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - ListPicker",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - DatePicker",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - ListPicker",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"slice( start?: number, end?: number ): Uint32Array\tNativeScript - Uint32Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"fromUrl( url: string ): PromiseImageSource\tNativeScript - Module image-source",
			"fromUrl(${1:url: string})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - TextView",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ListPicker",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - ListView",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"new ItemSpec( value: number, type: string ): ItemSpec\tNativeScript - ItemSpec",
			"new ItemSpec(${1:value: number}, ${2:type: string})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - DockLayout",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - Page",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"slice( start?: number, end?: number ): string\tNativeScript - RegExpMatchArray",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"play: functionViewPromisevoidViewPromisevoid\tNativeScript - KeyframeAnimation",
			"play"
		],
		[
			"slice( start?: number, end?: number ): Uint16Array\tNativeScript - Uint16Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Layout",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - EditableTextBase",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - CustomLayoutView",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Layout",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - TextBase",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_setFormattedTextPropertyToNative( value: any ): void\tNativeScript - TextView",
			"_setFormattedTextPropertyToNative(${1:value: any})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - ContentView",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - LayoutBase",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Progress",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"new ItemSpec( value: number, type: \"star\" ): ItemSpec\tNativeScript - ItemSpec",
			"new ItemSpec(${1:value: number}, ${2:type: \"star\"})"
		],
		[
			"of( ...items: number[] ): Float32Array\tNativeScript - Float32ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Switch",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - TextBase",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"new ItemSpec( value: number, type: \"auto\" ): ItemSpec\tNativeScript - ItemSpec",
			"new ItemSpec(${1:value: number}, ${2:type: \"auto\"})"
		],
		[
			"_onTextPropertyChanged( data: PropertyChangeData ): void\tNativeScript - Label",
			"_onTextPropertyChanged(${1:data: PropertyChangeData})"
		],
		[
			"_unregisterLayoutChild( child: View ): void\tNativeScript - ProxyViewContainer",
			"_unregisterLayoutChild(${1:child: View})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - ScrollView",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - ListView",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"slice( start?: number, end?: number ): Uint16Array\tNativeScript - Uint16Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Label",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - LayoutBase",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Switch",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - DatePicker",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Label",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - SegmentedBar",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - CustomLayoutView",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Repeater",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - DependencyObservable",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"slice( start?: number, end?: number ): Uint32Array\tNativeScript - Uint32Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - TimePicker",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - DependencyObservable",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"of( ...items: number[] ): Float32Array\tNativeScript - Float32ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Image",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - TimePicker",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - SegmentedBarItem",
			"_getValueSource(${1:property: Property})"
		],
		[
			"addCallback( callback: function ): voidnumber\tNativeScript - Module fps-meter",
			"addCallback(${1:callback: function})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - ProxyViewContainer",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - WrapLayout",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - GridLayout",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - Page",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Progress",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ActionItem",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Style",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Image",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - WrapLayout",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - LayoutBase",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Border",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - SegmentedBar",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"slice( start?: number, end?: number ): string\tNativeScript - RegExpMatchArray",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - StackLayout",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"subarray( begin: number, end?: number ): Uint8Array\tNativeScript - Uint8Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"subarray( begin: number, end?: number ): Int16Array\tNativeScript - Int16Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Border",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ScrollView",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_setFormattedTextPropertyToNative( value: any ): void\tNativeScript - TextBase",
			"_setFormattedTextPropertyToNative(${1:value: any})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - TimePicker",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - WrapLayout",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - EditableTextBase",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"isKnownName( name: string ): boolean\tNativeScript - Module color/known-colors",
			"isKnownName(${1:name: string})"
		],
		[
			"of( ...items: number[] ): Float64Array\tNativeScript - Float64ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - GridLayout",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"subarray( begin: number, end?: number ): Int32Array\tNativeScript - Int32Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - ScrollView",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Slider",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"of( ...items: number[] ): Float64Array\tNativeScript - Float64ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Placeholder",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"subarray( begin: number, end?: number ): Int32Array\tNativeScript - Int32Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_unregisterAnimation( animation: KeyframeAnimation ): any\tNativeScript - View",
			"_unregisterAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"subarray( begin: number, end?: number ): Uint8Array\tNativeScript - Uint8Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - HtmlView",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - GridLayout",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"animate( options: AnimationDefinition ): AnimationPromise\tNativeScript - View",
			"animate(${1:options: AnimationDefinition})"
		],
		[
			"race<T>( promises: Promise<T>[] ): PromiseT\tNativeScript - PromiseConstructor",
			"race<T>(${1:promises: Promise<T>[]})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - AbsoluteLayout",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - HtmlView",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - TextView",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - NavigationButton",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - AbsoluteLayout",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Bindable",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - DockLayout",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Repeater",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Frame",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Button",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"race<T>( promises: Promise<T>[] ): PromiseT\tNativeScript - PromiseConstructor",
			"race<T>(${1:promises: Promise<T>[]})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Frame",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"eachLayoutChild( callback: function ): voidvoid\tNativeScript - AbsoluteLayout",
			"eachLayoutChild(${1:callback: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Bindable",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"subarray( begin: number, end?: number ): Int16Array\tNativeScript - Int16Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - DockLayout",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - DatePicker",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Style",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Button",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Label",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Frame",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - TabView",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"sort( compareFn?: function ): numberFloat64Array\tNativeScript - Float64Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - Array<T, T>",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - TextField",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Frame",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"horizontalAlignmentProperty: Property\tNativeScript - Module ui/styling/style",
			"horizontalAlignmentProperty"
		],
		[
			"insertChild( child: View, atIndex: number ): void\tNativeScript - StackLayout",
			"insertChild(${1:child: View}, ${2:atIndex: number})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - Button",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - View",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - View",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - TextField",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - GridLayout",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"getBaseClasses( object: any ): Arraystring\tNativeScript - Module utils/types",
			"getBaseClasses(${1:object: any})"
		],
		[
			"sort( compareFn?: function ): numberFloat64Array\tNativeScript - Float64Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - TextField",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - ScrollView",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"Static selectedBackgroundColorProperty: Property\tNativeScript - SegmentedBar",
			"Static selectedBackgroundColorProperty"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - ActionBar",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - ActionBar",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - StackLayout",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - SegmentedBar",
			"_eachChildView(${1:callback: function})"
		],
		[
			"new FPSCallback( onFrame: function ): FPSCallback\tNativeScript - FPSCallback",
			"new FPSCallback(${1:onFrame: function})"
		],
		[
			"slice( begin: number, end?: number ): ArrayBuffer\tNativeScript - ArrayBuffer",
			"slice(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - SearchBar",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - StackLayout",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - SearchBar",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"sort( compareFn?: function ): numberFloat32Array\tNativeScript - Float32Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - ContentView",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - TabView",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): T\tNativeScript - List<T>",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Label",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - SearchBar",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - Array<T, T>",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - WebView",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - ContentView",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ActionBar",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_resolveAnimationCurve( curve: any ): any\tNativeScript - Module ui/animation",
			"_resolveAnimationCurve(${1:curve: any})"
		],
		[
			"fromBase64( source: string ): ImageSource\tNativeScript - Module image-source",
			"fromBase64(${1:source: string})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ProxyViewContainer",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - Border",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - ActivityIndicator",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - WebView",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"fromResource( name: string ): ImageSource\tNativeScript - Module image-source",
			"fromResource(${1:name: string})"
		],
		[
			"sort( compareFn?: function ): numberFloat32Array\tNativeScript - Float32Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"slice( start?: number, end?: number ): string\tNativeScript - RegExpExecArray",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - ListPicker",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"completed: functionanystringvoidanystringvoid\tNativeScript - DownloadRequest",
			"completed"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - DockLayout",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"all<T>( promises: Promise<T>[] ): PromiseT\tNativeScript - PromiseConstructor",
			"all<T>(${1:promises: Promise<T>[]})"
		],
		[
			"all<T>( promises: Promise<T>[] ): PromiseT\tNativeScript - PromiseConstructor",
			"all<T>(${1:promises: Promise<T>[]})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - TimePicker",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Placeholder",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"on( event: \"tap\", callback: function ): void\tNativeScript - NavigationButton",
			"on(${1:event: \"tap\"}, ${2:callback: function})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - DatePicker",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Placeholder",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Image",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"addEventListener( listener: EventListener ): any\tNativeScript - Module trace",
			"addEventListener(${1:listener: EventListener})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Image",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Span",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ObservableArray<T>",
			"hasListeners(${1:eventName: string})"
		],
		[
			"reduce<U>( callbackfn: function, initialValue: U ): T\tNativeScript - List<T>",
			"reduce<U>(${1:callbackfn: function}, ${2:initialValue: U})"
		],
		[
			"slice( start?: number, end?: number ): string\tNativeScript - RegExpExecArray",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"alert( options: AlertOptions ): Promisevoid\tNativeScript - Module ui/dialogs",
			"alert(${1:options: AlertOptions})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - LayoutBase",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_onContentChanged( oldView: View, newView: View ): any\tNativeScript - Border",
			"_onContentChanged(${1:oldView: View}, ${2:newView: View})"
		],
		[
			"_resetValue( property: Property, source?: number ): void\tNativeScript - Page",
			"_resetValue(${1:property: Property}, ${2:source?: number})"
		],
		[
			"_setNativeViewFrame( nativeView: any, frame: any ): void\tNativeScript - Page",
			"_setNativeViewFrame(${1:nativeView: any}, ${2:frame: any})"
		],
		[
			"slice( begin: number, end?: number ): ArrayBuffer\tNativeScript - ArrayBuffer",
			"slice(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - WrapLayout",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"nativeLayoutParamsProperty: Property\tNativeScript - Module ui/styling/style",
			"nativeLayoutParamsProperty"
		],
		[
			"of( ...items: number[] ): Uint32Array\tNativeScript - Uint32ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"slice( start?: number, end?: number ): Int16Array\tNativeScript - Int16Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Button",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Placeholder",
			"_eachChildView(${1:callback: function})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - SegmentedBar",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"fromCharCode( ...codes: number[] ): string\tNativeScript - StringConstructor",
			"fromCharCode(${1:...codes: number[]})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - View",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - GridLayout",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"slice( start?: number, end?: number ): Int32Array\tNativeScript - Int32Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"insertChild( child: View, atIndex: number ): void\tNativeScript - WrapLayout",
			"insertChild(${1:child: View}, ${2:atIndex: number})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - Label",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Layout",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"confirm( message: string ): Promiseboolean\tNativeScript - Module ui/dialogs",
			"confirm(${1:message: string})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - WrapLayout",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"slice( start?: number, end?: number ): Uint8Array\tNativeScript - Uint8Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"subarray( begin: number, end?: number ): Int8Array\tNativeScript - Int8Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Bindable",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"insertChild( child: View, atIndex: number ): void\tNativeScript - GridLayout",
			"insertChild(${1:child: View}, ${2:atIndex: number})"
		],
		[
			"androidOnTouchEvent: functionanyvoidanyvoid\tNativeScript - GesturesObserver",
			"androidOnTouchEvent"
		],
		[
			"slice( start?: number, end?: number ): Int16Array\tNativeScript - Int16Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ActivityIndicator",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Repeater",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - ContentView",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Layout",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - ListView",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"backgroundInternalProperty: Property\tNativeScript - Module ui/styling/style",
			"backgroundInternalProperty"
		],
		[
			"backgroundPositionProperty: Property\tNativeScript - Module ui/styling/style",
			"backgroundPositionProperty"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - StackLayout",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - TextField",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - WrapLayout",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - SearchBar",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_registerLayoutChild( child: View ): void\tNativeScript - ProxyViewContainer",
			"_registerLayoutChild(${1:child: View})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Progress",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - View",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"_childIndexToNativeChildIndex( index?: number ): number\tNativeScript - Page",
			"_childIndexToNativeChildIndex(${1:index?: number})"
		],
		[
			"fromCharCode( ...codes: number[] ): string\tNativeScript - StringConstructor",
			"fromCharCode(${1:...codes: number[]})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - ScrollView",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ProxyViewContainer",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ProxyViewContainer",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - TextBase",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Switch",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - GridLayout",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - ListView",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"reduce( callbackfn: function, initialValue?: T ): TT\tNativeScript - List<T>",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"of( ...items: number[] ): Uint16Array\tNativeScript - Uint16ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"insertChild( child: View, atIndex: number ): void\tNativeScript - LayoutBase",
			"insertChild(${1:child: View}, ${2:atIndex: number})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - DockLayout",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Repeater",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - HtmlView",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"reduce( callbackfn: function, initialValue?: T ): TT\tNativeScript - List<T>",
			"reduce(${1:callbackfn: function}, ${2:initialValue?: T})"
		],
		[
			"slice( start?: number, end?: number ): Int32Array\tNativeScript - Int32Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"restoreOriginalParams( layoutBase: LayoutBase ): void\tNativeScript - Layout",
			"restoreOriginalParams(${1:layoutBase: LayoutBase})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - LayoutBase",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"copyFrom( source: any, target: any ): any\tNativeScript - Module utils/utils",
			"copyFrom(${1:source: any}, ${2:target: any})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - TextView",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - ListPicker",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"subarray( begin: number, end?: number ): Int8Array\tNativeScript - Int8Array",
			"subarray(${1:begin: number}, ${2:end?: number})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - DockLayout",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"onValidateValue: PropertyValidationCallback\tNativeScript - PropertyMetadata",
			"onValidateValue"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - HtmlView",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - AbsoluteLayout",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Progress",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Switch",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"getClassInfo( object: Object ): ClassInfo\tNativeScript - Module utils/types",
			"getClassInfo(${1:object: Object})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Button",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - ScrollView",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Repeater",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - ListPicker",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_registerAnimation( animation: KeyframeAnimation ): any\tNativeScript - Page",
			"_registerAnimation(${1:animation: KeyframeAnimation})"
		],
		[
			"of( ...items: number[] ): Uint32Array\tNativeScript - Uint32ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - SegmentedBar",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - TextView",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"setUint8( byteOffset: number, value: number ): void\tNativeScript - DataView",
			"setUint8(${1:byteOffset: number}, ${2:value: number})"
		],
		[
			"setUint8( byteOffset: number, value: number ): void\tNativeScript - DataView",
			"setUint8(${1:byteOffset: number}, ${2:value: number})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Slider",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_setFormattedTextPropertyToNative( value: any ): void\tNativeScript - Button",
			"_setFormattedTextPropertyToNative(${1:value: any})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - DatePicker",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Border",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - ListView",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - AbsoluteLayout",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - CustomLayoutView",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"insertChild( child: View, atIndex: number ): void\tNativeScript - DockLayout",
			"insertChild(${1:child: View}, ${2:atIndex: number})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - HtmlView",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - ActionBar",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Slider",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - TimePicker",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - EditableTextBase",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - TextBase",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"of( ...items: number[] ): Uint16Array\tNativeScript - Uint16ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"slice( start?: number, end?: number ): Uint8Array\tNativeScript - Uint8Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - TextBase",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - TextView",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"onValidateValue: PropertyValidationCallback\tNativeScript - PropertyMetadata",
			"onValidateValue"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - TimePicker",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - LayoutBase",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ObservableArray<T>",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Border",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - DatePicker",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Progress",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"SelectorsMap( rules: RuleSet[] ): SelectorsMap\tNativeScript - SelectorsMap",
			"SelectorsMap(${1:rules: RuleSet[]})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - DatePicker",
			"_eachChildView(${1:callback: function})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - EditableTextBase",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - LayoutBase",
			"_eachChildView(${1:callback: function})"
		],
		[
			"setInt8( byteOffset: number, value: number ): void\tNativeScript - DataView",
			"setInt8(${1:byteOffset: number}, ${2:value: number})"
		],
		[
			"setItem( index: number, value: T ): void\tNativeScript - ObservableArray<T>",
			"setItem(${1:index: number}, ${2:value: T})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - NavigationButton",
			"hasListeners(${1:eventName: string})"
		],
		[
			"slice( start?: number, end?: number ): T\tNativeScript - ObservableArray<T>",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"sort( compareFn?: function ): numberUint32Array\tNativeScript - Uint32Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"setInt8( byteOffset: number, value: number ): void\tNativeScript - DataView",
			"setInt8(${1:byteOffset: number}, ${2:value: number})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - TextField",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - DockLayout",
			"_eachChildView(${1:callback: function})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - SearchBar",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"Static textFieldBackgroundColorProperty: Property\tNativeScript - SearchBar",
			"Static textFieldBackgroundColorProperty"
		],
		[
			"sort( compareFn?: function ): numberUint16Array\tNativeScript - Uint16Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Uint8ClampedArray",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"error( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"error(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - TabView",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - SearchBar",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - StackLayout",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - TextBase",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - TabView",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"verticalAlignmentProperty: Property\tNativeScript - Module ui/styling/style",
			"verticalAlignmentProperty"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - WebView",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - TabView",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"decodeURI( encodedURI: string ): string\tNativeScript - Module NativeScript",
			"decodeURI(${1:encodedURI: string})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - WebView",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Frame",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"writeSync( content: any, onError?: function ): anyvoid\tNativeScript - File",
			"writeSync(${1:content: any}, ${2:onError?: function})"
		],
		[
			"Static updateTextTriggerProperty: Property\tNativeScript - EditableTextBase",
			"Static updateTextTriggerProperty"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - WebView",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Frame",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - GridLayout",
			"_eachChildView(${1:callback: function})"
		],
		[
			"eachLayoutChild( callback: function ): voidvoid\tNativeScript - StackLayout",
			"eachLayoutChild(${1:callback: function})"
		],
		[
			"onerror: functionEventanyEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onerror"
		],
		[
			"onabort: functionEventanyEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onabort"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - TextField",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - WrapLayout",
			"_eachChildView(${1:callback: function})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Uint8ClampedArray",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"AbsoluteLayout( json?: any ): AbsoluteLayout\tNativeScript - AbsoluteLayout",
			"AbsoluteLayout(${1:json?: any})"
		],
		[
			"stringify( value: any, replacer: function ): anystring\tNativeScript - JSON",
			"stringify(${1:value: any}, ${2:replacer: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Style",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Label",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"sort( compareFn?: function ): numberUint32Array\tNativeScript - Uint32Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"error( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"error(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Progress",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_setFormattedTextPropertyToNative( value: any ): void\tNativeScript - Label",
			"_setFormattedTextPropertyToNative(${1:value: any})"
		],
		[
			"setActivityCallbacks( activity: any ): void\tNativeScript - Module ui/frame",
			"setActivityCallbacks(${1:activity: any})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Repeater",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"setFragmentCallbacks( fragment: any ): void\tNativeScript - Module ui/frame",
			"setFragmentCallbacks(${1:fragment: any})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - ActionBar",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - ContentView",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Label",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"sort( compareFn?: function ): numberUint16Array\tNativeScript - Uint16Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"isNullOrUndefined( value: any ): boolean\tNativeScript - Module utils/types",
			"isNullOrUndefined(${1:value: any})"
		],
		[
			"sort( compareFn?: function ): numberstring\tNativeScript - RegExpMatchArray",
			"sort(${1:compareFn?: function})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - ContentView",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - ActionBar",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - ListPicker",
			"_eachChildView(${1:callback: function})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Placeholder",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - CustomLayoutView",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Style",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"cast<T>( promise: Promise<T> ): PromiseT\tNativeScript - PromiseConstructor",
			"cast<T>(${1:promise: Promise<T>})"
		],
		[
			"fromString( type: string ): GestureTypes\tNativeScript - Module ui/gestures",
			"fromString(${1:type: string})"
		],
		[
			"cast<T>( promise: Promise<T> ): PromiseT\tNativeScript - PromiseConstructor",
			"cast<T>(${1:promise: Promise<T>})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - TextView",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"onabort: functionEventanyEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onabort"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Image",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - ScrollView",
			"_eachChildView(${1:callback: function})"
		],
		[
			"onerror: functionEventanyEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onerror"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Placeholder",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"error( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"error(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Image",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - ListView",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"equalityComparer: PropertyEqualityComparer\tNativeScript - PropertyMetadata",
			"equalityComparer"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ActivityIndicator",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ActivityIndicator",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"equalityComparer: PropertyEqualityComparer\tNativeScript - PropertyMetadata",
			"equalityComparer"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - TimePicker",
			"_eachChildView(${1:callback: function})"
		],
		[
			"setColumnSpan( view: View, value: number ): void\tNativeScript - GridLayout",
			"setColumnSpan(${1:view: View}, ${2:value: number})"
		],
		[
			"_addChildFromBuilder( name: string, value: any ): void\tNativeScript - Page",
			"_addChildFromBuilder(${1:name: string}, ${2:value: any})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - SegmentedBarItem",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_onContentChanged( oldView: View, newView: View ): any\tNativeScript - Page",
			"_onContentChanged(${1:oldView: View}, ${2:newView: View})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - HtmlView",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"ItemSpec( value: number, type: \"pixel\" ): ItemSpec\tNativeScript - ItemSpec",
			"ItemSpec(${1:value: number}, ${2:type: \"pixel\"})"
		],
		[
			"stringify( value: any, replacer: function ): anystring\tNativeScript - JSON",
			"stringify(${1:value: any}, ${2:replacer: function})"
		],
		[
			"sort( compareFn?: function ): numberstring\tNativeScript - RegExpMatchArray",
			"sort(${1:compareFn?: function})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - StackLayout",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"removeSync( onError?: function ): anyvoid\tNativeScript - FileSystemEntity",
			"removeSync(${1:onError?: function})"
		],
		[
			"slice( start?: number, end?: number ): Int8Array\tNativeScript - Int8Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"catch<U>( onRejected?: function ): PromiseLikeU\tNativeScript - Promise<T>",
			"catch<U>(${1:onRejected?: function})"
		],
		[
			"onload: functionEventanyEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onload"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - EditableTextBase",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - ScrollView",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - ListView",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - DatePicker",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"of( ...items: number[] ): Int16Array\tNativeScript - Int16ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - TextView",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - EditableTextBase",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - CustomLayoutView",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - CustomLayoutView",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Layout",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Page",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - SegmentedBar",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - ListPicker",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"unshift( ...items: string[] ): number\tNativeScript - TemplateStringsArray",
			"unshift(${1:...items: string[]})"
		],
		[
			"eachLayoutChild( callback: function ): voidvoid\tNativeScript - WrapLayout",
			"eachLayoutChild(${1:callback: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Span",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"ItemSpec( value: number, type: \"star\" ): ItemSpec\tNativeScript - ItemSpec",
			"ItemSpec(${1:value: number}, ${2:type: \"star\"})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - GridLayout",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"sort( compareFn?: function ): numberstring\tNativeScript - RegExpExecArray",
			"sort(${1:compareFn?: function})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Button",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Layout",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Switch",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - AbsoluteLayout",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"info( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"info(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - SegmentedBar",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - HtmlView",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Border",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - TextView",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - WebView",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - TextBase",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - WrapLayout",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"onSetNativeValue: PropertyChangedCallback\tNativeScript - PropertyMetadata",
			"onSetNativeValue"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Switch",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - LayoutBase",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - SegmentedBarItem",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - SegmentedBarItem",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"warn( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"warn(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - TimePicker",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"slice( start?: number, end?: number ): Int8Array\tNativeScript - Int8Array",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - TimePicker",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"eachLayoutChild( callback: function ): voidvoid\tNativeScript - DockLayout",
			"eachLayoutChild(${1:callback: function})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Slider",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - ProxyViewContainer",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"backgroundRepeatProperty: Property\tNativeScript - Module ui/styling/style",
			"backgroundRepeatProperty"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Border",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - View",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - LayoutBase",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Border",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"sort( compareFn?: function ): numberstring\tNativeScript - RegExpExecArray",
			"sort(${1:compareFn?: function})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Repeater",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"Static backgroundSpanUnderStatusBarProperty: Property\tNativeScript - Page",
			"Static backgroundSpanUnderStatusBarProperty"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - DatePicker",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - VirtualArray<T>",
			"hasListeners(${1:eventName: string})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - ListPicker",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"of( ...items: number[] ): Uint8Array\tNativeScript - Uint8ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"ItemSpec( value: number, type: \"auto\" ): ItemSpec\tNativeScript - ItemSpec",
			"ItemSpec(${1:value: number}, ${2:type: \"auto\"})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - WrapLayout",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"ItemSpec( value: number, type: string ): ItemSpec\tNativeScript - ItemSpec",
			"ItemSpec(${1:value: number}, ${2:type: string})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Switch",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - ListView",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - FormattedString",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Button",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - DependencyObservable",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"hasKey( key: string ): boolean\tNativeScript - Module application-settings",
			"hasKey(${1:key: string})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - SearchBar",
			"_eachChildView(${1:callback: function})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - HtmlView",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Repeater",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachSetPropertyValue( callback: function ): voidvoid\tNativeScript - Page",
			"_eachSetPropertyValue(${1:callback: function})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - TabView",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Progress",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Slider",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"getResponseHeader( header: string ): string\tNativeScript - XMLHttpRequest",
			"getResponseHeader(${1:header: string})"
		],
		[
			"placeholderColorProperty: Property\tNativeScript - Module ui/styling/style",
			"placeholderColorProperty"
		],
		[
			"_onDownloadCompleted( key: string, image: any ): any\tNativeScript - Cache",
			"_onDownloadCompleted(${1:key: string}, ${2:image: any})"
		],
		[
			"of( ...items: number[] ): Uint8Array\tNativeScript - Uint8ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"redirect( url: string, status: number ): Response\tNativeScript - Response",
			"redirect(${1:url: string}, ${2:status: number})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - ProxyViewContainer",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"eachLayoutChild( callback: function ): voidvoid\tNativeScript - GridLayout",
			"eachLayoutChild(${1:callback: function})"
		],
		[
			"onload: functionEventanyEventany\tNativeScript - XMLHttpRequestEventTarget",
			"onload"
		],
		[
			"unshift( ...items: string[] ): number\tNativeScript - TemplateStringsArray",
			"unshift(${1:...items: string[]})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - ActionBar",
			"_eachChildView(${1:callback: function})"
		],
		[
			"redirect( url: string, status: number ): Response\tNativeScript - Response",
			"redirect(${1:url: string}, ${2:status: number})"
		],
		[
			"_unregisterLayoutChild( child: View ): void\tNativeScript - AbsoluteLayout",
			"_unregisterLayoutChild(${1:child: View})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - TextBase",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - ProxyViewContainer",
			"Static automationTextProperty"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Layout",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ProxyViewContainer",
			"Static bindingContextProperty"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Progress",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"of( ...items: number[] ): Int32Array\tNativeScript - Int32ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - ScrollView",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - TemplateStringsArray",
			"filter<U>(${1:pred: function})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - DockLayout",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - View",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"eachLayoutChild( callback: function ): voidvoid\tNativeScript - LayoutBase",
			"eachLayoutChild(${1:callback: function})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - NavigationButton",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"info( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"info(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"bind( options: BindingOptions, source?: Object ): any\tNativeScript - Span",
			"bind(${1:options: BindingOptions}, ${2:source?: Object})"
		],
		[
			"catch<U>( onRejected?: function ): PromiseLikeU\tNativeScript - Promise<T>",
			"catch<U>(${1:onRejected?: function})"
		],
		[
			"of( ...items: number[] ): Int16Array\tNativeScript - Int16ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"getResponseHeader( header: string ): string\tNativeScript - XMLHttpRequest",
			"getResponseHeader(${1:header: string})"
		],
		[
			"warn( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"warn(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"onloadstart: functionEventanyEventany\tNativeScript - XMLHttpRequestUpload",
			"onloadstart"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - GridLayout",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - TextField",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Button",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - DockLayout",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"warn( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"warn(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"onloadstart: functionEventanyEventany\tNativeScript - XMLHttpRequestUpload",
			"onloadstart"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Slider",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"info( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"info(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"of( ...items: number[] ): Int32Array\tNativeScript - Int32ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - TemplateStringsArray",
			"filter<U>(${1:pred: function})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - NavigationButton",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - ActivityIndicator",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - HtmlView",
			"_eachChildView(${1:callback: function})"
		],
		[
			"split( separator: string, limit?: number ): string\tNativeScript - String",
			"split(${1:separator: string}, ${2:limit?: number})"
		],
		[
			"split( separator: RegExp, limit?: number ): string\tNativeScript - String",
			"split(${1:separator: RegExp}, ${2:limit?: number})"
		],
		[
			"concat( ...items: string[] ): string\tNativeScript - TemplateStringsArray",
			"concat(${1:...items: string[]})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - FormattedString",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Placeholder",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ProxyObject",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Placeholder",
			"_getValueSource(${1:property: Property})"
		],
		[
			"log( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"log(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Slider",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - ActivityIndicator",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - List<T>",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"sort( compareFn?: function ): numberInt32Array\tNativeScript - Int32Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"updateSpanModifiers( parent: FormattedString ): void\tNativeScript - Span",
			"updateSpanModifiers(${1:parent: FormattedString})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Image",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Image",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"parse( css: string, options: any ): SyntaxTree\tNativeScript - Module css",
			"parse(${1:css: string}, ${2:options: any})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Layout",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - TabViewItem",
			"_getValueSource(${1:property: Property})"
		],
		[
			"parse( cssValue: string ): ArrayCSSValue\tNativeScript - Module css-value",
			"parse(${1:cssValue: string})"
		],
		[
			"fromFile( path: string ): ImageSource\tNativeScript - Module image-source",
			"fromFile(${1:path: string})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ActivityIndicator",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - ActivityIndicator",
			"Static automationTextProperty"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Image",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Repeater",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - DependencyObservable",
			"_getValue(${1:property: Property})"
		],
		[
			"new WrappedValue( value: any ): WrappedValue\tNativeScript - WrappedValue",
			"new WrappedValue(${1:value: any})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - ListView",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Progress",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - TextView",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - TabView",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Style",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"lazy<T>( action: function ): TfunctionT\tNativeScript - Module utils/lazy",
			"lazy<T>(${1:action: function})"
		],
		[
			"FPSCallback( onFrame: function ): FPSCallback\tNativeScript - FPSCallback",
			"FPSCallback(${1:onFrame: function})"
		],
		[
			"EventTarget: object__type__typeEventTarget\tNativeScript - XMLHttpRequest",
			"EventTarget"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - TextField",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"prototype: Uint8ClampedArray\tNativeScript - Uint8ClampedArrayConstructor",
			"prototype"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - ActionBar",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"sort( compareFn?: function ): numberUint8Array\tNativeScript - Uint8Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"log( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"log(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"fromObject( obj: any ): Observable\tNativeScript - Module data/observable",
			"fromObject(${1:obj: any})"
		],
		[
			"sort( compareFn?: function ): numberInt16Array\tNativeScript - Int16Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Label",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ContentView",
			"_getValueSource(${1:property: Property})"
		],
		[
			"new AndroidFrame( json?: any ): AndroidFrame\tNativeScript - AndroidFrame",
			"new AndroidFrame(${1:json?: any})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Label",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - TabView",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"new SegmentedBar( json?: any ): SegmentedBar\tNativeScript - SegmentedBar",
			"new SegmentedBar(${1:json?: any})"
		],
		[
			"sort( compareFn?: function ): numberUint8Array\tNativeScript - Uint8Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"prototype: Uint8ClampedArray\tNativeScript - Uint8ClampedArrayConstructor",
			"prototype"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - ContentView",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"EventTarget: object__type__typeEventTarget\tNativeScript - XMLHttpRequest",
			"EventTarget"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Border",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Label",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"split( separator: string, limit?: number ): string\tNativeScript - String",
			"split(${1:separator: string}, ${2:limit?: number})"
		],
		[
			"dispatchEvent( evt: Event ): boolean\tNativeScript - XMLHttpRequestUpload",
			"dispatchEvent(${1:evt: Event})"
		],
		[
			"Static autocapitalizationTypeProperty: Property\tNativeScript - TextField",
			"Static autocapitalizationTypeProperty"
		],
		[
			"log( message: any, ...formatParams: any[] ): void\tNativeScript - Console",
			"log(${1:message: any}, ${2:...formatParams: any[]})"
		],
		[
			"split( separator: RegExp, limit?: number ): string\tNativeScript - String",
			"split(${1:separator: RegExp}, ${2:limit?: number})"
		],
		[
			"getFileExtension( path: string ): string\tNativeScript - FileSystemAccess",
			"getFileExtension(${1:path: string})"
		],
		[
			"map<U>( callbackfn: function, thisArg?: any ): UU\tNativeScript - List<T>",
			"map<U>(${1:callbackfn: function}, ${2:thisArg?: any})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Switch",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Style",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"concat( ...items: string[] ): string\tNativeScript - TemplateStringsArray",
			"concat(${1:...items: string[]})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - ActionBar",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"backgroundColorProperty: Property\tNativeScript - Module ui/styling/style",
			"backgroundColorProperty"
		],
		[
			"backgroundImageProperty: Property\tNativeScript - Module ui/styling/style",
			"backgroundImageProperty"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - WebView",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - TextBase",
			"_eachChildView(${1:callback: function})"
		],
		[
			"dispatchEvent( evt: Event ): boolean\tNativeScript - XMLHttpRequestUpload",
			"dispatchEvent(${1:evt: Event})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Frame",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"sort( compareFn?: function ): numberInt32Array\tNativeScript - Int32Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - StackLayout",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Frame",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - SearchBar",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - StackLayout",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Frame",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - WebView",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - TextField",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"setLeft( view: View, value: number ): void\tNativeScript - AbsoluteLayout",
			"setLeft(${1:view: View}, ${2:value: number})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Button",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - ProxyViewContainer",
			"_goToVisualState(${1:state: string})"
		],
		[
			"sort( compareFn?: function ): numberInt16Array\tNativeScript - Int16Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - SearchBar",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - VirtualArray<T>",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - AbsoluteLayout",
			"hasListeners(${1:eventName: string})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Progress",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - SegmentedBarItem",
			"Static bindingContextProperty"
		],
		[
			"parseFloat( string: string ): number\tNativeScript - Module NativeScript",
			"parseFloat(${1:string: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - AbsoluteLayout",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - AbsoluteLayout",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"nativePaddingsProperty: Property\tNativeScript - Module ui/styling/style",
			"nativePaddingsProperty"
		],
		[
			"_registerLayoutChild( child: View ): void\tNativeScript - AbsoluteLayout",
			"_registerLayoutChild(${1:child: View})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Button",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"setItem( index: number, value: T ): void\tNativeScript - VirtualArray<T>",
			"setItem(${1:index: number}, ${2:value: T})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Button",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"setTop( view: View, value: number ): void\tNativeScript - AbsoluteLayout",
			"setTop(${1:view: View}, ${2:value: number})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ActionItem",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Frame",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Switch",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - WebView",
			"_eachChildView(${1:callback: function})"
		],
		[
			"sort( compareFn?: function ): numberT\tNativeScript - ObservableArray<T>",
			"sort(${1:compareFn?: function})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ProxyViewContainer",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - ProxyViewContainer",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - WrapLayout",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"backgroundSizeProperty: Property\tNativeScript - Module ui/styling/style",
			"backgroundSizeProperty"
		],
		[
			"setUTCMonth( month: number, date?: number ): number\tNativeScript - Date",
			"setUTCMonth(${1:month: number}, ${2:date?: number})"
		],
		[
			"Static clipToBoundsProperty: Property\tNativeScript - ProxyViewContainer",
			"Static clipToBoundsProperty"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - WrapLayout",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Switch",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ObservableArray<T>",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"clearCache(): void\tNativeScript - Module file-system/file-name-resolver",
			"clearCache()"
		],
		[
			"of( ...items: number[] ): Int8Array\tNativeScript - Int8ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - View",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - DockLayout",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - DockLayout",
			"_getValueSource(${1:property: Property})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - NavigationButton",
			"Static bindingContextProperty"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - EditableTextBase",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - View",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - DatePicker",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - TextBase",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - DatePicker",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - EditableTextBase",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Label",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Border",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"setUTCMonth( month: number, date?: number ): number\tNativeScript - Date",
			"setUTCMonth(${1:month: number}, ${2:date?: number})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - LayoutBase",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - LayoutBase",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Border",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - TabView",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - View",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"withBorderRadius( value: number ): Background\tNativeScript - Background",
			"withBorderRadius(${1:value: number})"
		],
		[
			"textDecorationProperty: Property\tNativeScript - Module ui/styling/style",
			"textDecorationProperty"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - ListPicker",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"insertChild( child: View, atIndex: number ): void\tNativeScript - Layout",
			"insertChild(${1:child: View}, ${2:atIndex: number})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ListPicker",
			"_getValueSource(${1:property: Property})"
		],
		[
			"Static autocapitalizationTypeProperty: Property\tNativeScript - TextView",
			"Static autocapitalizationTypeProperty"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - SegmentedBar",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - GridLayout",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - TextView",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Progress",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - EditableTextBase",
			"Static bindingContextProperty"
		],
		[
			"fromBase64( source: string ): Promiseboolean\tNativeScript - ImageSource",
			"fromBase64(${1:source: string})"
		],
		[
			"fromResource( name: string ): Promiseboolean\tNativeScript - ImageSource",
			"fromResource(${1:name: string})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - EditableTextBase",
			"Static automationTextProperty"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Repeater",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - GridLayout",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - ListView",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Image",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - ActivityIndicator",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Layout",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - CustomLayoutView",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"onValueChanged: PropertyChangedCallback\tNativeScript - PropertyMetadata",
			"onValueChanged"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Repeater",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Span",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - TextView",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - ListView",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"onValueChanged: PropertyChangedCallback\tNativeScript - PropertyMetadata",
			"onValueChanged"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ScrollView",
			"_getValueSource(${1:property: Property})"
		],
		[
			"play: functionAnimationPromiseAnimationPromise\tNativeScript - Animation",
			"play"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - ScrollView",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"new XmlParser( event: ParserEvent ): XmlParser\tNativeScript - XmlParser",
			"new XmlParser(${1:event: ParserEvent})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - CustomLayoutView",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_eachSetProperty( callback: function ): booleanvoid\tNativeScript - Page",
			"_eachSetProperty(${1:callback: function})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Layout",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_onStylePropertyChanged( property: Property ): void\tNativeScript - Page",
			"_onStylePropertyChanged(${1:property: Property})"
		],
		[
			"_removeViewFromNativeVisualTree( view: View ): void\tNativeScript - Page",
			"_removeViewFromNativeVisualTree(${1:view: View})"
		],
		[
			"of( ...items: number[] ): Int8Array\tNativeScript - Int8ArrayConstructor",
			"of(${1:...items: number[]})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - HtmlView",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Slider",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"onNavigatingFrom( isBackNavigation: boolean ): void\tNativeScript - Page",
			"onNavigatingFrom(${1:isBackNavigation: boolean})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - TimePicker",
			"_getValueSource(${1:property: Property})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Slider",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - TimePicker",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - TextBase",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - CustomLayoutView",
			"Static bindingContextProperty"
		],
		[
			"setRowSpan( view: View, value: number ): void\tNativeScript - GridLayout",
			"setRowSpan(${1:view: View}, ${2:value: number})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - HtmlView",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - CustomLayoutView",
			"Static automationTextProperty"
		],
		[
			"textTransformProperty: Property\tNativeScript - Module ui/styling/style",
			"textTransformProperty"
		],
		[
			"toExponential( fractionDigits?: number ): string\tNativeScript - Number",
			"toExponential(${1:fractionDigits?: number})"
		],
		[
			"Static formattedTextProperty: Property\tNativeScript - EditableTextBase",
			"Static formattedTextProperty"
		],
		[
			"getOwnPropertyNames( o: any ): string\tNativeScript - ObjectConstructor",
			"getOwnPropertyNames(${1:o: any})"
		],
		[
			"getImage( url: string ): PromiseImageSource\tNativeScript - Module http",
			"getImage(${1:url: string})"
		],
		[
			"isFinite( number: number ): boolean\tNativeScript - Module NativeScript",
			"isFinite(${1:number: number})"
		],
		[
			"concat<U>( ...items: U[] ): string\tNativeScript - TemplateStringsArray",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"catch<U>( onRejected?: function ): UPromiseU\tNativeScript - Promise<T>",
			"catch<U>(${1:onRejected?: function})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - SegmentedBar",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - StackLayout",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"substring( start: number, end?: number ): string\tNativeScript - String",
			"substring(${1:start: number}, ${2:end?: number})"
		],
		[
			"letterSpacingProperty: Property\tNativeScript - Module ui/styling/style",
			"letterSpacingProperty"
		],
		[
			"catch<U>( onRejected?: function ): UPromiseU\tNativeScript - Promise<T>",
			"catch<U>(${1:onRejected?: function})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - TextField",
			"_getValueSource(${1:property: Property})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - DependencyObservable",
			"Static propertyChangeEvent"
		],
		[
			"isCategorySet( category: string ): boolean\tNativeScript - Module trace",
			"isCategorySet(${1:category: string})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Frame",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - TabView",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - WebView",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - View",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - TextField",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"on( event: \"tap\", callback: function ): void\tNativeScript - ActionItem",
			"on(${1:event: \"tap\"}, ${2:callback: function})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Button",
			"_eachChildView(${1:callback: function})"
		],
		[
			"getOwnPropertyNames( o: any ): string\tNativeScript - ObjectConstructor",
			"getOwnPropertyNames(${1:o: any})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Image",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - WebView",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Layout",
			"_eachChildView(${1:callback: function})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Image",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"toExponential( fractionDigits?: number ): string\tNativeScript - Number",
			"toExponential(${1:fractionDigits?: number})"
		],
		[
			"getActivePointers(): ArrayPointer\tNativeScript - TouchGestureEventData",
			"getActivePointers()"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - ProxyViewContainer",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"load( index: number, items: T[] ): void\tNativeScript - VirtualArray<T>",
			"load(${1:index: number}, ${2:items: T[]})"
		],
		[
			"push( ...items: string[] ): number\tNativeScript - TemplateStringsArray",
			"push(${1:...items: string[]})"
		],
		[
			"join( separator?: string ): string\tNativeScript - TemplateStringsArray",
			"join(${1:separator?: string})"
		],
		[
			"unsetValue: Object\tNativeScript - Module ui/core/dependency-observable",
			"unsetValue"
		],
		[
			"alert( message: string ): Promisevoid\tNativeScript - Module ui/dialogs",
			"alert(${1:message: string})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - EditableTextBase",
			"_goToVisualState(${1:state: string})"
		],
		[
			"remove( key: string ): void\tNativeScript - Module application-settings",
			"remove(${1:key: string})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Label",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Border",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Placeholder",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - ProxyViewContainer",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - SearchBar",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - ContentView",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"withBorderWidth( value: number ): Background\tNativeScript - Background",
			"withBorderWidth(${1:value: number})"
		],
		[
			"push( ...items: string[] ): number\tNativeScript - TemplateStringsArray",
			"push(${1:...items: string[]})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - ActivityIndicator",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - CustomLayoutView",
			"_goToVisualState(${1:state: string})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - AndroidFrame",
			"hasListeners(${1:eventName: string})"
		],
		[
			"textAlignmentProperty: Property\tNativeScript - Module ui/styling/style",
			"textAlignmentProperty"
		],
		[
			"_propagateInheritableProperties( view: View ): any\tNativeScript - Page",
			"_propagateInheritableProperties(${1:view: View})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ActionBar",
			"_getValueSource(${1:property: Property})"
		],
		[
			"join( separator?: string ): string\tNativeScript - TemplateStringsArray",
			"join(${1:separator?: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ActivityIndicator",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"concat<U>( ...items: U[] ): string\tNativeScript - TemplateStringsArray",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"_unregisterLayoutChild( child: View ): void\tNativeScript - StackLayout",
			"_unregisterLayoutChild(${1:child: View})"
		],
		[
			"getChildIndex( child: View ): number\tNativeScript - ProxyViewContainer",
			"getChildIndex(${1:child: View})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - SearchBar",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"sort( compareFn?: function ): numberInt8Array\tNativeScript - Int8Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"onNavigatedFrom( isBackNavigation: boolean ): void\tNativeScript - Page",
			"onNavigatedFrom(${1:isBackNavigation: boolean})"
		],
		[
			"sort( compareFn?: function ): numberInt8Array\tNativeScript - Int8Array",
			"sort(${1:compareFn?: function})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Slider",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - TabView",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - ActionBar",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"substring( start: number, end?: number ): string\tNativeScript - String",
			"substring(${1:start: number}, ${2:end?: number})"
		],
		[
			"setColumn( view: View, value: number ): void\tNativeScript - GridLayout",
			"setColumn(${1:view: View}, ${2:value: number})"
		],
		[
			"Static returnKeyTypeProperty: Property\tNativeScript - EditableTextBase",
			"Static returnKeyTypeProperty"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Switch",
			"_eachChildView(${1:callback: function})"
		],
		[
			"transitionAndroid: NavigationTransition\tNativeScript - NavigationEntry",
			"transitionAndroid"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Frame",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ProxyViewContainer",
			"_getValue(${1:property: Property})"
		],
		[
			"paddingBottomProperty: Property\tNativeScript - Module ui/styling/style",
			"paddingBottomProperty"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Label",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - RegExpMatchArray",
			"filter<U>(${1:pred: function})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Float64Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ContentView",
			"hasListeners(${1:eventName: string})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Border",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - NavigationButton",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - ListPicker",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_unregisterLayoutChild( child: View ): void\tNativeScript - DockLayout",
			"_unregisterLayoutChild(${1:child: View})"
		],
		[
			"_unregisterLayoutChild( child: View ): void\tNativeScript - LayoutBase",
			"_unregisterLayoutChild(${1:child: View})"
		],
		[
			"onerror: functionEventanyEventany\tNativeScript - XMLHttpRequestUpload",
			"onerror"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - TextView",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - SegmentedBar",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - SegmentedBar",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"bind( thisArg: any, ...argArray: any[] ): any\tNativeScript - Function",
			"bind(${1:thisArg: any}, ${2:...argArray: any[]})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint8ClampedArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - TextBase",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Bindable",
			"_getValueSource(${1:property: Property})"
		],
		[
			"borderRadiusProperty: Property\tNativeScript - Module ui/styling/style",
			"borderRadiusProperty"
		],
		[
			"onerror: functionEventanyEventany\tNativeScript - XMLHttpRequestUpload",
			"onerror"
		],
		[
			"call( thisArg: any, ...argArray: any[] ): any\tNativeScript - Function",
			"call(${1:thisArg: any}, ${2:...argArray: any[]})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Progress",
			"_getValueSource(${1:property: Property})"
		],
		[
			"new ContentView( json?: any ): ContentView\tNativeScript - ContentView",
			"new ContentView(${1:json?: any})"
		],
		[
			"onabort: functionEventanyEventany\tNativeScript - XMLHttpRequestUpload",
			"onabort"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Switch",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - TextView",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ActivityIndicator",
			"_getValue(${1:property: Property})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Button",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Progress",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"parentsRegex: RegExp\tNativeScript - Module ui/builder/binding-builder",
			"parentsRegex"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - ListView",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - DockLayout",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - WrapLayout",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - AbsoluteLayout",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Repeater",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - CustomLayoutView",
			"setInlineStyle(${1:style: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - CustomLayoutView",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"fromData( data: any ): ImageSource\tNativeScript - Module image-source",
			"fromData(${1:data: any})"
		],
		[
			"onabort: functionEventanyEventany\tNativeScript - XMLHttpRequestUpload",
			"onabort"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - TabViewItem",
			"hasListeners(${1:eventName: string})"
		],
		[
			"paddingRightProperty: Property\tNativeScript - Module ui/styling/style",
			"paddingRightProperty"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - ActivityIndicator",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Placeholder",
			"hasListeners(${1:eventName: string})"
		],
		[
			"parse( text: string, reviver?: function ): anyany\tNativeScript - JSON",
			"parse(${1:text: string}, ${2:reviver?: function})"
		],
		[
			"_unregisterLayoutChild( child: View ): void\tNativeScript - GridLayout",
			"_unregisterLayoutChild(${1:child: View})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - ProxyViewContainer",
			"_isAddedToNativeVisualTree"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - ListView",
			"_getValueSource(${1:property: Property})"
		],
		[
			"folderExists( path: string ): boolean\tNativeScript - FileSystemAccess",
			"folderExists(${1:path: string})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Image",
			"_eachChildView(${1:callback: function})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Border",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Switch",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"substr( from: number, length?: number ): string\tNativeScript - String",
			"substr(${1:from: number}, ${2:length?: number})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - ActivityIndicator",
			"addPseudoClass(${1:name: string})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Slider",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - LayoutBase",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"setUTCSeconds( sec: number, ms?: number ): number\tNativeScript - Date",
			"setUTCSeconds(${1:sec: number}, ${2:ms?: number})"
		],
		[
			"new DateConstructor(): DateConstructor\tNativeScript - DateConstructor",
			"new DateConstructor()"
		],
		[
			"bind( thisArg: any, ...argArray: any[] ): any\tNativeScript - Function",
			"bind(${1:thisArg: any}, ${2:...argArray: any[]})"
		],
		[
			"call( thisArg: any, ...argArray: any[] ): any\tNativeScript - Function",
			"call(${1:thisArg: any}, ${2:...argArray: any[]})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - HtmlView",
			"_getValueSource(${1:property: Property})"
		],
		[
			"getLastModified( path: string ): Date\tNativeScript - FileSystemAccess",
			"getLastModified(${1:path: string})"
		],
		[
			"eachLayoutChild( callback: function ): voidvoid\tNativeScript - Layout",
			"eachLayoutChild(${1:callback: function})"
		],
		[
			"new ProxyObject( json?: any ): ProxyObject\tNativeScript - ProxyObject",
			"new ProxyObject(${1:json?: any})"
		],
		[
			"_unregisterLayoutChild( child: View ): void\tNativeScript - WrapLayout",
			"_unregisterLayoutChild(${1:child: View})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - EditableTextBase",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - EditableTextBase",
			"setInlineStyle(${1:style: string})"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - Page",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - View",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - TextBase",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Float32Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - AbsoluteLayout",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint8ClampedArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - DatePicker",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"new StackLayout( json?: any ): StackLayout\tNativeScript - StackLayout",
			"new StackLayout(${1:json?: any})"
		],
		[
			"setUTCSeconds( sec: number, ms?: number ): number\tNativeScript - Date",
			"setUTCSeconds(${1:sec: number}, ${2:ms?: number})"
		],
		[
			"_onCssStateChange( previous: any, any: any ): any\tNativeScript - Page",
			"_onCssStateChange(${1:previous: any}, ${2:any: any})"
		],
		[
			"new TabViewItem( json?: any ): TabViewItem\tNativeScript - TabViewItem",
			"new TabViewItem(${1:json?: any})"
		],
		[
			"withImage( value: ImageSource ): Background\tNativeScript - Background",
			"withImage(${1:value: ImageSource})"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - RegExpMatchArray",
			"filter<U>(${1:pred: function})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ProxyObject",
			"hasListeners(${1:eventName: string})"
		],
		[
			"new Placeholder( json?: any ): Placeholder\tNativeScript - Placeholder",
			"new Placeholder(${1:json?: any})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Frame",
			"_eachChildView(${1:callback: function})"
		],
		[
			"parse( text: string, reviver?: function ): anyany\tNativeScript - JSON",
			"parse(${1:text: string}, ${2:reviver?: function})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Layout",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"unshift( ...items: string[] ): number\tNativeScript - RegExpMatchArray",
			"unshift(${1:...items: string[]})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Label",
			"_eachChildView(${1:callback: function})"
		],
		[
			"marginBottomProperty: Property\tNativeScript - Module ui/styling/style",
			"marginBottomProperty"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - GridLayout",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - AndroidFrame",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"Static keyboardTypeProperty: Property\tNativeScript - EditableTextBase",
			"Static keyboardTypeProperty"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Button",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - AbsoluteLayout",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - AbsoluteLayout",
			"Static automationTextProperty"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Slider",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - TimePicker",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"fontInternalProperty: Property\tNativeScript - Module ui/styling/style",
			"fontInternalProperty"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Float64Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"new FormattedString(): FormattedString\tNativeScript - FormattedString",
			"new FormattedString()"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Float32Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - SegmentedBarItem",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"withBorderColor( value: Color ): Background\tNativeScript - Background",
			"withBorderColor(${1:value: Color})"
		],
		[
			"substr( from: number, length?: number ): string\tNativeScript - String",
			"substr(${1:from: number}, ${2:length?: number})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - HtmlView",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - StackLayout",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Layout",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"unshift( ...items: string[] ): number\tNativeScript - RegExpMatchArray",
			"unshift(${1:...items: string[]})"
		],
		[
			"new DateConstructor(): DateConstructor\tNativeScript - DateConstructor",
			"new DateConstructor()"
		],
		[
			"Static isUserInteractionEnabledProperty: Property\tNativeScript - View",
			"Static isUserInteractionEnabledProperty"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - ScrollView",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Repeater",
			"_getValueSource(${1:property: Property})"
		],
		[
			"normalizePath( path: string ): string\tNativeScript - FileSystemAccess",
			"normalizePath(${1:path: string})"
		],
		[
			"rename( newName: string ): Promiseany\tNativeScript - FileSystemEntity",
			"rename(${1:newName: string})"
		],
		[
			"onload: functionEventanyEventany\tNativeScript - XMLHttpRequestUpload",
			"onload"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - VirtualArray<T>",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"borderColorProperty: Property\tNativeScript - Module ui/styling/style",
			"borderColorProperty"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Label",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ProxyViewContainer",
			"Static propertyChangeEvent"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - TabView",
			"_getValueSource(${1:property: Property})"
		],
		[
			"onload: functionEventanyEventany\tNativeScript - XMLHttpRequestUpload",
			"onload"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - TimePicker",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - TabViewItem",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Uint32Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - ProxyViewContainer",
			"Static isEnabledProperty"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - GridLayout",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_registerLayoutChild( child: View ): void\tNativeScript - StackLayout",
			"_registerLayoutChild(${1:child: View})"
		],
		[
			"addCategories( categories: string ): any\tNativeScript - Module trace",
			"addCategories(${1:categories: string})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - WrapLayout",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Image",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"verifyCallback( value: any ): void\tNativeScript - Module utils/types",
			"verifyCallback(${1:value: any})"
		],
		[
			"equals( value1: Color, value2: Color ): boolean\tNativeScript - Color",
			"equals(${1:value1: Color}, ${2:value2: Color})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - SegmentedBarItem",
			"_getValue(${1:property: Property})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - View",
			"_eachChildView(${1:callback: function})"
		],
		[
			"joinPaths( paths: string[] ): string\tNativeScript - FileSystemAccess",
			"joinPaths(${1:paths: string[]})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - ProxyViewContainer",
			"Static classNameProperty"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Placeholder",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Placeholder",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ContentView",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ContentView",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - TabView",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - CustomLayoutView",
			"addPseudoClass(${1:name: string})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Frame",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - AbsoluteLayout",
			"_goToVisualState(${1:state: string})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - LayoutBase",
			"hasListeners(${1:eventName: string})"
		],
		[
			"Static selectedIndexChangedEvent: string\tNativeScript - SegmentedBar",
			"Static selectedIndexChangedEvent"
		],
		[
			"marginRightProperty: Property\tNativeScript - Module ui/styling/style",
			"marginRightProperty"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - RegExpExecArray",
			"filter<U>(${1:pred: function})"
		],
		[
			"setMonth( month: number, date?: number ): number\tNativeScript - Date",
			"setMonth(${1:month: number}, ${2:date?: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Observable",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Frame",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - DockLayout",
			"hasListeners(${1:eventName: string})"
		],
		[
			"concat( ...items: string[] ): string\tNativeScript - RegExpMatchArray",
			"concat(${1:...items: string[]})"
		],
		[
			"WrappedValue( value: any ): WrappedValue\tNativeScript - WrappedValue",
			"WrappedValue(${1:value: any})"
		],
		[
			"join( separator?: string ): string\tNativeScript - ObservableArray<T>",
			"join(${1:separator?: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - FormattedString",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ProxyObject",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"clearInterval( id: number ): void\tNativeScript - Module NativeScript",
			"clearInterval(${1:id: number})"
		],
		[
			"unshift( ...items: string[] ): number\tNativeScript - RegExpExecArray",
			"unshift(${1:...items: string[]})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - CustomLayoutView",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_eachChildView( callback: function ): booleanany\tNativeScript - Page",
			"_eachChildView(${1:callback: function})"
		],
		[
			"unshift( ...items: string[] ): number\tNativeScript - RegExpExecArray",
			"unshift(${1:...items: string[]})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Label",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - DatePicker",
			"hasListeners(${1:eventName: string})"
		],
		[
			"overrideMimeType( mime: string ): void\tNativeScript - XMLHttpRequest",
			"overrideMimeType(${1:mime: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ProxyObject",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - CustomLayoutView",
			"_getValue(${1:property: Property})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - StackLayout",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ScrollView",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - StackLayout",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Uint16Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"concat( ...items: string[] ): string\tNativeScript - RegExpMatchArray",
			"concat(${1:...items: string[]})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ListPicker",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - ActivityIndicator",
			"_isAddedToNativeVisualTree"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - RegExpExecArray",
			"filter<U>(${1:pred: function})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Uint32Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"_onColumnAdded( itemSpec: ItemSpec ): void\tNativeScript - GridLayout",
			"_onColumnAdded(${1:itemSpec: ItemSpec})"
		],
		[
			"overrideMimeType( mime: string ): void\tNativeScript - XMLHttpRequest",
			"overrideMimeType(${1:mime: string})"
		],
		[
			"setDock( view: View, value: string ): void\tNativeScript - DockLayout",
			"setDock(${1:view: View}, ${2:value: string})"
		],
		[
			"resolve<T>( object?: T ): PromiseT\tNativeScript - PromiseConstructor",
			"resolve<T>(${1:object?: T})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - EditableTextBase",
			"_getValue(${1:property: Property})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - SearchBar",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - TextField",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ObservableArray<T>",
			"Static propertyChangeEvent"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - WebView",
			"_getValueSource(${1:property: Property})"
		],
		[
			"onNavigatedTo( isBackNavigation: boolean ): void\tNativeScript - Page",
			"onNavigatedTo(${1:isBackNavigation: boolean})"
		],
		[
			"SegmentedBar( json?: any ): SegmentedBar\tNativeScript - SegmentedBar",
			"SegmentedBar(${1:json?: any})"
		],
		[
			"isUndefined( value: any ): boolean\tNativeScript - Module utils/types",
			"isUndefined(${1:value: any})"
		],
		[
			"paddingLeftProperty: Property\tNativeScript - Module ui/styling/style",
			"paddingLeftProperty"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - EditableTextBase",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - NavigationButton",
			"_getValue(${1:property: Property})"
		],
		[
			"resolve<T>( object?: T ): PromiseT\tNativeScript - PromiseConstructor",
			"resolve<T>(${1:object?: T})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ActionItem",
			"hasListeners(${1:eventName: string})"
		],
		[
			"Static autocorrectProperty: Property\tNativeScript - EditableTextBase",
			"Static autocorrectProperty"
		],
		[
			"setMonth( month: number, date?: number ): number\tNativeScript - Date",
			"setMonth(${1:month: number}, ${2:date?: number})"
		],
		[
			"loadFromBase64( source: string ): boolean\tNativeScript - ImageSource",
			"loadFromBase64(${1:source: string})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Image",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - WebView",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"setCategories( categories: string ): any\tNativeScript - Module trace",
			"setCategories(${1:categories: string})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - ActionBar",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"removeWriter( writer: TraceWriter ): any\tNativeScript - Module trace",
			"removeWriter(${1:writer: TraceWriter})"
		],
		[
			"loadFromResource( name: string ): boolean\tNativeScript - ImageSource",
			"loadFromResource(${1:name: string})"
		],
		[
			"AndroidFrame( json?: any ): AndroidFrame\tNativeScript - AndroidFrame",
			"AndroidFrame(${1:json?: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - DependencyObservable",
			"_emit(${1:eventNames: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - TabViewItem",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - EditableTextBase",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Uint16Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"borderWidthProperty: Property\tNativeScript - Module ui/styling/style",
			"borderWidthProperty"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Uint8Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - ActivityIndicator",
			"Static classNameProperty"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Layout",
			"_getValueSource(${1:property: Property})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Uint8ClampedArray",
			"join(${1:separator?: string})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Int16Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Switch",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_requestLayoutOnTextChanged(): void\tNativeScript - EditableTextBase",
			"_requestLayoutOnTextChanged()"
		],
		[
			"slice( start?: number, end?: number ): string\tNativeScript - String",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"XmlParser( event: ParserEvent ): XmlParser\tNativeScript - XmlParser",
			"XmlParser(${1:event: ParserEvent})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - SearchBar",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Button",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - SegmentedBar",
			"Static automationTextProperty"
		],
		[
			"_registerLayoutChild( child: View ): void\tNativeScript - LayoutBase",
			"_registerLayoutChild(${1:child: View})"
		],
		[
			"slice( start?: number, end?: number ): T\tNativeScript - Array<T, T>",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"Static updateTextTriggerProperty: Property\tNativeScript - TextField",
			"Static updateTextTriggerProperty"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Int32Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - LayoutBase",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Border",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"on( name: string, cb: Function ): void\tNativeScript - EasySAXParser",
			"on(${1:name: string}, ${2:cb: Function})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - DatePicker",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - ListView",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - SegmentedBar",
			"Static bindingContextProperty"
		],
		[
			"withClipPath( value: string ): Background\tNativeScript - Background",
			"withClipPath(${1:value: string})"
		],
		[
			"paddingTopProperty: Property\tNativeScript - Module ui/styling/style",
			"paddingTopProperty"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - DatePicker",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Repeater",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"onValidateValue: PropertyValidationCallback\tNativeScript - Property",
			"onValidateValue"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - LayoutBase",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"toUIString( object: any ): string\tNativeScript - Module utils/types",
			"toUIString(${1:object: any})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Switch",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"getAllPointers(): ArrayPointer\tNativeScript - TouchGestureEventData",
			"getAllPointers()"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Uint8Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - View",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Int16Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"isNaN( number: number ): boolean\tNativeScript - Module NativeScript",
			"isNaN(${1:number: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ActionBar",
			"hasListeners(${1:eventName: string})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - View",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Button",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - EditableTextBase",
			"_isAddedToNativeVisualTree"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - GridLayout",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - TimePicker",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"isFunction( value: any ): boolean\tNativeScript - Module utils/types",
			"isFunction(${1:value: any})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Observable",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - GridLayout",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"concat( ...items: string[] ): string\tNativeScript - RegExpExecArray",
			"concat(${1:...items: string[]})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - TimePicker",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"setRow( view: View, value: number ): void\tNativeScript - GridLayout",
			"setRow(${1:view: View}, ${2:value: number})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Uint8ClampedArray",
			"join(${1:separator?: string})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - ProxyViewContainer",
			"Static cssClassProperty"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ActionItem",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - TextField",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - DockLayout",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"splice( start: number ): string\tNativeScript - TemplateStringsArray",
			"splice(${1:start: number})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - ProxyViewContainer",
			"_onAttached(${1:context: any})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ActionItem",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - TextBase",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - ProxyViewContainer",
			"isUserInteractionEnabled"
		],
		[
			"Static defaultTransition: NavigationTransition\tNativeScript - Frame",
			"Static defaultTransition"
		],
		[
			"isDataURI( uri: string ): boolean\tNativeScript - Module utils/utils",
			"isDataURI(${1:uri: string})"
		],
		[
			"splice( start: number ): string\tNativeScript - TemplateStringsArray",
			"splice(${1:start: number})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - DockLayout",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_eachLayoutView( callback: function ): voidvoid\tNativeScript - Page",
			"_eachLayoutView(${1:callback: function})"
		],
		[
			"fileExists( path: string ): boolean\tNativeScript - FileSystemAccess",
			"fileExists(${1:path: string})"
		],
		[
			"onValidateValue: PropertyValidationCallback\tNativeScript - Property",
			"onValidateValue"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ListPicker",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ListPicker",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Border",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_registerLayoutChild( child: View ): void\tNativeScript - DockLayout",
			"_registerLayoutChild(${1:child: View})"
		],
		[
			"Static visibilityProperty: Property\tNativeScript - NavigationButton",
			"Static visibilityProperty"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - SegmentedBar",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"load( options: LoadOptions ): View\tNativeScript - Module ui/builder",
			"load(${1:options: LoadOptions})"
		],
		[
			"setFragmentClass( clazz: any ): void\tNativeScript - Module ui/frame",
			"setFragmentClass(${1:clazz: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - AbsoluteLayout",
			"setInlineStyle(${1:style: string})"
		],
		[
			"encodeURI( uri: string ): string\tNativeScript - Module NativeScript",
			"encodeURI(${1:uri: string})"
		],
		[
			"_registerLayoutChild( child: View ): void\tNativeScript - WrapLayout",
			"_registerLayoutChild(${1:child: View})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - AbsoluteLayout",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"concat( ...items: string[] ): string\tNativeScript - RegExpExecArray",
			"concat(${1:...items: string[]})"
		],
		[
			"marginLeftProperty: Property\tNativeScript - Module ui/styling/style",
			"marginLeftProperty"
		],
		[
			"whiteSpaceProperty: Property\tNativeScript - Module ui/styling/style",
			"whiteSpaceProperty"
		],
		[
			"_downloadCore( request: DownloadRequest ): any\tNativeScript - Cache",
			"_downloadCore(${1:request: DownloadRequest})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - WrapLayout",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - WrapLayout",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"clearTimeout( id: number ): void\tNativeScript - Module NativeScript",
			"clearTimeout(${1:id: number})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - ProxyViewContainer",
			"_getCurrentLayoutBounds()"
		],
		[
			"visibilityProperty: Property\tNativeScript - Module ui/styling/style",
			"visibilityProperty"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - SegmentedBar",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Progress",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"slice( start?: number, end?: number ): T\tNativeScript - Array<T, T>",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"translateYProperty: Property\tNativeScript - Module ui/styling/style",
			"translateYProperty"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Slider",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - CustomLayoutView",
			"_isAddedToNativeVisualTree"
		],
		[
			"onValidateValue: PropertyValidationCallback\tNativeScript - Property",
			"onValidateValue"
		],
		[
			"getValidIndex( index?: number ): number\tNativeScript - SegmentedBar",
			"getValidIndex(${1:index?: number})"
		],
		[
			"_registerLayoutChild( child: View ): void\tNativeScript - GridLayout",
			"_registerLayoutChild(${1:child: View})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ActivityIndicator",
			"Static propertyChangeEvent"
		],
		[
			"translateXProperty: Property\tNativeScript - Module ui/styling/style",
			"translateXProperty"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Slider",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - ActivityIndicator",
			"Static isEnabledProperty"
		],
		[
			"onloadstart: functionEventanyEventany\tNativeScript - XMLHttpRequest",
			"onloadstart"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Int32Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"fromFile( path: string ): Promiseboolean\tNativeScript - ImageSource",
			"fromFile(${1:path: string})"
		],
		[
			"getLocationRelativeTo( otherView: View ): Point\tNativeScript - Page",
			"getLocationRelativeTo(${1:otherView: View})"
		],
		[
			"fontWeightProperty: Property\tNativeScript - Module ui/styling/style",
			"fontWeightProperty"
		],
		[
			"getChildAt( index: number ): View\tNativeScript - ProxyViewContainer",
			"getChildAt(${1:index: number})"
		],
		[
			"withPosition( value: string ): Background\tNativeScript - Background",
			"withPosition(${1:value: string})"
		],
		[
			"Static clipToBoundsProperty: Property\tNativeScript - AbsoluteLayout",
			"Static clipToBoundsProperty"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - TextView",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"slice( start?: number, end?: number ): string\tNativeScript - String",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - HtmlView",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ScrollView",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"onloadstart: functionEventanyEventany\tNativeScript - XMLHttpRequest",
			"onloadstart"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Layout",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"Static stretchLastChildProperty: Property\tNativeScript - DockLayout",
			"Static stretchLastChildProperty"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ScrollView",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"fontFamilyProperty: Property\tNativeScript - Module ui/styling/style",
			"fontFamilyProperty"
		],
		[
			"prototype: ReferenceError\tNativeScript - ReferenceErrorConstructor",
			"prototype"
		],
		[
			"unshift( ...items: T[] ): number\tNativeScript - ObservableArray<T>",
			"unshift(${1:...items: T[]})"
		],
		[
			"new ScrollView( json?: any ): ScrollView\tNativeScript - ScrollView",
			"new ScrollView(${1:json?: any})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - CustomLayoutView",
			"Static isEnabledProperty"
		],
		[
			"append( name: string, value: string ): void\tNativeScript - Headers",
			"append(${1:name: string}, ${2:value: string})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - CustomLayoutView",
			"Static propertyChangeEvent"
		],
		[
			"parseJSON( source: string ): any\tNativeScript - Module utils/utils",
			"parseJSON(${1:source: string})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - StackLayout",
			"Static automationTextProperty"
		],
		[
			"removeColumn( itemSpec: ItemSpec ): void\tNativeScript - GridLayout",
			"removeColumn(${1:itemSpec: ItemSpec})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - HtmlView",
			"hasListeners(${1:eventName: string})"
		],
		[
			"new TimePicker( json?: any ): TimePicker\tNativeScript - TimePicker",
			"new TimePicker(${1:json?: any})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - StackLayout",
			"Static bindingContextProperty"
		],
		[
			"push( ...items: string[] ): number\tNativeScript - RegExpMatchArray",
			"push(${1:...items: string[]})"
		],
		[
			"convertString( value: any ): any\tNativeScript - Module utils/utils",
			"convertString(${1:value: any})"
		],
		[
			"Static Promise: PromiseConstructor\tNativeScript - AnimationPromise",
			"Static Promise"
		],
		[
			"join( separator?: string ): string\tNativeScript - RegExpMatchArray",
			"join(${1:separator?: string})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Placeholder",
			"Static automationTextProperty"
		],
		[
			"concat<U>( ...items: U[] ): string\tNativeScript - RegExpMatchArray",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Placeholder",
			"Static bindingContextProperty"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - ActivityIndicator",
			"_onAttached(${1:context: any})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Repeater",
			"hasListeners(${1:eventName: string})"
		],
		[
			"dispatchEvent( evt: Event ): boolean\tNativeScript - XMLHttpRequest",
			"dispatchEvent(${1:evt: Event})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - TextView",
			"hasListeners(${1:eventName: string})"
		],
		[
			"append( name: string, value: string ): void\tNativeScript - Headers",
			"append(${1:name: string}, ${2:value: string})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ProxyObject",
			"Static bindingContextProperty"
		],
		[
			"handleEvent( evt: Event ): void\tNativeScript - EventListenerObject",
			"handleEvent(${1:evt: Event})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - ListView",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Placeholder",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"handleEvent( evt: Event ): void\tNativeScript - EventListenerObject",
			"handleEvent(${1:evt: Event})"
		],
		[
			"valueConverter: functionstringanystringany\tNativeScript - Property",
			"valueConverter"
		],
		[
			"setSeconds( sec: number, ms?: number ): number\tNativeScript - Date",
			"setSeconds(${1:sec: number}, ${2:ms?: number})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Image",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"equalityComparer: PropertyEqualityComparer\tNativeScript - Property",
			"equalityComparer"
		],
		[
			"valueConverter: functionstringanystringany\tNativeScript - Property",
			"valueConverter"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - ActivityIndicator",
			"_getCurrentLayoutBounds()"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Image",
			"_getValueSource(${1:property: Property})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Placeholder",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"prototype: ReferenceError\tNativeScript - ReferenceErrorConstructor",
			"prototype"
		],
		[
			"setNativeSource( source: any ): boolean\tNativeScript - ImageSource",
			"setNativeSource(${1:source: any})"
		],
		[
			"declarations: ArrayKeyframeDeclaration\tNativeScript - KeyframeInfo",
			"declarations"
		],
		[
			"equalityComparer: PropertyEqualityComparer\tNativeScript - Property",
			"equalityComparer"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - TabViewItem",
			"Static bindingContextProperty"
		],
		[
			"equalityComparer: PropertyEqualityComparer\tNativeScript - Property",
			"equalityComparer"
		],
		[
			"new DockLayout( json?: any ): DockLayout\tNativeScript - DockLayout",
			"new DockLayout(${1:json?: any})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - ActivityIndicator",
			"Static cssClassProperty"
		],
		[
			"reject( error: any ): Promiseany\tNativeScript - PromiseConstructor",
			"reject(${1:error: any})"
		],
		[
			"getString( url: string ): Promisestring\tNativeScript - Module http",
			"getString(${1:url: string})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - StackLayout",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"orientationProperty: Property\tNativeScript - Module ui/scroll-view",
			"orientationProperty"
		],
		[
			"new Observable( json?: any ): Observable\tNativeScript - Observable",
			"new Observable(${1:json?: any})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Bindable",
			"hasListeners(${1:eventName: string})"
		],
		[
			"LightGoldenRodYellow: any\tNativeScript - Module color/known-colors",
			"LightGoldenRodYellow"
		],
		[
			"observe( type: GestureTypes ): any\tNativeScript - GesturesObserver",
			"observe(${1:type: GestureTypes})"
		],
		[
			"isDefined( value: any ): boolean\tNativeScript - Module utils/types",
			"isDefined(${1:value: any})"
		],
		[
			"reject( error: any ): Promiseany\tNativeScript - PromiseConstructor",
			"reject(${1:error: any})"
		],
		[
			"android: AndroidActionItemSettings\tNativeScript - NavigationButton",
			"android"
		],
		[
			"apply( thisArg: any, argArray?: any ): any\tNativeScript - Function",
			"apply(${1:thisArg: any}, ${2:argArray?: any})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - CustomLayoutView",
			"Static classNameProperty"
		],
		[
			"Static classNameProperty: Property\tNativeScript - EditableTextBase",
			"Static classNameProperty"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Style",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_inheritStyleProperties( parent: View ): void\tNativeScript - Style",
			"_inheritStyleProperties(${1:parent: View})"
		],
		[
			"Static updateTextTriggerProperty: Property\tNativeScript - TextView",
			"Static updateTextTriggerProperty"
		],
		[
			"getChildIndex( child: View ): number\tNativeScript - AbsoluteLayout",
			"getChildIndex(${1:child: View})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - ProxyViewContainer",
			"_shouldApplyStyleHandlers()"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - AbsoluteLayout",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - SegmentedBar",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - SearchBar",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - NavigationButton",
			"Static propertyChangeEvent"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - SearchBar",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"transitioniOS: NavigationTransition\tNativeScript - NavigationEntry",
			"transitioniOS"
		],
		[
			"concat<U>( ...items: U[] ): string\tNativeScript - RegExpMatchArray",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"Static selectedIndexProperty: Property\tNativeScript - SegmentedBar",
			"Static selectedIndexProperty"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Int8Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"join( separator?: string ): string\tNativeScript - RegExpMatchArray",
			"join(${1:separator?: string})"
		],
		[
			"push( ...items: string[] ): number\tNativeScript - RegExpMatchArray",
			"push(${1:...items: string[]})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - ContentView",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - SegmentedBarItem",
			"Static propertyChangeEvent"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - AbsoluteLayout",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Progress",
			"hasListeners(${1:eventName: string})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - EditableTextBase",
			"Static isEnabledProperty"
		],
		[
			"minHeightProperty: Property\tNativeScript - Module ui/styling/style",
			"minHeightProperty"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - ContentView",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - EditableTextBase",
			"Static propertyChangeEvent"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Label",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - TabView",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Label",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Frame",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"new LayoutBase( json?: any ): LayoutBase\tNativeScript - LayoutBase",
			"new LayoutBase(${1:json?: any})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - ActivityIndicator",
			"isUserInteractionEnabled"
		],
		[
			"apply( thisArg: any, argArray?: any ): any\tNativeScript - Function",
			"apply(${1:thisArg: any}, ${2:argArray?: any})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ContentView",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - ContentView",
			"Static automationTextProperty"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - AbsoluteLayout",
			"_getValue(${1:property: Property})"
		],
		[
			"marginTopProperty: Property\tNativeScript - Module ui/styling/style",
			"marginTopProperty"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - WebView",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ProxyViewContainer",
			"_emit(${1:eventNames: string})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ActionBar",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"dispatchEvent( evt: Event ): boolean\tNativeScript - XMLHttpRequest",
			"dispatchEvent(${1:evt: Event})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ActionBar",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"fontStyleProperty: Property\tNativeScript - Module ui/styling/style",
			"fontStyleProperty"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Style",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_inheritStyleProperties( parent: View ): void\tNativeScript - Style",
			"_inheritStyleProperties(${1:parent: View})"
		],
		[
			"new GridLayout( json?: any ): GridLayout\tNativeScript - GridLayout",
			"new GridLayout(${1:json?: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ObservableArray<T>",
			"_emit(${1:eventNames: string})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - StackLayout",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - TextField",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - TextField",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Frame",
			"_getValueSource(${1:property: Property})"
		],
		[
			"setSeconds( sec: number, ms?: number ): number\tNativeScript - Date",
			"setSeconds(${1:sec: number}, ${2:ms?: number})"
		],
		[
			"eachEntity( onEntity: function ): booleanany\tNativeScript - Folder",
			"eachEntity(${1:onEntity: function})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - TextBase",
			"hasListeners(${1:eventName: string})"
		],
		[
			"new ActionItem( json?: any ): ActionItem\tNativeScript - ActionItem",
			"new ActionItem(${1:json?: any})"
		],
		[
			"new WrapLayout( json?: any ): WrapLayout\tNativeScript - WrapLayout",
			"new WrapLayout(${1:json?: any})"
		],
		[
			"set( index: number, value: number ): void\tNativeScript - Int8Array",
			"set(${1:index: number}, ${2:value: number})"
		],
		[
			"getItemAt( index: number ): ActionItem\tNativeScript - ActionItems",
			"getItemAt(${1:index: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Bindable",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"openUrl( url: string ): boolean\tNativeScript - Module utils/utils",
			"openUrl(${1:url: string})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Bindable",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - TimePicker",
			"Static bindingContextProperty"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - ProxyViewContainer",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - DatePicker",
			"Static bindingContextProperty"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Layout",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"push( ...items: string[] ): number\tNativeScript - RegExpExecArray",
			"push(${1:...items: string[]})"
		],
		[
			"join( separator?: string ): string\tNativeScript - RegExpExecArray",
			"join(${1:separator?: string})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - VirtualArray<T>",
			"Static propertyChangeEvent"
		],
		[
			"getClass( object: any ): string\tNativeScript - Module utils/types",
			"getClass(${1:object: any})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - CustomLayoutView",
			"Static cssClassProperty"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - TabView",
			"hasListeners(${1:eventName: string})"
		],
		[
			"set: functionTvoidTvoid\tNativeScript - TypedPropertyDescriptor<T>",
			"set"
		],
		[
			"concat<U>( ...items: U[] ): string\tNativeScript - RegExpExecArray",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - ProxyViewContainer",
			"_unregisterAllAnimations()"
		],
		[
			"concat<U>( ...items: U[] ): string\tNativeScript - RegExpExecArray",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"join( separator?: string ): string\tNativeScript - RegExpExecArray",
			"join(${1:separator?: string})"
		],
		[
			"ProxyObject( json?: any ): ProxyObject\tNativeScript - ProxyObject",
			"ProxyObject(${1:json?: any})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - LayoutBase",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - ListPicker",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - CustomLayoutView",
			"_getCurrentLayoutBounds()"
		],
		[
			"return( value?: any ): IteratorResultT\tNativeScript - Iterator<T>",
			"return(${1:value?: any})"
		],
		[
			"StackLayout( json?: any ): StackLayout\tNativeScript - StackLayout",
			"StackLayout(${1:json?: any})"
		],
		[
			"removeChild( view: View ): void\tNativeScript - ProxyViewContainer",
			"removeChild(${1:view: View})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - GridLayout",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"push( ...items: string[] ): number\tNativeScript - RegExpExecArray",
			"push(${1:...items: string[]})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - WebView",
			"hasListeners(${1:eventName: string})"
		],
		[
			"isString( value: any ): boolean\tNativeScript - Module utils/types",
			"isString(${1:value: any})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - ListPicker",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_unregisterLayoutChild( child: View ): void\tNativeScript - Layout",
			"_unregisterLayoutChild(${1:child: View})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Progress",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Progress",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - ListView",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Button",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - DockLayout",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - ListView",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Span",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - HtmlView",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"removeCallback( id: number ): any\tNativeScript - Module fps-meter",
			"removeCallback(${1:id: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - HtmlView",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ActionItem",
			"Static bindingContextProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - GridLayout",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - GridLayout",
			"Static automationTextProperty"
		],
		[
			"minWidthProperty: Property\tNativeScript - Module ui/styling/style",
			"minWidthProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ListPicker",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - ListPicker",
			"Static automationTextProperty"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - SegmentedBar",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - ActivityIndicator",
			"_shouldApplyStyleHandlers()"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - FormattedString",
			"Static propertyChangeEvent"
		],
		[
			"Placeholder( json?: any ): Placeholder\tNativeScript - Placeholder",
			"Placeholder(${1:json?: any})"
		],
		[
			"set: functionTvoidTvoid\tNativeScript - TypedPropertyDescriptor<T>",
			"set"
		],
		[
			"Static editableProperty: Property\tNativeScript - EditableTextBase",
			"Static editableProperty"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - SegmentedBar",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - CustomLayoutView",
			"isUserInteractionEnabled"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ActivityIndicator",
			"_emit(${1:eventNames: string})"
		],
		[
			"isObject( value: any ): boolean\tNativeScript - Module utils/types",
			"isObject(${1:value: any})"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - View",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"isView( arg: any ): boolean\tNativeScript - ArrayBufferConstructor",
			"isView(${1:arg: any})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - AndroidFrame",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"isNumber( value: any ): boolean\tNativeScript - Module utils/types",
			"isNumber(${1:value: any})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ScrollView",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - DockLayout",
			"Static automationTextProperty"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - TimePicker",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - DatePicker",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - View",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - ContentView",
			"_goToVisualState(${1:state: string})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - WrapLayout",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Repeater",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"keyframes: ArrayKeyframeInfo\tNativeScript - KeyframeAnimationInfo",
			"keyframes"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - EditableTextBase",
			"Static cssClassProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - LayoutBase",
			"Static automationTextProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - LayoutBase",
			"Static bindingContextProperty"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - TextBase",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"withRepeat( value: string ): Background\tNativeScript - Background",
			"withRepeat(${1:value: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - TextBase",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Repeater",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"addWriter( writer: TraceWriter ): any\tNativeScript - Module trace",
			"addWriter(${1:writer: TraceWriter})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - DatePicker",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - TextView",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - TextView",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - ScrollView",
			"Static automationTextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - TimePicker",
			"Static automationTextProperty"
		],
		[
			"test: \"=\"\"^=\"\"$=\"\"*=\"\"=\"\"~=\"\"|=\"\tNativeScript - AttributeSelector",
			"test"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - DockLayout",
			"Static bindingContextProperty"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - EditableTextBase",
			"isUserInteractionEnabled"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - StackLayout",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Switch",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"ignorePropertyHandler: any\tNativeScript - Module ui/styling/style",
			"ignorePropertyHandler"
		],
		[
			"FormattedString(): FormattedString\tNativeScript - FormattedString",
			"FormattedString()"
		],
		[
			"equals( value1: Font, value2: Font ): boolean\tNativeScript - Font",
			"equals(${1:value1: Font}, ${2:value2: Font})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - DockLayout",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - ProxyViewContainer",
			"unbind(${1:property: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - EditableTextBase",
			"_getCurrentLayoutBounds()"
		],
		[
			"stringify( value: any, replacer: any[] ): any\tNativeScript - JSON",
			"stringify(${1:value: any}, ${2:replacer: any[]})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - DatePicker",
			"Static automationTextProperty"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - WrapLayout",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"TabViewItem( json?: any ): TabViewItem\tNativeScript - TabViewItem",
			"TabViewItem(${1:json?: any})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - GridLayout",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"stringify( value: any, replacer: any[] ): any\tNativeScript - JSON",
			"stringify(${1:value: any}, ${2:replacer: any[]})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - ScrollView",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_onRowAdded( itemSpec: ItemSpec ): void\tNativeScript - GridLayout",
			"_onRowAdded(${1:itemSpec: ItemSpec})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - EditableTextBase",
			"_onAttached(${1:context: any})"
		],
		[
			"return( value?: any ): IteratorResultT\tNativeScript - Iterator<T>",
			"return(${1:value?: any})"
		],
		[
			"DateConstructor(): DateConstructor\tNativeScript - DateConstructor",
			"DateConstructor()"
		],
		[
			"_getValueSource( property: Property ): number\tNativeScript - Page",
			"_getValueSource(${1:property: Property})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - CustomLayoutView",
			"_onAttached(${1:context: any})"
		],
		[
			"fontSizeProperty: Property\tNativeScript - Module ui/styling/style",
			"fontSizeProperty"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - AbsoluteLayout",
			"_isAddedToNativeVisualTree"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Border",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - LayoutBase",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"getEntities(): PromiseArrayFileSystemEntity\tNativeScript - Folder",
			"getEntities()"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - TimePicker",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"ContentView( json?: any ): ContentView\tNativeScript - ContentView",
			"ContentView(${1:json?: any})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Slider",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"formattedText: FormattedString\tNativeScript - FormattedStringView",
			"formattedText"
		],
		[
			"isView( arg: any ): boolean\tNativeScript - ArrayBufferConstructor",
			"isView(${1:arg: any})"
		],
		[
			"DateConstructor(): DateConstructor\tNativeScript - DateConstructor",
			"DateConstructor()"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - ScrollView",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - WrapLayout",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - WrapLayout",
			"Static automationTextProperty"
		],
		[
			"_addView( view: View, atIndex?: number ): any\tNativeScript - Page",
			"_addView(${1:view: View}, ${2:atIndex?: number})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Placeholder",
			"_goToVisualState(${1:state: string})"
		],
		[
			"clipPathProperty: Property\tNativeScript - Module ui/styling/style",
			"clipPathProperty"
		],
		[
			"toFixed( fractionDigits?: number ): string\tNativeScript - Number",
			"toFixed(${1:fractionDigits?: number})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - StackLayout",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - DatePicker",
			"_goToVisualState(${1:state: string})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Button",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - TextField",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - EditableTextBase",
			"_shouldApplyStyleHandlers()"
		],
		[
			"Static classNameProperty: Property\tNativeScript - AbsoluteLayout",
			"Static classNameProperty"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Frame",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - WrapLayout",
			"_goToVisualState(${1:state: string})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - AbsoluteLayout",
			"Static isEnabledProperty"
		],
		[
			"sort( compareFn?: function ): numberT\tNativeScript - Array<T, T>",
			"sort(${1:compareFn?: function})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - ActionBar",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - AbsoluteLayout",
			"Static propertyChangeEvent"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - LayoutBase",
			"_goToVisualState(${1:state: string})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - SearchBar",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"getDocumentsFolderPath(): string\tNativeScript - FileSystemAccess",
			"getDocumentsFolderPath()"
		],
		[
			"readText( encoding?: string ): Promisestring\tNativeScript - File",
			"readText(${1:encoding?: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - EditableTextBase",
			"_emit(${1:eventNames: string})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - ActionBar",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"type: \"\"\"*\"\"#\"\".\"\":\"\"[]\"\tNativeScript - SimpleIdentifierSelector",
			"type"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Border",
			"hasListeners(${1:eventName: string})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Float64ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"query<T>( node: T ): SelectorsMatchT\tNativeScript - SelectorsMap",
			"query<T>(${1:node: T})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Label",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - WebView",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Layout",
			"hasListeners(${1:eventName: string})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - TextField",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - TabView",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - ProxyViewContainer",
			"_getNativeViewsCount()"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Switch",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - WebView",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"Static selectedIndexProperty: Property\tNativeScript - ListPicker",
			"Static selectedIndexProperty"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - ActivityIndicator",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - NavigationButton",
			"_emit(${1:eventNames: string})"
		],
		[
			"opacityProperty: Property\tNativeScript - Module ui/styling/style",
			"opacityProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ActionBar",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - ActionBar",
			"Static automationTextProperty"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - TabView",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - ListPicker",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - SegmentedBar",
			"_getValue(${1:property: Property})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - SearchBar",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - ProxyViewContainer",
			"_removeView(${1:view: View})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - StackLayout",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - TextField",
			"Static automationTextProperty"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - DockLayout",
			"_goToVisualState(${1:state: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ContentView",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - ContentView",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - SegmentedBar",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - TextField",
			"Static bindingContextProperty"
		],
		[
			"sort( compareFn?: function ): numberT\tNativeScript - Array<T, T>",
			"sort(${1:compareFn?: function})"
		],
		[
			"propertyIsEnumerable( v: string ): boolean\tNativeScript - Object",
			"propertyIsEnumerable(${1:v: string})"
		],
		[
			"isExtensible( o: any ): boolean\tNativeScript - ObjectConstructor",
			"isExtensible(${1:o: any})"
		],
		[
			"preventExtensions<T>( o: T ): T\tNativeScript - ObjectConstructor",
			"preventExtensions<T>(${1:o: T})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Float32ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - SearchBar",
			"Static bindingContextProperty"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Float64ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - SearchBar",
			"Static automationTextProperty"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - SegmentedBar",
			"addPseudoClass(${1:name: string})"
		],
		[
			"cast<T>( object: T ): PromiseT\tNativeScript - PromiseConstructor",
			"cast<T>(${1:object: T})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - GridLayout",
			"_goToVisualState(${1:state: string})"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - Array<T, T>",
			"filter<U>(${1:pred: function})"
		],
		[
			"cast<T>( object: T ): PromiseT\tNativeScript - PromiseConstructor",
			"cast<T>(${1:object: T})"
		],
		[
			"fromData( data: any ): Promiseboolean\tNativeScript - ImageSource",
			"fromData(${1:data: any})"
		],
		[
			"preventExtensions<T>( o: T ): T\tNativeScript - ObjectConstructor",
			"preventExtensions<T>(${1:o: T})"
		],
		[
			"loadFromFile( path: string ): boolean\tNativeScript - ImageSource",
			"loadFromFile(${1:path: string})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Placeholder",
			"setInlineStyle(${1:style: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Placeholder",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"isExtensible( o: any ): boolean\tNativeScript - ObjectConstructor",
			"isExtensible(${1:o: any})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Image",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"propertyIsEnumerable( v: string ): boolean\tNativeScript - Object",
			"propertyIsEnumerable(${1:v: string})"
		],
		[
			"toFixed( fractionDigits?: number ): string\tNativeScript - Number",
			"toFixed(${1:fractionDigits?: number})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Slider",
			"hasListeners(${1:eventName: string})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Float32ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - TabViewItem",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - Array<T, T>",
			"filter<U>(${1:pred: function})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - CustomLayoutView",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - ScrollView",
			"_goToVisualState(${1:state: string})"
		],
		[
			"Static clipToBoundsProperty: Property\tNativeScript - StackLayout",
			"Static clipToBoundsProperty"
		],
		[
			"createFormattedStringCore(): void\tNativeScript - FormattedString",
			"createFormattedStringCore()"
		],
		[
			"unbind( property: string ): any\tNativeScript - ActivityIndicator",
			"unbind(${1:property: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ProxyObject",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - CustomLayoutView",
			"_emit(${1:eventNames: string})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - TimePicker",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - ActivityIndicator",
			"_unregisterAllAnimations()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - SegmentedBarItem",
			"_emit(${1:eventNames: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - SegmentedBarItem",
			"unbind(${1:property: string})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - TextBase",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"configurable: boolean\tNativeScript - TypedPropertyDescriptor<T>",
			"configurable"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - DockLayout",
			"setInlineStyle(${1:style: string})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Frame",
			"hasListeners(${1:eventName: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - DockLayout",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - TextBase",
			"Static bindingContextProperty"
		],
		[
			"removeSync( onError?: function ): anyvoid\tNativeScript - Folder",
			"removeSync(${1:onError?: function})"
		],
		[
			"onerror: functionEventanyEventany\tNativeScript - XMLHttpRequest",
			"onerror"
		],
		[
			"splice( start: number ): string\tNativeScript - RegExpMatchArray",
			"splice(${1:start: number})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - HtmlView",
			"Static bindingContextProperty"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint16ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"Static clipToBoundsProperty: Property\tNativeScript - GridLayout",
			"Static clipToBoundsProperty"
		],
		[
			"new ActionBar( json?: any ): ActionBar\tNativeScript - ActionBar",
			"new ActionBar(${1:json?: any})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - TextView",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"transition: NavigationTransition\tNativeScript - NavigationEntry",
			"transition"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Repeater",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - ActivityIndicator",
			"_getNativeViewsCount()"
		],
		[
			"Static clipToBoundsProperty: Property\tNativeScript - WrapLayout",
			"Static clipToBoundsProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - HtmlView",
			"Static automationTextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - TextBase",
			"Static automationTextProperty"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Style",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Border",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - HtmlView",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - AbsoluteLayout",
			"isUserInteractionEnabled"
		],
		[
			"clearSync( onError?: function ): voidvoid\tNativeScript - Folder",
			"clearSync(${1:onError?: function})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Progress",
			"Static automationTextProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - ListView",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - ListView",
			"Static automationTextProperty"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Image",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Border",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Progress",
			"Static bindingContextProperty"
		],
		[
			"_processNavigationQueue( page: Page ): any\tNativeScript - Frame",
			"_processNavigationQueue(${1:page: Page})"
		],
		[
			"concat<U>( ...items: U[] ): T\tNativeScript - ObservableArray<T>",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - TextBase",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - TextField",
			"_goToVisualState(${1:state: string})"
		],
		[
			"addColumn( itemSpec: ItemSpec ): void\tNativeScript - GridLayout",
			"addColumn(${1:itemSpec: ItemSpec})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Layout",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"require: NativeScriptRequire\tNativeScript - Module NativeScript",
			"require"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - ContentView",
			"addPseudoClass(${1:name: string})"
		],
		[
			"getChildIndex( child: View ): number\tNativeScript - StackLayout",
			"getChildIndex(${1:child: View})"
		],
		[
			"alert( message?: any ): void\tNativeScript - Module NativeScript",
			"alert(${1:message?: any})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - ActivityIndicator",
			"_removeView(${1:view: View})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - WrapLayout",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - AbsoluteLayout",
			"Static cssClassProperty"
		],
		[
			"splice( start: number ): string\tNativeScript - RegExpMatchArray",
			"splice(${1:start: number})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Progress",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint32ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - ListView",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"onValueChanged: PropertyChangedCallback\tNativeScript - Property",
			"onValueChanged"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Placeholder",
			"_getValue(${1:property: Property})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ProxyObject",
			"_getValue(${1:property: Property})"
		],
		[
			"minimumUpdateTime: number\tNativeScript - AndroidLocationManager",
			"minimumUpdateTime"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Repeater",
			"Static bindingContextProperty"
		],
		[
			"heightProperty: Property\tNativeScript - Module ui/styling/style",
			"heightProperty"
		],
		[
			"unbind( property: string ): any\tNativeScript - NavigationButton",
			"unbind(${1:property: string})"
		],
		[
			"match( regexp: string ): RegExpMatchArray\tNativeScript - String",
			"match(${1:regexp: string})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - EditableTextBase",
			"_unregisterAllAnimations()"
		],
		[
			"match( regexp: RegExp ): RegExpMatchArray\tNativeScript - String",
			"match(${1:regexp: RegExp})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Layout",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"toPrecision( precision?: number ): string\tNativeScript - Number",
			"toPrecision(${1:precision?: number})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - GridLayout",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - AbsoluteLayout",
			"_getCurrentLayoutBounds()"
		],
		[
			"new TextField( json?: any ): TextField\tNativeScript - TextField",
			"new TextField(${1:json?: any})"
		],
		[
			"onValueChanged: PropertyChangedCallback\tNativeScript - Property",
			"onValueChanged"
		],
		[
			"onabort: functionEventanyEventany\tNativeScript - XMLHttpRequest",
			"onabort"
		],
		[
			"new Property( value: string ): Property\tNativeScript - Property",
			"new Property(${1:value: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Button",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - AbsoluteLayout",
			"_onAttached(${1:context: any})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Button",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - StackLayout",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - ContentView",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - GridLayout",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"set( key: K, value: V ): WeakMapKV\tNativeScript - WeakMap<K, V>",
			"set(${1:key: K}, ${2:value: V})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - ActionBar",
			"_goToVisualState(${1:state: string})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - ListPicker",
			"setInlineStyle(${1:style: string})"
		],
		[
			"slice( start?: number, end?: number ): T\tNativeScript - List<T>",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Repeater",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - ProxyViewContainer",
			"_isInheritedChange()"
		],
		[
			"MediumSpringGreen: any\tNativeScript - Module color/known-colors",
			"MediumSpringGreen"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - HtmlView",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint32ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"match( regexp: RegExp ): RegExpMatchArray\tNativeScript - String",
			"match(${1:regexp: RegExp})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - View",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ListPicker",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"object: Observable\tNativeScript - SelectedIndexChangedEventData",
			"object"
		],
		[
			"removeRow( itemSpec: ItemSpec ): void\tNativeScript - GridLayout",
			"removeRow(${1:itemSpec: ItemSpec})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ContentView",
			"_getValue(${1:property: Property})"
		],
		[
			"withColor( value: Color ): Background\tNativeScript - Background",
			"withColor(${1:value: Color})"
		],
		[
			"match( regexp: string ): RegExpMatchArray\tNativeScript - String",
			"match(${1:regexp: string})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - DatePicker",
			"setInlineStyle(${1:style: string})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Placeholder",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - SegmentedBar",
			"_isAddedToNativeVisualTree"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - SearchBar",
			"_goToVisualState(${1:state: string})"
		],
		[
			"Static clipToBoundsProperty: Property\tNativeScript - LayoutBase",
			"Static clipToBoundsProperty"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - CustomLayoutView",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - ProxyViewContainer",
			"_syncNativeProperties()"
		],
		[
			"rotateProperty: Property\tNativeScript - Module ui/styling/style",
			"rotateProperty"
		],
		[
			"getChildAt( index: number ): View\tNativeScript - AbsoluteLayout",
			"getChildAt(${1:index: number})"
		],
		[
			"set( key: K, value: V ): WeakMapKV\tNativeScript - WeakMap<K, V>",
			"set(${1:key: K}, ${2:value: V})"
		],
		[
			"onabort: functionEventanyEventany\tNativeScript - XMLHttpRequest",
			"onabort"
		],
		[
			"configurable: boolean\tNativeScript - TypedPropertyDescriptor<T>",
			"configurable"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Repeater",
			"Static automationTextProperty"
		],
		[
			"onerror: functionEventanyEventany\tNativeScript - XMLHttpRequest",
			"onerror"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - VirtualArray<T>",
			"_emit(${1:eventNames: string})"
		],
		[
			"Static formattedTextProperty: Property\tNativeScript - TextField",
			"Static formattedTextProperty"
		],
		[
			"scaleXProperty: Property\tNativeScript - Module ui/styling/style",
			"scaleXProperty"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - TimePicker",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Bindable",
			"Static bindingContextProperty"
		],
		[
			"scaleYProperty: Property\tNativeScript - Module ui/styling/style",
			"scaleYProperty"
		],
		[
			"object: Observable\tNativeScript - SelectedIndexChangedEventData",
			"object"
		],
		[
			"withSize( value: string ): Background\tNativeScript - Background",
			"withSize(${1:value: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Observable",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Placeholder",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Cache",
			"hasListeners(${1:eventName: string})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - LayoutBase",
			"setInlineStyle(${1:style: string})"
		],
		[
			"Static returnKeyTypeProperty: Property\tNativeScript - TextField",
			"Static returnKeyTypeProperty"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - EditableTextBase",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Switch",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Switch",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"type: \"rule\"\"keyframes\"\"declaration\"\tNativeScript - Declaration",
			"type"
		],
		[
			"new SearchBar( json?: any ): SearchBar\tNativeScript - SearchBar",
			"new SearchBar(${1:json?: any})"
		],
		[
			"Static selectedIndexChangedEvent: string\tNativeScript - TabView",
			"Static selectedIndexChangedEvent"
		],
		[
			"_registerLayoutChild( child: View ): void\tNativeScript - Layout",
			"_registerLayoutChild(${1:child: View})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - TimePicker",
			"setInlineStyle(${1:style: string})"
		],
		[
			"zIndexProperty: Property\tNativeScript - Module ui/styling/style",
			"zIndexProperty"
		],
		[
			"Static itemsLoadingEvent: string\tNativeScript - VirtualArray<T>",
			"Static itemsLoadingEvent"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - ScrollView",
			"setInlineStyle(${1:style: string})"
		],
		[
			"toFile: functionstringFilestringFile\tNativeScript - HttpContent",
			"toFile"
		],
		[
			"push( ...items: T[] ): number\tNativeScript - ObservableArray<T>",
			"push(${1:...items: T[]})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ScrollView",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"removeItem( item: ActionItem ): void\tNativeScript - ActionItems",
			"removeItem(${1:item: ActionItem})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - StackLayout",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Progress",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - FormattedString",
			"_emit(${1:eventNames: string})"
		],
		[
			"set( name: string, value: string ): void\tNativeScript - Headers",
			"set(${1:name: string}, ${2:value: string})"
		],
		[
			"Static clipToBoundsProperty: Property\tNativeScript - DockLayout",
			"Static clipToBoundsProperty"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Slider",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - TabViewItem",
			"_getValue(${1:property: Property})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - StackLayout",
			"_getValue(${1:property: Property})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Slider",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"onValueChanged: PropertyChangedCallback\tNativeScript - Property",
			"onValueChanged"
		],
		[
			"slice( start?: number, end?: number ): T\tNativeScript - List<T>",
			"slice(${1:start?: number}, ${2:end?: number})"
		],
		[
			"new EasySAXParser(): EasySAXParser\tNativeScript - EasySAXParser",
			"new EasySAXParser()"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - DatePicker",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"next( value?: any ): IteratorResultT\tNativeScript - Iterator<T>",
			"next(${1:value?: any})"
		],
		[
			"dispatchEvent( evt: Event ): boolean\tNativeScript - EventTarget",
			"dispatchEvent(${1:evt: Event})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint16ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"toPrecision( precision?: number ): string\tNativeScript - Number",
			"toPrecision(${1:precision?: number})"
		],
		[
			"set( name: string, value: string ): void\tNativeScript - Headers",
			"set(${1:name: string}, ${2:value: string})"
		],
		[
			"Static orientationProperty: Property\tNativeScript - StackLayout",
			"Static orientationProperty"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Label",
			"hasListeners(${1:eventName: string})"
		],
		[
			"dispatchEvent( evt: Event ): boolean\tNativeScript - EventTarget",
			"dispatchEvent(${1:evt: Event})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - CustomLayoutView",
			"_unregisterAllAnimations()"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Style",
			"hasListeners(${1:eventName: string})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - ListView",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - CustomLayoutView",
			"unbind(${1:property: string})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - TextView",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - TextView",
			"Static automationTextProperty"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - TextView",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_inheritProperties( parentView: View ): any\tNativeScript - Page",
			"_inheritProperties(${1:parentView: View})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ActionItem",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"unbind( property: string ): any\tNativeScript - EditableTextBase",
			"unbind(${1:property: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - LayoutBase",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"next( value?: any ): IteratorResultT\tNativeScript - Iterator<T>",
			"next(${1:value?: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - WrapLayout",
			"setInlineStyle(${1:style: string})"
		],
		[
			"getPrototypeOf( o: any ): any\tNativeScript - ObjectConstructor",
			"getPrototypeOf(${1:o: any})"
		],
		[
			"ScrollView( json?: any ): ScrollView\tNativeScript - ScrollView",
			"ScrollView(${1:json?: any})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - TabView",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"eventName: string\tNativeScript - SelectedIndexChangedEventData",
			"eventName"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - DockLayout",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - LayoutBase",
			"_getValue(${1:property: Property})"
		],
		[
			"autocapitalizationType: string\tNativeScript - EditableTextBase",
			"autocapitalizationType"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - WebView",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - SegmentedBar",
			"Static propertyChangeEvent"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - AbsoluteLayout",
			"_emit(${1:eventNames: string})"
		],
		[
			"Observable( json?: any ): Observable\tNativeScript - Observable",
			"Observable(${1:json?: any})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Style",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - HtmlView",
			"_goToVisualState(${1:state: string})"
		],
		[
			"getPointerCount(): number\tNativeScript - TouchGestureEventData",
			"getPointerCount()"
		],
		[
			"new WeakRef<T>( obj: T ): WeakRef<T>\tNativeScript - WeakRef<T>",
			"new WeakRef<T>(${1:obj: T})"
		],
		[
			"new WeakRef<T>( obj: T ): WeakRef<T>\tNativeScript - WeakRef<T>",
			"new WeakRef<T>(${1:obj: T})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - ScrollView",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - ListView",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - GridLayout",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"Static formattedTextProperty: Property\tNativeScript - TextBase",
			"Static formattedTextProperty"
		],
		[
			"GridLayout( json?: any ): GridLayout\tNativeScript - GridLayout",
			"GridLayout(${1:json?: any})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Style",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Style",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - EditableTextBase",
			"_getNativeViewsCount()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - DependencyObservable",
			"notify<T>(${1:data: T})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Page",
			"hasListeners(${1:eventName: string})"
		],
		[
			"Static defaultAnimatedNavigation: boolean\tNativeScript - Frame",
			"Static defaultAnimatedNavigation"
		],
		[
			"direction: SwipeDirection\tNativeScript - SwipeGestureEventData",
			"direction"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - GridLayout",
			"addPseudoClass(${1:name: string})"
		],
		[
			"getChildIndex( child: View ): number\tNativeScript - GridLayout",
			"getChildIndex(${1:child: View})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint8ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int16ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"Static androidOptionSelectedEvent: string\tNativeScript - Frame",
			"Static androidOptionSelectedEvent"
		],
		[
			"MediumAquaMarine: any\tNativeScript - Module color/known-colors",
			"MediumAquaMarine"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - TabView",
			"Static bindingContextProperty"
		],
		[
			"_removeView( view: View ): any\tNativeScript - CustomLayoutView",
			"_removeView(${1:view: View})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - LayoutBase",
			"addPseudoClass(${1:name: string})"
		],
		[
			"ns( root: string, ns: any ): void\tNativeScript - EasySAXParser",
			"ns(${1:root: string}, ${2:ns: any})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - AbsoluteLayout",
			"_shouldApplyStyleHandlers()"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - ListPicker",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - WrapLayout",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"getConnectionType(): number\tNativeScript - Module connectivity",
			"getConnectionType()"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - TextView",
			"_goToVisualState(${1:state: string})"
		],
		[
			"Static returnKeyTypeProperty: Property\tNativeScript - TextView",
			"Static returnKeyTypeProperty"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - DockLayout",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - SegmentedBar",
			"Static isEnabledProperty"
		],
		[
			"formattedText: FormattedString\tNativeScript - EditableTextBase",
			"formattedText"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - TabView",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - SearchBar",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - LayoutBase",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"getUint8( byteOffset: number ): number\tNativeScript - DataView",
			"getUint8(${1:byteOffset: number})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - SearchBar",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - SegmentedBar",
			"Static classNameProperty"
		],
		[
			"onload: functionEventanyEventany\tNativeScript - XMLHttpRequest",
			"onload"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - WrapLayout",
			"_getValue(${1:property: Property})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - TimePicker",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - DockLayout",
			"_getValue(${1:property: Property})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - DatePicker",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - TimePicker",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"android: AndroidLocationManager\tNativeScript - LocationManager",
			"android"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - ContentView",
			"_isAddedToNativeVisualTree"
		],
		[
			"join( separator?: string ): string\tNativeScript - Float64Array",
			"join(${1:separator?: string})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - TabView",
			"Static automationTextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - WebView",
			"Static automationTextProperty"
		],
		[
			"addChild( view: View ): void\tNativeScript - ProxyViewContainer",
			"addChild(${1:view: View})"
		],
		[
			"fragmentForPage( page: Page ): any\tNativeScript - AndroidFrame",
			"fragmentForPage(${1:page: Page})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Style",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"Static formattedTextProperty: Property\tNativeScript - TextView",
			"Static formattedTextProperty"
		],
		[
			"prototype: Float32Array\tNativeScript - Float32ArrayConstructor",
			"prototype"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - WebView",
			"Static bindingContextProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - AndroidFrame",
			"Static propertyChangeEvent"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint8ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"Static orientationProperty: Property\tNativeScript - WrapLayout",
			"Static orientationProperty"
		],
		[
			"prototype: Float64Array\tNativeScript - Float64ArrayConstructor",
			"prototype"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - ActivityIndicator",
			"_syncNativeProperties()"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - DatePicker",
			"_getValue(${1:property: Property})"
		],
		[
			"Static keyboardTypeProperty: Property\tNativeScript - TextField",
			"Static keyboardTypeProperty"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - ProxyViewContainer",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - ProxyViewContainer",
			"getLocationOnScreen()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - EditableTextBase",
			"_removeView(${1:view: View})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Placeholder",
			"_isAddedToNativeVisualTree"
		],
		[
			"getChildIndex( child: View ): number\tNativeScript - WrapLayout",
			"getChildIndex(${1:child: View})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Progress",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Image",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"getJSON<T>( url: string ): PromiseT\tNativeScript - Module http",
			"getJSON<T>(${1:url: string})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Image",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - ListPicker",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"getChildIndex( child: View ): number\tNativeScript - LayoutBase",
			"getChildIndex(${1:child: View})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - TextField",
			"setInlineStyle(${1:style: string})"
		],
		[
			"WrapLayout( json?: any ): WrapLayout\tNativeScript - WrapLayout",
			"WrapLayout(${1:json?: any})"
		],
		[
			"widthProperty: Property\tNativeScript - Module ui/styling/style",
			"widthProperty"
		],
		[
			"join( separator?: string ): string\tNativeScript - Float64Array",
			"join(${1:separator?: string})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - DatePicker",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ActionItem",
			"_getValue(${1:property: Property})"
		],
		[
			"LayoutBase( json?: any ): LayoutBase\tNativeScript - LayoutBase",
			"LayoutBase(${1:json?: any})"
		],
		[
			"Static unloadedEvent: string\tNativeScript - ProxyViewContainer",
			"Static unloadedEvent"
		],
		[
			"DockLayout( json?: any ): DockLayout\tNativeScript - DockLayout",
			"DockLayout(${1:json?: any})"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - View",
			"hasListeners(${1:eventName: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ActionBar",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"splice( start: number ): string\tNativeScript - RegExpExecArray",
			"splice(${1:start: number})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - WrapLayout",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ScrollView",
			"_getValue(${1:property: Property})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - ActionBar",
			"setInlineStyle(${1:style: string})"
		],
		[
			"getPrototypeOf( o: any ): any\tNativeScript - ObjectConstructor",
			"getPrototypeOf(${1:o: any})"
		],
		[
			"ActionItem( json?: any ): ActionItem\tNativeScript - ActionItem",
			"ActionItem(${1:json?: any})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Frame",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - WebView",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"Static orientationProperty: Property\tNativeScript - ScrollView",
			"Static orientationProperty"
		],
		[
			"colorProperty: Property\tNativeScript - Module ui/styling/style",
			"colorProperty"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int32ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Frame",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ListPicker",
			"_getValue(${1:property: Property})"
		],
		[
			"TimePicker( json?: any ): TimePicker\tNativeScript - TimePicker",
			"TimePicker(${1:json?: any})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Float32Array",
			"join(${1:separator?: string})"
		],
		[
			"getUint8( byteOffset: number ): number\tNativeScript - DataView",
			"getUint8(${1:byteOffset: number})"
		],
		[
			"prototype: Float32Array\tNativeScript - Float32ArrayConstructor",
			"prototype"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - TextField",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"eventName: string\tNativeScript - SelectedIndexChangedEventData",
			"eventName"
		],
		[
			"hasListeners( eventName: string ): boolean\tNativeScript - Span",
			"hasListeners(${1:eventName: string})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - CustomLayoutView",
			"_getNativeViewsCount()"
		],
		[
			"onload: functionEventanyEventany\tNativeScript - XMLHttpRequest",
			"onload"
		],
		[
			"query( options: Node ): SelectorCore\tNativeScript - StyleScope",
			"query(${1:options: Node})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - TimePicker",
			"_getValue(${1:property: Property})"
		],
		[
			"getChildIndex( child: View ): number\tNativeScript - DockLayout",
			"getChildIndex(${1:child: View})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Label",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"iconVisibility: string\tNativeScript - AndroidActionBarSettings",
			"iconVisibility"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Label",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - GridLayout",
			"_getValue(${1:property: Property})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int32ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - ActivityIndicator",
			"_isInheritedChange()"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - ScrollView",
			"addPseudoClass(${1:name: string})"
		],
		[
			"Static busyProperty: Property\tNativeScript - ActivityIndicator",
			"Static busyProperty"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - StackLayout",
			"_isAddedToNativeVisualTree"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int16ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"prototype: Float64Array\tNativeScript - Float64ArrayConstructor",
			"prototype"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Repeater",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - TextBase",
			"_goToVisualState(${1:state: string})"
		],
		[
			"splice( start: number ): string\tNativeScript - RegExpExecArray",
			"splice(${1:start: number})"
		],
		[
			"_setNativeMinuteIntervalTime(): void\tNativeScript - TimePicker",
			"_setNativeMinuteIntervalTime()"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Cache",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Float32Array",
			"join(${1:separator?: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Progress",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"removeSync( onError?: function ): anyvoid\tNativeScript - File",
			"removeSync(${1:onError?: function})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - StackLayout",
			"Static classNameProperty"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - StackLayout",
			"Static isEnabledProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - StackLayout",
			"Static propertyChangeEvent"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - DockLayout",
			"_isAddedToNativeVisualTree"
		],
		[
			"join( separator?: string ): string\tNativeScript - Uint16Array",
			"join(${1:separator?: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - AbsoluteLayout",
			"unbind(${1:property: string})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Switch",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Button",
			"Static automationTextProperty"
		],
		[
			"join( separator?: string ): string\tNativeScript - Uint32Array",
			"join(${1:separator?: string})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Button",
			"Static bindingContextProperty"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - ProxyViewContainer",
			"getMeasuredHeight()"
		],
		[
			"removeChild( view: View ): void\tNativeScript - AbsoluteLayout",
			"removeChild(${1:view: View})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - AbsoluteLayout",
			"getViewById<T>(${1:id: string})"
		],
		[
			"enumerable: boolean\tNativeScript - TypedPropertyDescriptor<T>",
			"enumerable"
		],
		[
			"Static visibilityProperty: Property\tNativeScript - ActionItem",
			"Static visibilityProperty"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - SearchBar",
			"_getValue(${1:property: Property})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - SearchBar",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - ProxyViewContainer",
			"_removeFromSuperview()"
		],
		[
			"Static iconProperty: Property\tNativeScript - NavigationButton",
			"Static iconProperty"
		],
		[
			"Static autocorrectProperty: Property\tNativeScript - TextField",
			"Static autocorrectProperty"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - AbsoluteLayout",
			"_unregisterAllAnimations()"
		],
		[
			"Static textProperty: Property\tNativeScript - NavigationButton",
			"Static textProperty"
		],
		[
			"getInt8( byteOffset: number ): number\tNativeScript - DataView",
			"getInt8(${1:byteOffset: number})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Switch",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - DatePicker",
			"_isAddedToNativeVisualTree"
		],
		[
			"MediumSlateBlue: any\tNativeScript - Module color/known-colors",
			"MediumSlateBlue"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Button",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"MediumTurquoise: any\tNativeScript - Module color/known-colors",
			"MediumTurquoise"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - SearchBar",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - TextField",
			"_getValue(${1:property: Property})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Button",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - EditableTextBase",
			"_syncNativeProperties()"
		],
		[
			"_getNavBarVisible( page: Page ): boolean\tNativeScript - Frame",
			"_getNavBarVisible(${1:page: Page})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - WebView",
			"_goToVisualState(${1:state: string})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - TextBase",
			"setInlineStyle(${1:style: string})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Border",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - TextBase",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"MediumVioletRed: any\tNativeScript - Module color/known-colors",
			"MediumVioletRed"
		],
		[
			"getItem( index: number ): T\tNativeScript - ObservableArray<T>",
			"getItem(${1:index: number})"
		],
		[
			"module: NativeScriptModule\tNativeScript - Module NativeScript",
			"module"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - TextField",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - WrapLayout",
			"_isAddedToNativeVisualTree"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Border",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"Static itemHeightProperty: Property\tNativeScript - WrapLayout",
			"Static itemHeightProperty"
		],
		[
			"Static idProperty: Property\tNativeScript - ProxyViewContainer",
			"Static idProperty"
		],
		[
			"horizontalAlignment: string\tNativeScript - CommonLayoutParams",
			"horizontalAlignment"
		],
		[
			"bottomMarginPercent: number\tNativeScript - CommonLayoutParams",
			"bottomMarginPercent"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int8ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"horizontalAlignment: string\tNativeScript - ProxyViewContainer",
			"horizontalAlignment"
		],
		[
			"navigate( entry: NavigationEntry ): Page\tNativeScript - Frame",
			"navigate(${1:entry: NavigationEntry})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - EditableTextBase",
			"_isInheritedChange()"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - ActionBar",
			"addPseudoClass(${1:name: string})"
		],
		[
			"Static selectedColorProperty: Property\tNativeScript - TabView",
			"Static selectedColorProperty"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - ProxyViewContainer",
			"cssPseudoClasses"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - View",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - View",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"getAllResponseHeaders(): string\tNativeScript - XMLHttpRequest",
			"getAllResponseHeaders()"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - GridLayout",
			"_isAddedToNativeVisualTree"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - ActionBar",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - ContentView",
			"Static classNameProperty"
		],
		[
			"Static selectedIndexProperty: Property\tNativeScript - TabView",
			"Static selectedIndexProperty"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - ContentView",
			"Static isEnabledProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ContentView",
			"Static propertyChangeEvent"
		],
		[
			"getInt8( byteOffset: number ): number\tNativeScript - DataView",
			"getInt8(${1:byteOffset: number})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - TextField",
			"addPseudoClass(${1:name: string})"
		],
		[
			"reverse(): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"reverse()"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Progress",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - LayoutBase",
			"_isAddedToNativeVisualTree"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Switch",
			"Static automationTextProperty"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - SegmentedBar",
			"isUserInteractionEnabled"
		],
		[
			"reverse(): Uint8ClampedArray\tNativeScript - Uint8ClampedArray",
			"reverse()"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Border",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Border",
			"Static automationTextProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Switch",
			"Static bindingContextProperty"
		],
		[
			"join( separator?: string ): string\tNativeScript - Array<T, T>",
			"join(${1:separator?: string})"
		],
		[
			"Static textProperty: Property\tNativeScript - EditableTextBase",
			"Static textProperty"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - TabView",
			"_goToVisualState(${1:state: string})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - SegmentedBar",
			"Static cssClassProperty"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ActionBar",
			"_getValue(${1:property: Property})"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Layout",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - ListPicker",
			"_isAddedToNativeVisualTree"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Repeater",
			"setInlineStyle(${1:style: string})"
		],
		[
			"Static columnSpanProperty: Property\tNativeScript - GridLayout",
			"Static columnSpanProperty"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - SegmentedBar",
			"_getCurrentLayoutBounds()"
		],
		[
			"_updateIOSTabBarColorsAndFonts(): void\tNativeScript - TabView",
			"_updateIOSTabBarColorsAndFonts()"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - SegmentedBar",
			"_onAttached(${1:context: any})"
		],
		[
			"Static keyboardTypeProperty: Property\tNativeScript - TextView",
			"Static keyboardTypeProperty"
		],
		[
			"Static itemTemplateProperty: Property\tNativeScript - Repeater",
			"Static itemTemplateProperty"
		],
		[
			"exec( string: string ): RegExpExecArray\tNativeScript - RegExp",
			"exec(${1:string: string})"
		],
		[
			"enqueue( request: DownloadRequest ): any\tNativeScript - Cache",
			"enqueue(${1:request: DownloadRequest})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Uint32Array",
			"join(${1:separator?: string})"
		],
		[
			"stopImmediatePropagation(): void\tNativeScript - ProgressEvent",
			"stopImmediatePropagation()"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Bindable",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static itemTemplateProperty: Property\tNativeScript - ListView",
			"Static itemTemplateProperty"
		],
		[
			"Static unloadedEvent: string\tNativeScript - ActivityIndicator",
			"Static unloadedEvent"
		],
		[
			"stopImmediatePropagation(): void\tNativeScript - ProgressEvent",
			"stopImmediatePropagation()"
		],
		[
			"loadFromData( data: any ): boolean\tNativeScript - ImageSource",
			"loadFromData(${1:data: any})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - TabViewItem",
			"Static propertyChangeEvent"
		],
		[
			"join( separator?: string ): string\tNativeScript - Uint16Array",
			"join(${1:separator?: string})"
		],
		[
			"exec( string: string ): RegExpExecArray\tNativeScript - RegExp",
			"exec(${1:string: string})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Array<T, T>",
			"join(${1:separator?: string})"
		],
		[
			"clearInterval( id: number ): void\tNativeScript - Module timer",
			"clearInterval(${1:id: number})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Layout",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Span",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Span",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"enumerable: boolean\tNativeScript - TypedPropertyDescriptor<T>",
			"enumerable"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Slider",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - CustomLayoutView",
			"_syncNativeProperties()"
		],
		[
			"newIndex: number\tNativeScript - SelectedIndexChangedEventData",
			"newIndex"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - ListView",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - ListView",
			"setInlineStyle(${1:style: string})"
		],
		[
			"oldIndex: number\tNativeScript - SelectedIndexChangedEventData",
			"oldIndex"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Slider",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ProxyObject",
			"Static propertyChangeEvent"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - CustomLayoutView",
			"_isInheritedChange()"
		],
		[
			"getAllResponseHeaders(): string\tNativeScript - XMLHttpRequest",
			"getAllResponseHeaders()"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Placeholder",
			"Static propertyChangeEvent"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Placeholder",
			"Static isEnabledProperty"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Placeholder",
			"Static classNameProperty"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - HtmlView",
			"setInlineStyle(${1:style: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - HtmlView",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - TextView",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - TextView",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_resetValues( valueSource: number ): void\tNativeScript - Page",
			"_resetValues(${1:valueSource: number})"
		],
		[
			"_setCore( data: PropertyChangeData ): any\tNativeScript - Page",
			"_setCore(${1:data: PropertyChangeData})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int8ArrayConstructor",
			"BYTES_PER_ELEMENT"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - TimePicker",
			"_isAddedToNativeVisualTree"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Layout",
			"Static bindingContextProperty"
		],
		[
			"getColumnSpan( view: View ): number\tNativeScript - GridLayout",
			"getColumnSpan(${1:view: View})"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Layout",
			"Static automationTextProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Slider",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Slider",
			"Static automationTextProperty"
		],
		[
			"oldIndex: number\tNativeScript - SelectedIndexChangedEventData",
			"oldIndex"
		],
		[
			"newIndex: number\tNativeScript - SelectedIndexChangedEventData",
			"newIndex"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - ScrollView",
			"_isAddedToNativeVisualTree"
		],
		[
			"type: \"rule\"\"keyframes\"\"declaration\"\tNativeScript - Keyframes",
			"type"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Repeater",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - ActivityIndicator",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - ActivityIndicator",
			"getLocationOnScreen()"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - WebView",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - LayoutBase",
			"Static propertyChangeEvent"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Label",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - LayoutBase",
			"Static isEnabledProperty"
		],
		[
			"_removeView( view: View ): any\tNativeScript - AbsoluteLayout",
			"_removeView(${1:view: View})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - LayoutBase",
			"Static classNameProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Frame",
			"Static bindingContextProperty"
		],
		[
			"new Repeater( json?: any ): Repeater\tNativeScript - Repeater",
			"new Repeater(${1:json?: any})"
		],
		[
			"DarkOliveGreen: any\tNativeScript - Module color/known-colors",
			"DarkOliveGreen"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - DatePicker",
			"Static isEnabledProperty"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - TextField",
			"_isAddedToNativeVisualTree"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - WebView",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - AbsoluteLayout",
			"_getNativeViewsCount()"
		],
		[
			"setUTCMilliseconds( ms: number ): number\tNativeScript - Date",
			"setUTCMilliseconds(${1:ms: number})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Uint8Array",
			"join(${1:separator?: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - ContentView",
			"_getCurrentLayoutBounds()"
		],
		[
			"applySelectors( view: View ): void\tNativeScript - StyleScope",
			"applySelectors(${1:view: View})"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - ProxyViewContainer",
			"getMeasuredWidth()"
		],
		[
			"wrap( value: any ): WrappedValue\tNativeScript - WrappedValue",
			"wrap(${1:value: any})"
		],
		[
			"Static unloadedEvent: string\tNativeScript - EditableTextBase",
			"Static unloadedEvent"
		],
		[
			"prototype: Uint16Array\tNativeScript - Uint16ArrayConstructor",
			"prototype"
		],
		[
			"join( separator?: string ): string\tNativeScript - Int32Array",
			"join(${1:separator?: string})"
		],
		[
			"isArray( arg: any ): boolean\tNativeScript - ArrayConstructor",
			"isArray(${1:arg: any})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - ContentView",
			"_onAttached(${1:context: any})"
		],
		[
			"sort( compareFn?: function ): numberT\tNativeScript - List<T>",
			"sort(${1:compareFn?: function})"
		],
		[
			"CornflowerBlue: any\tNativeScript - Module color/known-colors",
			"CornflowerBlue"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - SearchBar",
			"_isAddedToNativeVisualTree"
		],
		[
			"join( separator?: string ): string\tNativeScript - Uint8Array",
			"join(${1:separator?: string})"
		],
		[
			"prototype: ArrayBuffer\tNativeScript - ArrayBufferConstructor",
			"prototype"
		],
		[
			"prototype: Uint32Array\tNativeScript - Uint32ArrayConstructor",
			"prototype"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Label",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Label",
			"Static automationTextProperty"
		],
		[
			"concat( ...strings: string[] ): string\tNativeScript - String",
			"concat(${1:...strings: string[]})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Progress",
			"addPseudoClass(${1:name: string})"
		],
		[
			"getChildrenCount(): number\tNativeScript - ProxyViewContainer",
			"getChildrenCount()"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Switch",
			"_goToVisualState(${1:state: string})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - ListPicker",
			"Static classNameProperty"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - ListPicker",
			"Static isEnabledProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ListPicker",
			"Static propertyChangeEvent"
		],
		[
			"Static classNameProperty: Property\tNativeScript - GridLayout",
			"Static classNameProperty"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - SegmentedBar",
			"_emit(${1:eventNames: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - StackLayout",
			"_getCurrentLayoutBounds()"
		],
		[
			"getChildAt( index: number ): View\tNativeScript - StackLayout",
			"getChildAt(${1:index: number})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - HtmlView",
			"_getValue(${1:property: Property})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - GridLayout",
			"Static isEnabledProperty"
		],
		[
			"new TextView( json?: any ): TextView\tNativeScript - TextView",
			"new TextView(${1:json?: any})"
		],
		[
			"BlanchedAlmond: any\tNativeScript - Module color/known-colors",
			"BlanchedAlmond"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - GridLayout",
			"Static propertyChangeEvent"
		],
		[
			"Static autocorrectProperty: Property\tNativeScript - TextView",
			"Static autocorrectProperty"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - TextBase",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ActionItem",
			"Static propertyChangeEvent"
		],
		[
			"Static classNameProperty: Property\tNativeScript - DockLayout",
			"Static classNameProperty"
		],
		[
			"new Bindable( json?: any ): Bindable\tNativeScript - Bindable",
			"new Bindable(${1:json?: any})"
		],
		[
			"concat( ...items: T[] ): T\tNativeScript - ObservableArray<T>",
			"concat(${1:...items: T[]})"
		],
		[
			"Static itemsLayoutProperty: Property\tNativeScript - Repeater",
			"Static itemsLayoutProperty"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - SegmentedBar",
			"_shouldApplyStyleHandlers()"
		],
		[
			"android: AndroidActionItemSettings\tNativeScript - ActionItem",
			"android"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Frame",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"valueConverter: functionanyanyanyany\tNativeScript - Property",
			"valueConverter"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - ActivityIndicator",
			"cssPseudoClasses"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Observable",
			"Static propertyChangeEvent"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - TextBase",
			"_getValue(${1:property: Property})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Repeater",
			"_getValue(${1:property: Property})"
		],
		[
			"isFrozen( o: any ): boolean\tNativeScript - ObjectConstructor",
			"isFrozen(${1:o: any})"
		],
		[
			"isSealed( o: any ): boolean\tNativeScript - ObjectConstructor",
			"isSealed(${1:o: any})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Bindable",
			"_getValue(${1:property: Property})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Progress",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"isArray( arg: any ): boolean\tNativeScript - ArrayConstructor",
			"isArray(${1:arg: any})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Progress",
			"_getValue(${1:property: Property})"
		],
		[
			"new ListView( json?: any ): ListView\tNativeScript - ListView",
			"new ListView(${1:json?: any})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Repeater",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - TextView",
			"_getValue(${1:property: Property})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Int16Array",
			"join(${1:separator?: string})"
		],
		[
			"prototype: Uint16Array\tNativeScript - Uint16ArrayConstructor",
			"prototype"
		],
		[
			"Static idProperty: Property\tNativeScript - ActivityIndicator",
			"Static idProperty"
		],
		[
			"Static isScrollingProperty: Property\tNativeScript - ListView",
			"Static isScrollingProperty"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - TabView",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - TabView",
			"setInlineStyle(${1:style: string})"
		],
		[
			"new Property( value: any ): Property\tNativeScript - Property",
			"new Property(${1:value: any})"
		],
		[
			"push( items: T[] ): number\tNativeScript - ObservableArray<T>",
			"push(${1:items: T[]})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - TextView",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - ActionBar",
			"_isAddedToNativeVisualTree"
		],
		[
			"Static classNameProperty: Property\tNativeScript - WrapLayout",
			"Static classNameProperty"
		],
		[
			"new Progress( json?: any ): Progress\tNativeScript - Progress",
			"new Progress(${1:json?: any})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - WrapLayout",
			"Static isEnabledProperty"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Image",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"Static loadedEvent: string\tNativeScript - ProxyViewContainer",
			"Static loadedEvent"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - StackLayout",
			"_onAttached(${1:context: any})"
		],
		[
			"isSealed( o: any ): boolean\tNativeScript - ObjectConstructor",
			"isSealed(${1:o: any})"
		],
		[
			"isFrozen( o: any ): boolean\tNativeScript - ObjectConstructor",
			"isFrozen(${1:o: any})"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - EditableTextBase",
			"getLocationOnScreen()"
		],
		[
			"join( separator?: string ): string\tNativeScript - Int32Array",
			"join(${1:separator?: string})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Image",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"horizontalAlignment: string\tNativeScript - ActivityIndicator",
			"horizontalAlignment"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - TextBase",
			"addPseudoClass(${1:name: string})"
		],
		[
			"get( name: string ): any\tNativeScript - DependencyObservable",
			"get(${1:name: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - ListView",
			"_getValue(${1:property: Property})"
		],
		[
			"clearTimeout( id: number ): void\tNativeScript - Module timer",
			"clearTimeout(${1:id: number})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - ListView",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"Static itemWidthProperty: Property\tNativeScript - WrapLayout",
			"Static itemWidthProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - WrapLayout",
			"Static propertyChangeEvent"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - CustomLayoutView",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - CustomLayoutView",
			"getLocationInWindow()"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Frame",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - EditableTextBase",
			"getLocationInWindow()"
		],
		[
			"prototype: ArrayBuffer\tNativeScript - ArrayBufferConstructor",
			"prototype"
		],
		[
			"addRow( itemSpec: ItemSpec ): void\tNativeScript - GridLayout",
			"addRow(${1:itemSpec: ItemSpec})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - TextView",
			"addPseudoClass(${1:name: string})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Image",
			"Static bindingContextProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Image",
			"Static automationTextProperty"
		],
		[
			"rightMarginPercent: number\tNativeScript - CommonLayoutParams",
			"rightMarginPercent"
		],
		[
			"sort( compareFn?: function ): numberT\tNativeScript - List<T>",
			"sort(${1:compareFn?: function})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - ListView",
			"addPseudoClass(${1:name: string})"
		],
		[
			"new HtmlView( json?: any ): HtmlView\tNativeScript - HtmlView",
			"new HtmlView(${1:json?: any})"
		],
		[
			"LightSlateGray: any\tNativeScript - Module color/known-colors",
			"LightSlateGray"
		],
		[
			"toLocaleString(): string\tNativeScript - TemplateStringsArray",
			"toLocaleString()"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Border",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Placeholder",
			"_onAttached(${1:context: any})"
		],
		[
			"setUTCMilliseconds( ms: number ): number\tNativeScript - Date",
			"setUTCMilliseconds(${1:ms: number})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Layout",
			"_goToVisualState(${1:state: string})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Repeater",
			"addPseudoClass(${1:name: string})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - DatePicker",
			"Static classNameProperty"
		],
		[
			"_requestLayoutOnTextChanged(): void\tNativeScript - TextField",
			"_requestLayoutOnTextChanged()"
		],
		[
			"new TextBase( json?: any ): TextBase\tNativeScript - TextBase",
			"new TextBase(${1:json?: any})"
		],
		[
			"navigate( pageModuleName: string ): any\tNativeScript - Frame",
			"navigate(${1:pageModuleName: string})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ProxyViewContainer",
			"notify<T>(${1:data: T})"
		],
		[
			"Static actionBarHiddenProperty: Property\tNativeScript - Page",
			"Static actionBarHiddenProperty"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Placeholder",
			"_getCurrentLayoutBounds()"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - List<T>",
			"filter<U>(${1:pred: function})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Button",
			"_goToVisualState(${1:state: string})"
		],
		[
			"throw( e?: any ): IteratorResultT\tNativeScript - Iterator<T>",
			"throw(${1:e?: any})"
		],
		[
			"prototype: SyntaxError\tNativeScript - SyntaxErrorConstructor",
			"prototype"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - DockLayout",
			"Static isEnabledProperty"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Placeholder",
			"Static cssClassProperty"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - StackLayout",
			"isUserInteractionEnabled"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Placeholder",
			"isUserInteractionEnabled"
		],
		[
			"splice( start: number ): T\tNativeScript - ObservableArray<T>",
			"splice(${1:start: number})"
		],
		[
			"LightSteelBlue: any\tNativeScript - Module color/known-colors",
			"LightSteelBlue"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - DockLayout",
			"Static propertyChangeEvent"
		],
		[
			"filter<U>( pred: function ): booleanU\tNativeScript - List<T>",
			"filter<U>(${1:pred: function})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - ActivityIndicator",
			"_removeFromSuperview()"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - ContentView",
			"isUserInteractionEnabled"
		],
		[
			"throw( e?: any ): IteratorResultT\tNativeScript - Iterator<T>",
			"throw(${1:e?: any})"
		],
		[
			"new Property( value: any ): Property\tNativeScript - Property",
			"new Property(${1:value: any})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - StackLayout",
			"Static cssClassProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ScrollView",
			"Static propertyChangeEvent"
		],
		[
			"toLocaleString(): string\tNativeScript - TemplateStringsArray",
			"toLocaleString()"
		],
		[
			"prototype: SyntaxError\tNativeScript - SyntaxErrorConstructor",
			"prototype"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - ScrollView",
			"Static isEnabledProperty"
		],
		[
			"Static classNameProperty: Property\tNativeScript - ScrollView",
			"Static classNameProperty"
		],
		[
			"stopLocationMonitoring(): any\tNativeScript - LocationManager",
			"stopLocationMonitoring()"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Slider",
			"_goToVisualState(${1:state: string})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - HtmlView",
			"addPseudoClass(${1:name: string})"
		],
		[
			"Static unloadedEvent: string\tNativeScript - CustomLayoutView",
			"Static unloadedEvent"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Label",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"float( num: number ): any\tNativeScript - Module NativeScript",
			"float(${1:num: number})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ObservableArray<T>",
			"notify<T>(${1:data: T})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - DatePicker",
			"Static propertyChangeEvent"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - ContentView",
			"Static cssClassProperty"
		],
		[
			"MediumSeaGreen: any\tNativeScript - Module color/known-colors",
			"MediumSeaGreen"
		],
		[
			"concat( ...strings: string[] ): string\tNativeScript - String",
			"concat(${1:...strings: string[]})"
		],
		[
			"getLogicalRootPath(): string\tNativeScript - FileSystemAccess",
			"getLogicalRootPath()"
		],
		[
			"Static classNameProperty: Property\tNativeScript - TimePicker",
			"Static classNameProperty"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - TimePicker",
			"Static isEnabledProperty"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Frame",
			"Static automationTextProperty"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - HtmlView",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - TimePicker",
			"Static propertyChangeEvent"
		],
		[
			"addItem( item: ActionItem ): void\tNativeScript - ActionItems",
			"addItem(${1:item: ActionItem})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Int16Array",
			"join(${1:separator?: string})"
		],
		[
			"prototype: Uint32Array\tNativeScript - Uint32ArrayConstructor",
			"prototype"
		],
		[
			"Static changeEvent: string\tNativeScript - ObservableArray<T>",
			"Static changeEvent"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - ActivityIndicator",
			"getMeasuredHeight()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - AndroidFrame",
			"_emit(${1:eventNames: string})"
		],
		[
			"_setTextInternal( value: string ): void\tNativeScript - Span",
			"_setTextInternal(${1:value: string})"
		],
		[
			"addCssFile( cssFileName: string ): void\tNativeScript - Page",
			"addCssFile(${1:cssFileName: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - HtmlView",
			"_isAddedToNativeVisualTree"
		],
		[
			"Static classNameProperty: Property\tNativeScript - TextField",
			"Static classNameProperty"
		],
		[
			"ActionBar( json?: any ): ActionBar\tNativeScript - ActionBar",
			"ActionBar(${1:json?: any})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - SegmentedBar",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Image",
			"_goToVisualState(${1:state: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - TextView",
			"_isAddedToNativeVisualTree"
		],
		[
			"navigationButton: NavigationButton\tNativeScript - ActionBar",
			"navigationButton"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - AbsoluteLayout",
			"_syncNativeProperties()"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - ListPicker",
			"_onAttached(${1:context: any})"
		],
		[
			"getChildAt( index: number ): View\tNativeScript - LayoutBase",
			"getChildAt(${1:index: number})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - View",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - ContentView",
			"_shouldApplyStyleHandlers()"
		],
		[
			"getTempFolderPath(): string\tNativeScript - FileSystemAccess",
			"getTempFolderPath()"
		],
		[
			"_requestLayoutOnTextChanged(): void\tNativeScript - TextView",
			"_requestLayoutOnTextChanged()"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - ListPicker",
			"_getCurrentLayoutBounds()"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - DockLayout",
			"_getCurrentLayoutBounds()"
		],
		[
			"localeCompare( that: string ): number\tNativeScript - String",
			"localeCompare(${1:that: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - WebView",
			"_getValue(${1:property: Property})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Placeholder",
			"_emit(${1:eventNames: string})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - GridLayout",
			"Static cssClassProperty"
		],
		[
			"Static loadedEvent: string\tNativeScript - ActivityIndicator",
			"Static loadedEvent"
		],
		[
			"Array: ArrayConstructor\tNativeScript - TemplateStringsArray",
			"Array"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - TabView",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - DockLayout",
			"_onAttached(${1:context: any})"
		],
		[
			"long( num: number ): any\tNativeScript - Module NativeScript",
			"long(${1:num: number})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - WrapLayout",
			"_onAttached(${1:context: any})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - StackLayout",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - SegmentedBar",
			"_unregisterAllAnimations()"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - TimePicker",
			"Static cssClassProperty"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - TextBase",
			"_isAddedToNativeVisualTree"
		],
		[
			"unshift( ...items: T[] ): number\tNativeScript - Array<T, T>",
			"unshift(${1:...items: T[]})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - CustomLayoutView",
			"_removeFromSuperview()"
		],
		[
			"EasySAXParser(): EasySAXParser\tNativeScript - EasySAXParser",
			"EasySAXParser()"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - CustomLayoutView",
			"cssPseudoClasses"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - WebView",
			"addPseudoClass(${1:name: string})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - ListPicker",
			"Static cssClassProperty"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - WrapLayout",
			"_getCurrentLayoutBounds()"
		],
		[
			"toModel: functionanyanyanyany\tNativeScript - ValueConverter",
			"toModel"
		],
		[
			"horizontalAlignment: string\tNativeScript - CustomLayoutView",
			"horizontalAlignment"
		],
		[
			"unshift( ...items: T[] ): number\tNativeScript - Array<T, T>",
			"unshift(${1:...items: T[]})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - ListPicker",
			"isUserInteractionEnabled"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - GridLayout",
			"_getCurrentLayoutBounds()"
		],
		[
			"Static creatingViewEvent: string\tNativeScript - Placeholder",
			"Static creatingViewEvent"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Repeater",
			"_isAddedToNativeVisualTree"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Button",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"verticalAlignment: string\tNativeScript - ProxyViewContainer",
			"verticalAlignment"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Button",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_parentChanged( oldParent: View ): void\tNativeScript - Page",
			"_parentChanged(${1:oldParent: View})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - GridLayout",
			"_onAttached(${1:context: any})"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - ProxyViewContainer",
			"isLayoutRequired"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - DatePicker",
			"isUserInteractionEnabled"
		],
		[
			"writable: boolean\tNativeScript - TypedPropertyDescriptor<T>",
			"writable"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - View",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - TabView",
			"addPseudoClass(${1:name: string})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - SearchBar",
			"Static propertyChangeEvent"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - TimePicker",
			"isUserInteractionEnabled"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - SearchBar",
			"Static isEnabledProperty"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - WrapLayout",
			"Static cssClassProperty"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - EditableTextBase",
			"_removeFromSuperview()"
		],
		[
			"Static classNameProperty: Property\tNativeScript - SearchBar",
			"Static classNameProperty"
		],
		[
			"localeCompare( that: string ): number\tNativeScript - String",
			"localeCompare(${1:that: string})"
		],
		[
			"send( data?: FormData ): void\tNativeScript - XMLHttpRequest",
			"send(${1:data?: FormData})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - WrapLayout",
			"isUserInteractionEnabled"
		],
		[
			"unbind( property: string ): any\tNativeScript - SegmentedBar",
			"unbind(${1:property: string})"
		],
		[
			"Static formattedTextProperty: Property\tNativeScript - Label",
			"Static formattedTextProperty"
		],
		[
			"getChildAt( index: number ): View\tNativeScript - DockLayout",
			"getChildAt(${1:index: number})"
		],
		[
			"getLeft( view: View ): number\tNativeScript - AbsoluteLayout",
			"getLeft(${1:view: View})"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - ActivityIndicator",
			"getMeasuredWidth()"
		],
		[
			"SearchBar( json?: any ): SearchBar\tNativeScript - SearchBar",
			"SearchBar(${1:json?: any})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Border",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"object: Observable\tNativeScript - GestureEventDataWithState",
			"object"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - EditableTextBase",
			"cssPseudoClasses"
		],
		[
			"type: GestureTypes\tNativeScript - GestureEventDataWithState",
			"type"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - ListView",
			"_isAddedToNativeVisualTree"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Border",
			"setInlineStyle(${1:style: string})"
		],
		[
			"LightSeaGreen: any\tNativeScript - Module color/known-colors",
			"LightSeaGreen"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Page",
			"Static bindingContextProperty"
		],
		[
			"DarkSlateBlue: any\tNativeScript - Module color/known-colors",
			"DarkSlateBlue"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - Page",
			"Static automationTextProperty"
		],
		[
			"DarkSlateGray: any\tNativeScript - Module color/known-colors",
			"DarkSlateGray"
		],
		[
			"Static classNameProperty: Property\tNativeScript - ActionBar",
			"Static classNameProperty"
		],
		[
			"DarkTurquoise: any\tNativeScript - Module color/known-colors",
			"DarkTurquoise"
		],
		[
			"horizontalAlignment: string\tNativeScript - EditableTextBase",
			"horizontalAlignment"
		],
		[
			"_onContextChanged(): void\tNativeScript - ProxyViewContainer",
			"_onContextChanged()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ActivityIndicator",
			"notify<T>(${1:data: T})"
		],
		[
			"verticalAlignment: string\tNativeScript - CommonLayoutParams",
			"verticalAlignment"
		],
		[
			"scrollToIndex( index: number ): any\tNativeScript - ListView",
			"scrollToIndex(${1:index: number})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Progress",
			"_isAddedToNativeVisualTree"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - TimePicker",
			"_onAttached(${1:context: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - StackLayout",
			"_emit(${1:eventNames: string})"
		],
		[
			"getChildAt( index: number ): View\tNativeScript - WrapLayout",
			"getChildAt(${1:index: number})"
		],
		[
			"leftMarginPercent: number\tNativeScript - CommonLayoutParams",
			"leftMarginPercent"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - ActionBar",
			"Static isEnabledProperty"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - WebView",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"getChildAt( index: number ): View\tNativeScript - GridLayout",
			"getChildAt(${1:index: number})"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Label",
			"_goToVisualState(${1:state: string})"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - CustomLayoutView",
			"getMeasuredHeight()"
		],
		[
			"Array: ArrayConstructor\tNativeScript - TemplateStringsArray",
			"Array"
		],
		[
			"Static automationTextProperty: Property\tNativeScript - View",
			"Static automationTextProperty"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - View",
			"Static bindingContextProperty"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - DatePicker",
			"Static cssClassProperty"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ContentView",
			"_emit(${1:eventNames: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ProxyObject",
			"_emit(${1:eventNames: string})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ActionBar",
			"Static propertyChangeEvent"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Switch",
			"setInlineStyle(${1:style: string})"
		],
		[
			"Static leftProperty: Property\tNativeScript - AbsoluteLayout",
			"Static leftProperty"
		],
		[
			"join( separator?: string ): string\tNativeScript - Int8Array",
			"join(${1:separator?: string})"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - EditableTextBase",
			"getMeasuredHeight()"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - DockLayout",
			"isUserInteractionEnabled"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - LayoutBase",
			"_onAttached(${1:context: any})"
		],
		[
			"Static bindingContextProperty: Property\tNativeScript - Span",
			"Static bindingContextProperty"
		],
		[
			"writable: boolean\tNativeScript - TypedPropertyDescriptor<T>",
			"writable"
		],
		[
			"getCurrentAppPath(): string\tNativeScript - FileSystemAccess",
			"getCurrentAppPath()"
		],
		[
			"_requestLayoutOnTextChanged(): void\tNativeScript - TextBase",
			"_requestLayoutOnTextChanged()"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - ScrollView",
			"_onAttached(${1:context: any})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - LayoutBase",
			"_getCurrentLayoutBounds()"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - TimePicker",
			"_getCurrentLayoutBounds()"
		],
		[
			"Static idProperty: Property\tNativeScript - CustomLayoutView",
			"Static idProperty"
		],
		[
			"TextField( json?: any ): TextField\tNativeScript - TextField",
			"TextField(${1:json?: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - TabViewItem",
			"_emit(${1:eventNames: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - ScrollView",
			"_getCurrentLayoutBounds()"
		],
		[
			"Property( value: string ): Property\tNativeScript - Property",
			"Property(${1:value: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Switch",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Slider",
			"setInlineStyle(${1:style: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Slider",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - TabView",
			"_getValue(${1:property: Property})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Placeholder",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Frame",
			"_goToVisualState(${1:state: string})"
		],
		[
			"join( separator?: string ): string\tNativeScript - Int8Array",
			"join(${1:separator?: string})"
		],
		[
			"DarkGoldenRod: any\tNativeScript - Module color/known-colors",
			"DarkGoldenRod"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - LayoutBase",
			"Static cssClassProperty"
		],
		[
			"systemIcon: string\tNativeScript - AndroidActionItemSettings",
			"systemIcon"
		],
		[
			"LavenderBlush: any\tNativeScript - Module color/known-colors",
			"LavenderBlush"
		],
		[
			"Static clipToBoundsProperty: Property\tNativeScript - Layout",
			"Static clipToBoundsProperty"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - AbsoluteLayout",
			"_isInheritedChange()"
		],
		[
			"new Color( knownColor: string ): Color\tNativeScript - Color",
			"new Color(${1:knownColor: string})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - LayoutBase",
			"isUserInteractionEnabled"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - DatePicker",
			"_getCurrentLayoutBounds()"
		],
		[
			"deletePseudoClass( name: string ): void\tNativeScript - Page",
			"deletePseudoClass(${1:name: string})"
		],
		[
			"PaleGoldenRod: any\tNativeScript - Module color/known-colors",
			"PaleGoldenRod"
		],
		[
			"send( data?: FormData ): void\tNativeScript - XMLHttpRequest",
			"send(${1:data?: FormData})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - GridLayout",
			"isUserInteractionEnabled"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - TextField",
			"Static propertyChangeEvent"
		],
		[
			"PaleTurquoise: any\tNativeScript - Module color/known-colors",
			"PaleTurquoise"
		],
		[
			"rename( newName: string ): Promiseany\tNativeScript - Folder",
			"rename(${1:newName: string})"
		],
		[
			"Static idProperty: Property\tNativeScript - EditableTextBase",
			"Static idProperty"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - ScrollView",
			"Static cssClassProperty"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Layout",
			"setInlineStyle(${1:style: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Layout",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - DockLayout",
			"Static cssClassProperty"
		],
		[
			"PaleVioletRed: any\tNativeScript - Module color/known-colors",
			"PaleVioletRed"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - DatePicker",
			"_onAttached(${1:context: any})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - TextField",
			"Static isEnabledProperty"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - ScrollView",
			"isUserInteractionEnabled"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - SearchBar",
			"isUserInteractionEnabled"
		],
		[
			"readSync( onError?: function ): anyany\tNativeScript - File",
			"readSync(${1:onError?: function})"
		],
		[
			"upload: XMLHttpRequestUpload\tNativeScript - XMLHttpRequest",
			"upload"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - ActionBar",
			"Static cssClassProperty"
		],
		[
			"unbind( property: string ): any\tNativeScript - Placeholder",
			"unbind(${1:property: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Slider",
			"_getValue(${1:property: Property})"
		],
		[
			"unbind( property: string ): any\tNativeScript - ProxyObject",
			"unbind(${1:property: string})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Slider",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"timeEnd( reportName: string ): void\tNativeScript - Console",
			"timeEnd(${1:reportName: string})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint8ClampedArray",
			"BYTES_PER_ELEMENT"
		],
		[
			"prototype: Uint8Array\tNativeScript - Uint8ArrayConstructor",
			"prototype"
		],
		[
			"object: Observable\tNativeScript - RotationGestureEventData",
			"object"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - SegmentedBarItem",
			"notify<T>(${1:data: T})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Placeholder",
			"getViewById<T>(${1:id: string})"
		],
		[
			"type: GestureTypes\tNativeScript - RotationGestureEventData",
			"type"
		],
		[
			"Static loadedEvent: string\tNativeScript - CustomLayoutView",
			"Static loadedEvent"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Layout",
			"_getValue(${1:property: Property})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - ActionBar",
			"_getCurrentLayoutBounds()"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Layout",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - CustomLayoutView",
			"getMeasuredWidth()"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - GridLayout",
			"_shouldApplyStyleHandlers()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - CustomLayoutView",
			"notify<T>(${1:data: T})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - GridLayout",
			"_emit(${1:eventNames: string})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - ActionBar",
			"_onAttached(${1:context: any})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Slider",
			"addPseudoClass(${1:name: string})"
		],
		[
			"Static rowSpanProperty: Property\tNativeScript - GridLayout",
			"Static rowSpanProperty"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Layout",
			"addPseudoClass(${1:name: string})"
		],
		[
			"stopImmediatePropagation(): void\tNativeScript - ErrorEvent",
			"stopImmediatePropagation()"
		],
		[
			"getChildIndex( child: View ): number\tNativeScript - Layout",
			"getChildIndex(${1:child: View})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Placeholder",
			"_unregisterAllAnimations()"
		],
		[
			"toView: functionanyanyanyany\tNativeScript - ValueConverter",
			"toView"
		],
		[
			"_removeView( view: View ): any\tNativeScript - SegmentedBar",
			"_removeView(${1:view: View})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - TextView",
			"Static classNameProperty"
		],
		[
			"prototype: Int16Array\tNativeScript - Int16ArrayConstructor",
			"prototype"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Bindable",
			"Static propertyChangeEvent"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - SegmentedBar",
			"_getNativeViewsCount()"
		],
		[
			"prototype: Int32Array\tNativeScript - Int32ArrayConstructor",
			"prototype"
		],
		[
			"unbind( property: string ): any\tNativeScript - ContentView",
			"unbind(${1:property: string})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - ContentView",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Static itemsProperty: Property\tNativeScript - SegmentedBar",
			"Static itemsProperty"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - View",
			"_goToVisualState(${1:state: string})"
		],
		[
			"credentials: RequestCredentials\tNativeScript - RequestInit",
			"credentials"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - TextView",
			"Static isEnabledProperty"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Style",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - ContentView",
			"_unregisterAllAnimations()"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - ActionBar",
			"isUserInteractionEnabled"
		],
		[
			"selectedBackgroundColor: Color\tNativeScript - SegmentedBar",
			"selectedBackgroundColor"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - TextView",
			"Static propertyChangeEvent"
		],
		[
			"NEGATIVE_INFINITY: number\tNativeScript - NumberConstructor",
			"NEGATIVE_INFINITY"
		],
		[
			"POSITIVE_INFINITY: number\tNativeScript - NumberConstructor",
			"POSITIVE_INFINITY"
		],
		[
			"hasOwnProperty( v: string ): boolean\tNativeScript - Object",
			"hasOwnProperty(${1:v: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - LayoutBase",
			"_emit(${1:eventNames: string})"
		],
		[
			"prototype: RangeError\tNativeScript - RangeErrorConstructor",
			"prototype"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - LayoutBase",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - DockLayout",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - DockLayout",
			"_emit(${1:eventNames: string})"
		],
		[
			"comb: \"+\"\"~\"\">\"\" \"\tNativeScript - SimpleIdentifierSelector",
			"comb"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - TextField",
			"_onAttached(${1:context: any})"
		],
		[
			"android: AndroidActionBarSettings\tNativeScript - ActionBar",
			"android"
		],
		[
			"withFontFamily( family: string ): Font\tNativeScript - Font",
			"withFontFamily(${1:family: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - TextField",
			"_getCurrentLayoutBounds()"
		],
		[
			"withFontWeight( weight: string ): Font\tNativeScript - Font",
			"withFontWeight(${1:weight: string})"
		],
		[
			"lengthComputable: boolean\tNativeScript - ProgressEventInit",
			"lengthComputable"
		],
		[
			"lengthComputable: boolean\tNativeScript - ProgressEventInit",
			"lengthComputable"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Style",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ActionItem",
			"_emit(${1:eventNames: string})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Progress",
			"Static classNameProperty"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - SearchBar",
			"_onAttached(${1:context: any})"
		],
		[
			"prototype: RangeError\tNativeScript - RangeErrorConstructor",
			"prototype"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - SearchBar",
			"_getCurrentLayoutBounds()"
		],
		[
			"hasOwnProperty( v: string ): boolean\tNativeScript - Object",
			"hasOwnProperty(${1:v: string})"
		],
		[
			"POSITIVE_INFINITY: number\tNativeScript - NumberConstructor",
			"POSITIVE_INFINITY"
		],
		[
			"NEGATIVE_INFINITY: number\tNativeScript - NumberConstructor",
			"NEGATIVE_INFINITY"
		],
		[
			"topMarginPercent: number\tNativeScript - CommonLayoutParams",
			"topMarginPercent"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Progress",
			"Static isEnabledProperty"
		],
		[
			"parentFormattedString: FormattedString\tNativeScript - Span",
			"parentFormattedString"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Progress",
			"Static propertyChangeEvent"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - SearchBar",
			"Static cssClassProperty"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Button",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Button",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Button",
			"_getValue(${1:property: Property})"
		],
		[
			"credentials: RequestCredentials\tNativeScript - RequestInit",
			"credentials"
		],
		[
			"getTop( view: View ): number\tNativeScript - AbsoluteLayout",
			"getTop(${1:view: View})"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - AbsoluteLayout",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - AbsoluteLayout",
			"getLocationInWindow()"
		],
		[
			"eventName: string\tNativeScript - GestureEventDataWithState",
			"eventName"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - StackLayout",
			"_unregisterAllAnimations()"
		],
		[
			"addChild( view: View ): void\tNativeScript - AbsoluteLayout",
			"addChild(${1:view: View})"
		],
		[
			"WeakRef<T>( obj: T ): WeakRef<T>\tNativeScript - WeakRef<T>",
			"WeakRef<T>(${1:obj: T})"
		],
		[
			"Static unloadedEvent: string\tNativeScript - AbsoluteLayout",
			"Static unloadedEvent"
		],
		[
			"Static topProperty: Property\tNativeScript - AbsoluteLayout",
			"Static topProperty"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - StackLayout",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Switch",
			"_getValue(${1:property: Property})"
		],
		[
			"removeChild( view: View ): void\tNativeScript - StackLayout",
			"removeChild(${1:view: View})"
		],
		[
			"prototype: Int32Array\tNativeScript - Int32ArrayConstructor",
			"prototype"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Switch",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"unbind( property: string ): any\tNativeScript - StackLayout",
			"unbind(${1:property: string})"
		],
		[
			"getAll( name: string ): Arraystring\tNativeScript - Headers",
			"getAll(${1:name: string})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Switch",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - TimePicker",
			"_emit(${1:eventNames: string})"
		],
		[
			"prototype: Int16Array\tNativeScript - Int16ArrayConstructor",
			"prototype"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - DatePicker",
			"_emit(${1:eventNames: string})"
		],
		[
			"prototype: Uint8Array\tNativeScript - Uint8ArrayConstructor",
			"prototype"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint8ClampedArray",
			"BYTES_PER_ELEMENT"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - DatePicker",
			"_shouldApplyStyleHandlers()"
		],
		[
			"upload: XMLHttpRequestUpload\tNativeScript - XMLHttpRequest",
			"upload"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - ScrollView",
			"_shouldApplyStyleHandlers()"
		],
		[
			"lastKnownLocation: Location\tNativeScript - LocationManager",
			"lastKnownLocation"
		],
		[
			"Static classNameProperty: Property\tNativeScript - HtmlView",
			"Static classNameProperty"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ScrollView",
			"_emit(${1:eventNames: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - WrapLayout",
			"_emit(${1:eventNames: string})"
		],
		[
			"ios: IOSActionItemSettings\tNativeScript - NavigationButton",
			"ios"
		],
		[
			"fail( data: any ): void\tNativeScript - Module NativeScript",
			"fail(${1:data: any})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Border",
			"addPseudoClass(${1:name: string})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Label",
			"setInlineStyle(${1:style: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Label",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - HtmlView",
			"Static isEnabledProperty"
		],
		[
			"Static editableProperty: Property\tNativeScript - TextField",
			"Static editableProperty"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Border",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - WrapLayout",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - TabView",
			"_isAddedToNativeVisualTree"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - HtmlView",
			"Static propertyChangeEvent"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - TextField",
			"Static cssClassProperty"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Border",
			"_getValue(${1:property: Property})"
		],
		[
			"AntiqueWhite: any\tNativeScript - Module color/known-colors",
			"AntiqueWhite"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - TimePicker",
			"_shouldApplyStyleHandlers()"
		],
		[
			"stopImmediatePropagation(): void\tNativeScript - ErrorEvent",
			"stopImmediatePropagation()"
		],
		[
			"DarkSeaGreen: any\tNativeScript - Module color/known-colors",
			"DarkSeaGreen"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - TextField",
			"isUserInteractionEnabled"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Frame",
			"setInlineStyle(${1:style: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Frame",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ListPicker",
			"_emit(${1:eventNames: string})"
		],
		[
			"LemonChiffon: any\tNativeScript - Module color/known-colors",
			"LemonChiffon"
		],
		[
			"LightSkyBlue: any\tNativeScript - Module color/known-colors",
			"LightSkyBlue"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - ListPicker",
			"_shouldApplyStyleHandlers()"
		],
		[
			"MediumOrchid: any\tNativeScript - Module color/known-colors",
			"MediumOrchid"
		],
		[
			"timeEnd( reportName: string ): void\tNativeScript - Console",
			"timeEnd(${1:reportName: string})"
		],
		[
			"push( request: DownloadRequest ): any\tNativeScript - Cache",
			"push(${1:request: DownloadRequest})"
		],
		[
			"MediumPurple: any\tNativeScript - Module color/known-colors",
			"MediumPurple"
		],
		[
			"MidnightBlue: any\tNativeScript - Module color/known-colors",
			"MidnightBlue"
		],
		[
			"_goToVisualState( state: string ): any\tNativeScript - Page",
			"_goToVisualState(${1:state: string})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Image",
			"setInlineStyle(${1:style: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Image",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"getRowSpan( view: View ): number\tNativeScript - GridLayout",
			"getRowSpan(${1:view: View})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Repeater",
			"Static propertyChangeEvent"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Repeater",
			"Static isEnabledProperty"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Repeater",
			"Static classNameProperty"
		],
		[
			"Static loadedEvent: string\tNativeScript - EditableTextBase",
			"Static loadedEvent"
		],
		[
			"unbind( property: string ): any\tNativeScript - TabViewItem",
			"unbind(${1:property: string})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - TextBase",
			"Static classNameProperty"
		],
		[
			"WeakRef<T>( obj: T ): WeakRef<T>\tNativeScript - WeakRef<T>",
			"WeakRef<T>(${1:obj: T})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - TextBase",
			"Static isEnabledProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - TextBase",
			"Static propertyChangeEvent"
		],
		[
			"navigate( create: function ): Pageany\tNativeScript - Frame",
			"navigate(${1:create: function})"
		],
		[
			"_onContextChanged(): void\tNativeScript - ActivityIndicator",
			"_onContextChanged()"
		],
		[
			"Static classNameProperty: Property\tNativeScript - ListView",
			"Static classNameProperty"
		],
		[
			"getPathSeparator(): string\tNativeScript - FileSystemAccess",
			"getPathSeparator()"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - ListView",
			"Static isEnabledProperty"
		],
		[
			"verticalAlignment: string\tNativeScript - ActivityIndicator",
			"verticalAlignment"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - ListView",
			"Static propertyChangeEvent"
		],
		[
			"Static rowHeightProperty: Property\tNativeScript - ListView",
			"Static rowHeightProperty"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - EditableTextBase",
			"getMeasuredWidth()"
		],
		[
			"getAll( name: string ): Arraystring\tNativeScript - Headers",
			"getAll(${1:name: string})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - EditableTextBase",
			"notify<T>(${1:data: T})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - WebView",
			"_isAddedToNativeVisualTree"
		],
		[
			"timeEnd( reportName: string ): void\tNativeScript - Console",
			"timeEnd(${1:reportName: string})"
		],
		[
			"Static StartElement: string\tNativeScript - ParserEventType",
			"Static StartElement"
		],
		[
			"get( name: string ): any\tNativeScript - ProxyViewContainer",
			"get(${1:name: string})"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - ActivityIndicator",
			"isLayoutRequired"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Observable",
			"_emit(${1:eventNames: string})"
		],
		[
			"set( object: any, src: Source ): any\tNativeScript - Source",
			"set(${1:object: any}, ${2:src: Source})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - NavigationButton",
			"notify<T>(${1:data: T})"
		],
		[
			"get( name: string ): any\tNativeScript - ObservableArray<T>",
			"get(${1:name: string})"
		],
		[
			"toLocaleString(): string\tNativeScript - ObservableArray<T>",
			"toLocaleString()"
		],
		[
			"getItem( index: number ): T\tNativeScript - VirtualArray<T>",
			"getItem(${1:index: number})"
		],
		[
			"Static minuteProperty: Property\tNativeScript - TimePicker",
			"Static minuteProperty"
		],
		[
			"get: functionTT\tNativeScript - TypedPropertyDescriptor<T>",
			"get"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - ScrollView",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_onContextChanged(): void\tNativeScript - CustomLayoutView",
			"_onContextChanged()"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - Page",
			"setInlineStyle(${1:style: string})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - TextView",
			"_onAttached(${1:context: any})"
		],
		[
			"new Style( parentView: View ): Style\tNativeScript - Style",
			"new Style(${1:parentView: View})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - LayoutBase",
			"getViewById<T>(${1:id: string})"
		],
		[
			"toLocaleString(): string\tNativeScript - Uint8ClampedArray",
			"toLocaleString()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - SegmentedBar",
			"_isInheritedChange()"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Page",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - DatePicker",
			"_unregisterAllAnimations()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - ScrollView",
			"_unregisterAllAnimations()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ActionBar",
			"_emit(${1:eventNames: string})"
		],
		[
			"msCachingEnabled(): boolean\tNativeScript - XMLHttpRequest",
			"msCachingEnabled()"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Frame",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"send( data?: string ): void\tNativeScript - XMLHttpRequest",
			"send(${1:data?: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Slider",
			"_isAddedToNativeVisualTree"
		],
		[
			"horizontalAlignment: string\tNativeScript - AbsoluteLayout",
			"horizontalAlignment"
		],
		[
			"removeChild( view: View ): void\tNativeScript - LayoutBase",
			"removeChild(${1:view: View})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - AbsoluteLayout",
			"cssPseudoClasses"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - DatePicker",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - HtmlView",
			"Static cssClassProperty"
		],
		[
			"unbind( property: string ): any\tNativeScript - DatePicker",
			"unbind(${1:property: string})"
		],
		[
			"Log( data: any ): void\tNativeScript - Module NativeScript",
			"Log(${1:data: any})"
		],
		[
			"eval( x: string ): any\tNativeScript - Module NativeScript",
			"eval(${1:x: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - TextField",
			"_emit(${1:eventNames: string})"
		],
		[
			"new Style( parentView: View ): Style\tNativeScript - Style",
			"new Style(${1:parentView: View})"
		],
		[
			"unbind( property: string ): any\tNativeScript - LayoutBase",
			"unbind(${1:property: string})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - View",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"log( data: any ): void\tNativeScript - Module NativeScript",
			"log(${1:data: any})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Style",
			"_getValue(${1:property: Property})"
		],
		[
			"setInlineStyle( style: string ): void\tNativeScript - View",
			"setInlineStyle(${1:style: string})"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - CustomLayoutView",
			"isLayoutRequired"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Style",
			"_getValue(${1:property: Property})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - HtmlView",
			"isUserInteractionEnabled"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - SearchBar",
			"_shouldApplyStyleHandlers()"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Label",
			"addPseudoClass(${1:name: string})"
		],
		[
			"new TabView( json?: any ): TabView\tNativeScript - TabView",
			"new TabView(${1:json?: any})"
		],
		[
			"set( name: string, value: any ): void\tNativeScript - Span",
			"set(${1:name: string}, ${2:value: any})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - WrapLayout",
			"_unregisterAllAnimations()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - GridLayout",
			"_unregisterAllAnimations()"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Progress",
			"isUserInteractionEnabled"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Label",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - TextView",
			"Static cssClassProperty"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Label",
			"_getValue(${1:property: Property})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Placeholder",
			"_removeView(${1:view: View})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - TabView",
			"Static classNameProperty"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - HtmlView",
			"_getCurrentLayoutBounds()"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - HtmlView",
			"_onAttached(${1:context: any})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - TabView",
			"Static isEnabledProperty"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - WrapLayout",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - TabView",
			"Static propertyChangeEvent"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Progress",
			"Static cssClassProperty"
		],
		[
			"removeChild( view: View ): void\tNativeScript - WrapLayout",
			"removeChild(${1:view: View})"
		],
		[
			"unbind( property: string ): any\tNativeScript - WrapLayout",
			"unbind(${1:property: string})"
		],
		[
			"DarkMagenta: any\tNativeScript - Module color/known-colors",
			"DarkMagenta"
		],
		[
			"join( separator?: string ): string\tNativeScript - List<T>",
			"join(${1:separator?: string})"
		],
		[
			"setMilliseconds( ms: number ): number\tNativeScript - Date",
			"setMilliseconds(${1:ms: number})"
		],
		[
			"isPrototypeOf( v: Object ): boolean\tNativeScript - Object",
			"isPrototypeOf(${1:v: Object})"
		],
		[
			"cachePagesOnNavigate: boolean\tNativeScript - AndroidFrame",
			"cachePagesOnNavigate"
		],
		[
			"Static editableProperty: Property\tNativeScript - TextView",
			"Static editableProperty"
		],
		[
			"parse( s: string ): number\tNativeScript - DateConstructor",
			"parse(${1:s: string})"
		],
		[
			"DeepSkyBlue: any\tNativeScript - Module color/known-colors",
			"DeepSkyBlue"
		],
		[
			"FloralWhite: any\tNativeScript - Module color/known-colors",
			"FloralWhite"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - SearchBar",
			"_emit(${1:eventNames: string})"
		],
		[
			"ForestGreen: any\tNativeScript - Module color/known-colors",
			"ForestGreen"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - ActionBar",
			"_shouldApplyStyleHandlers()"
		],
		[
			"GreenYellow: any\tNativeScript - Module color/known-colors",
			"GreenYellow"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - TimePicker",
			"_unregisterAllAnimations()"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Border",
			"_isAddedToNativeVisualTree"
		],
		[
			"setMilliseconds( ms: number ): number\tNativeScript - Date",
			"setMilliseconds(${1:ms: number})"
		],
		[
			"charCodeAt( index: number ): number\tNativeScript - String",
			"charCodeAt(${1:index: number})"
		],
		[
			"eventName: string\tNativeScript - RotationGestureEventData",
			"eventName"
		],
		[
			"LightSalmon: any\tNativeScript - Module color/known-colors",
			"LightSalmon"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - TextView",
			"isUserInteractionEnabled"
		],
		[
			"LightYellow: any\tNativeScript - Module color/known-colors",
			"LightYellow"
		],
		[
			"atan2( y: number, x: number ): number\tNativeScript - Math",
			"atan2(${1:y: number}, ${2:x: number})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - ListPicker",
			"_unregisterAllAnimations()"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - EditableTextBase",
			"isLayoutRequired"
		],
		[
			"atan2( y: number, x: number ): number\tNativeScript - Math",
			"atan2(${1:y: number}, ${2:x: number})"
		],
		[
			"Static maxValueProperty: Property\tNativeScript - Progress",
			"Static maxValueProperty"
		],
		[
			"set( key: string, image: any ): void\tNativeScript - Cache",
			"set(${1:key: string}, ${2:image: any})"
		],
		[
			"backgroundImage: string\tNativeScript - ProxyViewContainer",
			"backgroundImage"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - ListPicker",
			"getViewById<T>(${1:id: string})"
		],
		[
			"send( data?: string ): void\tNativeScript - XMLHttpRequest",
			"send(${1:data?: string})"
		],
		[
			"parse( s: string ): number\tNativeScript - DateConstructor",
			"parse(${1:s: string})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Repeater",
			"_onAttached(${1:context: any})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - FormattedString",
			"notify<T>(${1:data: T})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - TimePicker",
			"getViewById<T>(${1:id: string})"
		],
		[
			"NavajoWhite: any\tNativeScript - Module color/known-colors",
			"NavajoWhite"
		],
		[
			"getColumn( view: View ): number\tNativeScript - GridLayout",
			"getColumn(${1:view: View})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Repeater",
			"_getCurrentLayoutBounds()"
		],
		[
			"join( separator?: string ): string\tNativeScript - List<T>",
			"join(${1:separator?: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - ListPicker",
			"unbind(${1:property: string})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - TextField",
			"_shouldApplyStyleHandlers()"
		],
		[
			"cancel: functionvoidvoid\tNativeScript - KeyframeAnimation",
			"cancel"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - StackLayout",
			"_getNativeViewsCount()"
		],
		[
			"updateTextTrigger: string\tNativeScript - EditableTextBase",
			"updateTextTrigger"
		],
		[
			"unbind( property: string ): any\tNativeScript - GridLayout",
			"unbind(${1:property: string})"
		],
		[
			"verticalAlignment: string\tNativeScript - EditableTextBase",
			"verticalAlignment"
		],
		[
			"_removeView( view: View ): any\tNativeScript - ContentView",
			"_removeView(${1:view: View})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Repeater",
			"Static cssClassProperty"
		],
		[
			"Static columnProperty: Property\tNativeScript - GridLayout",
			"Static columnProperty"
		],
		[
			"spans: ObservableArraySpan\tNativeScript - FormattedString",
			"spans"
		],
		[
			"_removeView( view: View ): any\tNativeScript - StackLayout",
			"_removeView(${1:view: View})"
		],
		[
			"SaddleBrown: any\tNativeScript - Module color/known-colors",
			"SaddleBrown"
		],
		[
			"backgroundColor: Color\tNativeScript - AnimationDefinition",
			"backgroundColor"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - ListView",
			"isUserInteractionEnabled"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - TextBase",
			"isUserInteractionEnabled"
		],
		[
			"content: stringFormData\tNativeScript - HttpRequestOptions",
			"content"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - AbsoluteLayout",
			"getMeasuredHeight()"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - TextBase",
			"Static cssClassProperty"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Repeater",
			"isUserInteractionEnabled"
		],
		[
			"SpringGreen: any\tNativeScript - Module color/known-colors",
			"SpringGreen"
		],
		[
			"removeChild( view: View ): void\tNativeScript - GridLayout",
			"removeChild(${1:view: View})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Layout",
			"_isAddedToNativeVisualTree"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - ContentView",
			"_getNativeViewsCount()"
		],
		[
			"toString: functionstringstring\tNativeScript - HttpContent",
			"toString"
		],
		[
			"verticalAlignment: string\tNativeScript - CustomLayoutView",
			"verticalAlignment"
		],
		[
			"get( name: string ): any\tNativeScript - ActivityIndicator",
			"get(${1:name: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - TimePicker",
			"unbind(${1:property: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - SegmentedBar",
			"_syncNativeProperties()"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - TextBase",
			"_getCurrentLayoutBounds()"
		],
		[
			"isPrototypeOf( v: Object ): boolean\tNativeScript - Object",
			"isPrototypeOf(${1:v: Object})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - ListView",
			"Static cssClassProperty"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - AbsoluteLayout",
			"_removeFromSuperview()"
		],
		[
			"unbind( property: string ): any\tNativeScript - DockLayout",
			"unbind(${1:property: string})"
		],
		[
			"_onContextChanged(): void\tNativeScript - EditableTextBase",
			"_onContextChanged()"
		],
		[
			"removeChild( view: View ): void\tNativeScript - DockLayout",
			"removeChild(${1:view: View})"
		],
		[
			"Static loadMoreItemsEvent: string\tNativeScript - ListView",
			"Static loadMoreItemsEvent"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - TextBase",
			"_onAttached(${1:context: any})"
		],
		[
			"Static idProperty: Property\tNativeScript - AbsoluteLayout",
			"Static idProperty"
		],
		[
			"charCodeAt( index: number ): number\tNativeScript - String",
			"charCodeAt(${1:index: number})"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Image",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Progress",
			"_getCurrentLayoutBounds()"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - GridLayout",
			"getViewById<T>(${1:id: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - ActionItem",
			"unbind(${1:property: string})"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Image",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - ListView",
			"_getCurrentLayoutBounds()"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Image",
			"_getValue(${1:property: Property})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - ListView",
			"_onAttached(${1:context: any})"
		],
		[
			"new WebView( json?: any ): WebView\tNativeScript - WebView",
			"new WebView(${1:json?: any})"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Progress",
			"_onAttached(${1:context: any})"
		],
		[
			"Static imageSourceProperty: Property\tNativeScript - Image",
			"Static imageSourceProperty"
		],
		[
			"YellowGreen: any\tNativeScript - Module color/known-colors",
			"YellowGreen"
		],
		[
			"stopMonitoring(): void\tNativeScript - Module connectivity",
			"stopMonitoring()"
		],
		[
			"parse( xmlString: string ): void\tNativeScript - XmlParser",
			"parse(${1:xmlString: string})"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Switch",
			"_isAddedToNativeVisualTree"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - DockLayout",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Placeholder",
			"_getNativeViewsCount()"
		],
		[
			"unbind( property: string ): any\tNativeScript - ScrollView",
			"unbind(${1:property: string})"
		],
		[
			"RESOURCE_PREFIX: string\tNativeScript - Module utils/utils",
			"RESOURCE_PREFIX"
		],
		[
			"toLocaleString(): string\tNativeScript - Uint8ClampedArray",
			"toLocaleString()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - LayoutBase",
			"_unregisterAllAnimations()"
		],
		[
			"Static classNameProperty: Property\tNativeScript - WebView",
			"Static classNameProperty"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - DockLayout",
			"_unregisterAllAnimations()"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Button",
			"_isAddedToNativeVisualTree"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - TextView",
			"_getCurrentLayoutBounds()"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - WebView",
			"Static isEnabledProperty"
		],
		[
			"Static changeEvent: string\tNativeScript - VirtualArray<T>",
			"Static changeEvent"
		],
		[
			"backgroundSpanUnderStatusBar: boolean\tNativeScript - Page",
			"backgroundSpanUnderStatusBar"
		],
		[
			"msCachingEnabled(): boolean\tNativeScript - XMLHttpRequest",
			"msCachingEnabled()"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Frame",
			"addPseudoClass(${1:name: string})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - VirtualArray<T>",
			"notify<T>(${1:data: T})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - WebView",
			"Static propertyChangeEvent"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Frame",
			"_getValue(${1:property: Property})"
		],
		[
			"get: functionTT\tNativeScript - TypedPropertyDescriptor<T>",
			"get"
		],
		[
			"rename( newName: string ): Promiseany\tNativeScript - File",
			"rename(${1:newName: string})"
		],
		[
			"_updateActionBar( page?: Page ): any\tNativeScript - Frame",
			"_updateActionBar(${1:page?: Page})"
		],
		[
			"position: string\tNativeScript - AndroidActionItemSettings",
			"position"
		],
		[
			"DarkViolet: any\tNativeScript - Module color/known-colors",
			"DarkViolet"
		],
		[
			"Static returnPressEvent: string\tNativeScript - TextField",
			"Static returnPressEvent"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Switch",
			"Static classNameProperty"
		],
		[
			"DodgerBlue: any\tNativeScript - Module color/known-colors",
			"DodgerBlue"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Switch",
			"Static isEnabledProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Switch",
			"Static propertyChangeEvent"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Bindable",
			"_emit(${1:eventNames: string})"
		],
		[
			"GhostWhite: any\tNativeScript - Module color/known-colors",
			"GhostWhite"
		],
		[
			"toString( radix?: number ): string\tNativeScript - Number",
			"toString(${1:radix?: number})"
		],
		[
			"Static itemsProperty: Property\tNativeScript - ListPicker",
			"Static itemsProperty"
		],
		[
			"_childrenCount: number\tNativeScript - ProxyViewContainer",
			"_childrenCount"
		],
		[
			"_gestureObservers: any\tNativeScript - ProxyViewContainer",
			"_gestureObservers"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - ContentView",
			"_syncNativeProperties()"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Layout",
			"Static classNameProperty"
		],
		[
			"automationText: string\tNativeScript - ProxyViewContainer",
			"automationText"
		],
		[
			"prototype: TypeError\tNativeScript - TypeErrorConstructor",
			"prototype"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - SearchBar",
			"_unregisterAllAnimations()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - ActionBar",
			"_unregisterAllAnimations()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - ListPicker",
			"_getNativeViewsCount()"
		],
		[
			"backgroundColor: Color\tNativeScript - ProxyViewContainer",
			"backgroundColor"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Repeater",
			"_shouldApplyStyleHandlers()"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - TextField",
			"getViewById<T>(${1:id: string})"
		],
		[
			"LightCoral: any\tNativeScript - Module color/known-colors",
			"LightCoral"
		],
		[
			"LightGreen: any\tNativeScript - Module color/known-colors",
			"LightGreen"
		],
		[
			"_removeView( view: View ): any\tNativeScript - ListPicker",
			"_removeView(${1:view: View})"
		],
		[
			"_disableNavBarAnimation: boolean\tNativeScript - iOSFrame",
			"_disableNavBarAnimation"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - TextView",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Label",
			"_isAddedToNativeVisualTree"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Slider",
			"Static isEnabledProperty"
		],
		[
			"get( name: string ): any\tNativeScript - SegmentedBarItem",
			"get(${1:name: string})"
		],
		[
			"instance: Transition\tNativeScript - NavigationTransition",
			"instance"
		],
		[
			"Static monthProperty: Property\tNativeScript - DatePicker",
			"Static monthProperty"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - Page",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"MediumBlue: any\tNativeScript - Module color/known-colors",
			"MediumBlue"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Span",
			"_getValue(${1:property: Property})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - ContentView",
			"_isInheritedChange()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Placeholder",
			"_isInheritedChange()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - TimePicker",
			"_getNativeViewsCount()"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Image",
			"_isAddedToNativeVisualTree"
		],
		[
			"isForwards: boolean\tNativeScript - KeyframeAnimationInfo",
			"isForwards"
		],
		[
			"_removeView( view: View ): any\tNativeScript - GridLayout",
			"_removeView(${1:view: View})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - GridLayout",
			"_getNativeViewsCount()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - DatePicker",
			"_getNativeViewsCount()"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Layout",
			"Static isEnabledProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Layout",
			"Static propertyChangeEvent"
		],
		[
			"_removeView( view: View ): any\tNativeScript - DatePicker",
			"_removeView(${1:view: View})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - LayoutBase",
			"_getNativeViewsCount()"
		],
		[
			"items: ArraySegmentedBarItem\tNativeScript - SegmentedBar",
			"items"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - TextField",
			"_unregisterAllAnimations()"
		],
		[
			"Bindable( json?: any ): Bindable\tNativeScript - Bindable",
			"Bindable(${1:json?: any})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Progress",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - ProxyObject",
			"_syncNativeProperties()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Repeater",
			"_emit(${1:eventNames: string})"
		],
		[
			"ListView( json?: any ): ListView\tNativeScript - ListView",
			"ListView(${1:json?: any})"
		],
		[
			"toString( radix?: number ): string\tNativeScript - Number",
			"toString(${1:radix?: number})"
		],
		[
			"prototype: Int8Array\tNativeScript - Int8ArrayConstructor",
			"prototype"
		],
		[
			"match( node: Node ): boolean\tNativeScript - SelectorCore",
			"match(${1:node: Node})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - LayoutBase",
			"_removeView(${1:view: View})"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - Page",
			"_getValue(${1:property: Property})"
		],
		[
			"PapayaWhip: any\tNativeScript - Module color/known-colors",
			"PapayaWhip"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - ActionBar",
			"getViewById<T>(${1:id: string})"
		],
		[
			"backstackVisible: boolean\tNativeScript - NavigationEntry",
			"backstackVisible"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - TextView",
			"_emit(${1:eventNames: string})"
		],
		[
			"PowderBlue: any\tNativeScript - Module color/known-colors",
			"PowderBlue"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Slider",
			"Static propertyChangeEvent"
		],
		[
			"getFocusX(): number\tNativeScript - PinchGestureEventData",
			"getFocusX()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - ScrollView",
			"_removeView(${1:view: View})"
		],
		[
			"TextBase( json?: any ): TextBase\tNativeScript - TextBase",
			"TextBase(${1:json?: any})"
		],
		[
			"Static unloadedEvent: string\tNativeScript - SegmentedBar",
			"Static unloadedEvent"
		],
		[
			"HtmlView( json?: any ): HtmlView\tNativeScript - HtmlView",
			"HtmlView(${1:json?: any})"
		],
		[
			"SandyBrown: any\tNativeScript - Module color/known-colors",
			"SandyBrown"
		],
		[
			"push( ...items: T[] ): number\tNativeScript - Array<T, T>",
			"push(${1:...items: T[]})"
		],
		[
			"getFocusY(): number\tNativeScript - PinchGestureEventData",
			"getFocusY()"
		],
		[
			"unbind( property: string ): any\tNativeScript - TextField",
			"unbind(${1:property: string})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - ScrollView",
			"_getNativeViewsCount()"
		],
		[
			"textFieldBackgroundColor: Color\tNativeScript - SearchBar",
			"textFieldBackgroundColor"
		],
		[
			"_removeView( view: View ): any\tNativeScript - DockLayout",
			"_removeView(${1:view: View})"
		],
		[
			"selectors: SelectorCore\tNativeScript - SelectorsMatch<T>",
			"selectors"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - StackLayout",
			"_isInheritedChange()"
		],
		[
			"concat<U>( ...items: U[] ): T\tNativeScript - Array<T, T>",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - WrapLayout",
			"_getNativeViewsCount()"
		],
		[
			"toLocaleString(): string\tNativeScript - RegExpMatchArray",
			"toLocaleString()"
		],
		[
			"prototype: Int8Array\tNativeScript - Int8ArrayConstructor",
			"prototype"
		],
		[
			"clear(): void\tNativeScript - Module application-settings",
			"clear()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - DockLayout",
			"_getNativeViewsCount()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - SegmentedBar",
			"getLocationOnScreen()"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Button",
			"Static propertyChangeEvent"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - SegmentedBar",
			"getLocationInWindow()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - TextBase",
			"_emit(${1:eventNames: string})"
		],
		[
			"concat<U>( ...items: U[] ): T\tNativeScript - Array<T, T>",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - WrapLayout",
			"_removeView(${1:view: View})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Button",
			"Static isEnabledProperty"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - AbsoluteLayout",
			"notify<T>(${1:data: T})"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - AbsoluteLayout",
			"getMeasuredWidth()"
		],
		[
			"_onDetached( force?: boolean ): void\tNativeScript - View",
			"_onDetached(${1:force?: boolean})"
		],
		[
			"unbind( property: string ): any\tNativeScript - ActionBar",
			"unbind(${1:property: string})"
		],
		[
			"isLayoutValid: boolean\tNativeScript - ProxyViewContainer",
			"isLayoutValid"
		],
		[
			"_requestLayoutOnTextChanged(): void\tNativeScript - Label",
			"_requestLayoutOnTextChanged()"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Slider",
			"Static classNameProperty"
		],
		[
			"getChildrenCount(): number\tNativeScript - AbsoluteLayout",
			"getChildrenCount()"
		],
		[
			"unbind( property: string ): any\tNativeScript - SearchBar",
			"unbind(${1:property: string})"
		],
		[
			"Repeater( json?: any ): Repeater\tNativeScript - Repeater",
			"Repeater(${1:json?: any})"
		],
		[
			"WhiteSmoke: any\tNativeScript - Module color/known-colors",
			"WhiteSmoke"
		],
		[
			"dismissSoftInput(): void\tNativeScript - EditableTextBase",
			"dismissSoftInput()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - StackLayout",
			"_syncNativeProperties()"
		],
		[
			"get( name: string ): any\tNativeScript - EditableTextBase",
			"get(${1:name: string})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - TabView",
			"isUserInteractionEnabled"
		],
		[
			"prototype: EvalError\tNativeScript - EvalErrorConstructor",
			"prototype"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Button",
			"Static classNameProperty"
		],
		[
			"_getValue( property: Property ): any\tNativeScript - View",
			"_getValue(${1:property: Property})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - ListView",
			"_emit(${1:eventNames: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - HtmlView",
			"_emit(${1:eventNames: string})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - TabView",
			"Static cssClassProperty"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - View",
			"addPseudoClass(${1:name: string})"
		],
		[
			"removeChildren(): void\tNativeScript - ProxyViewContainer",
			"removeChildren()"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Frame",
			"_isAddedToNativeVisualTree"
		],
		[
			"Progress( json?: any ): Progress\tNativeScript - Progress",
			"Progress(${1:json?: any})"
		],
		[
			"TextView( json?: any ): TextView\tNativeScript - TextView",
			"TextView(${1:json?: any})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - TextBase",
			"_shouldApplyStyleHandlers()"
		],
		[
			"withFontStyle( style: string ): Font\tNativeScript - Font",
			"withFontStyle(${1:style: string})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - WebView",
			"isUserInteractionEnabled"
		],
		[
			"Static loadedEvent: string\tNativeScript - AbsoluteLayout",
			"Static loadedEvent"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - ListView",
			"_shouldApplyStyleHandlers()"
		],
		[
			"object: Observable\tNativeScript - AndroidOptionEventData",
			"object"
		],
		[
			"_removeView( view: View ): any\tNativeScript - TimePicker",
			"_removeView(${1:view: View})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Border",
			"Static propertyChangeEvent"
		],
		[
			"toLocaleString(): string\tNativeScript - RegExpMatchArray",
			"toLocaleString()"
		],
		[
			"Static EndElement: string\tNativeScript - ParserEventType",
			"Static EndElement"
		],
		[
			"Aquamarine: any\tNativeScript - Module color/known-colors",
			"Aquamarine"
		],
		[
			"type: \"rule\"\"keyframes\"\"declaration\"\tNativeScript - Node",
			"type"
		],
		[
			"Property( value: any ): Property\tNativeScript - Property",
			"Property(${1:value: any})"
		],
		[
			"get( name: string ): any\tNativeScript - NavigationButton",
			"get(${1:name: string})"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Border",
			"Static isEnabledProperty"
		],
		[
			"type: \"rule\"\"keyframes\"\"declaration\"\tNativeScript - Rule",
			"type"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Border",
			"Static classNameProperty"
		],
		[
			"backgroundImage: string\tNativeScript - ActivityIndicator",
			"backgroundImage"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Progress",
			"_emit(${1:eventNames: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - TabView",
			"_getCurrentLayoutBounds()"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - WebView",
			"Static cssClassProperty"
		],
		[
			"BlueViolet: any\tNativeScript - Module color/known-colors",
			"BlueViolet"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - TabView",
			"_onAttached(${1:context: any})"
		],
		[
			"Chartreuse: any\tNativeScript - Module color/known-colors",
			"Chartreuse"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - HtmlView",
			"_shouldApplyStyleHandlers()"
		],
		[
			"addPseudoClass( name: string ): void\tNativeScript - Page",
			"addPseudoClass(${1:name: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Placeholder",
			"_syncNativeProperties()"
		],
		[
			"DarkOrange: any\tNativeScript - Module color/known-colors",
			"DarkOrange"
		],
		[
			"prototype: EvalError\tNativeScript - EvalErrorConstructor",
			"prototype"
		],
		[
			"get( name: string ): any\tNativeScript - CustomLayoutView",
			"get(${1:name: string})"
		],
		[
			"DarkOrchid: any\tNativeScript - Module color/known-colors",
			"DarkOrchid"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - WebView",
			"_onAttached(${1:context: any})"
		],
		[
			"Property( value: any ): Property\tNativeScript - Property",
			"Property(${1:value: any})"
		],
		[
			"DarkSalmon: any\tNativeScript - Module color/known-colors",
			"DarkSalmon"
		],
		[
			"rotation: number\tNativeScript - RotationGestureEventData",
			"rotation"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - SearchBar",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - WebView",
			"_getCurrentLayoutBounds()"
		],
		[
			"push( ...items: T[] ): number\tNativeScript - Array<T, T>",
			"push(${1:...items: T[]})"
		],
		[
			"prototype: TypeError\tNativeScript - TypeErrorConstructor",
			"prototype"
		],
		[
			"pow( x: number, y: number ): number\tNativeScript - Math",
			"pow(${1:x: number}, ${2:y: number})"
		],
		[
			"toLocaleString(): string\tNativeScript - RegExpExecArray",
			"toLocaleString()"
		],
		[
			"LawnGreen: any\tNativeScript - Module color/known-colors",
			"LawnGreen"
		],
		[
			"Array: ArrayConstructor\tNativeScript - RegExpMatchArray",
			"Array"
		],
		[
			"LightBlue: any\tNativeScript - Module color/known-colors",
			"LightBlue"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - ScrollView",
			"_syncNativeProperties()"
		],
		[
			"LightCyan: any\tNativeScript - Module color/known-colors",
			"LightCyan"
		],
		[
			"LightGray: any\tNativeScript - Module color/known-colors",
			"LightGray"
		],
		[
			"get( name: string ): any\tNativeScript - FormattedString",
			"get(${1:name: string})"
		],
		[
			"LightPink: any\tNativeScript - Module color/known-colors",
			"LightPink"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Progress",
			"_unregisterAllAnimations()"
		],
		[
			"type: GestureTypes\tNativeScript - SwipeGestureEventData",
			"type"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Style",
			"Static propertyChangeEvent"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - View",
			"_isAddedToNativeVisualTree"
		],
		[
			"create: functionPagePage\tNativeScript - NavigationEntry",
			"create"
		],
		[
			"iterations: number\tNativeScript - KeyframeAnimationInfo",
			"iterations"
		],
		[
			"LimeGreen: any\tNativeScript - Module color/known-colors",
			"LimeGreen"
		],
		[
			"isReverse: boolean\tNativeScript - KeyframeAnimationInfo",
			"isReverse"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Button",
			"_onAttached(${1:context: any})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - ListPicker",
			"_syncNativeProperties()"
		],
		[
			"Static dockProperty: Property\tNativeScript - DockLayout",
			"Static dockProperty"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Placeholder",
			"getLocationInWindow()"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - SegmentedBar",
			"getMeasuredHeight()"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Button",
			"_getCurrentLayoutBounds()"
		],
		[
			"unbind( property: string ): any\tNativeScript - TextView",
			"unbind(${1:property: string})"
		],
		[
			"configurable: boolean\tNativeScript - PropertyDescriptor",
			"configurable"
		],
		[
			"parse( xml: string ): void\tNativeScript - EasySAXParser",
			"parse(${1:xml: string})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - TextField",
			"_getNativeViewsCount()"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Layout",
			"Static cssClassProperty"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - ScrollView",
			"_isInheritedChange()"
		],
		[
			"Static textWrapProperty: Property\tNativeScript - Button",
			"Static textWrapProperty"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Layout",
			"_onAttached(${1:context: any})"
		],
		[
			"backgroundImage: string\tNativeScript - CustomLayoutView",
			"backgroundImage"
		],
		[
			"time( reportName: string ): void\tNativeScript - Console",
			"time(${1:reportName: string})"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Layout",
			"isUserInteractionEnabled"
		],
		[
			"currentTarget: EventTarget\tNativeScript - ProgressEvent",
			"currentTarget"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Placeholder",
			"Static unloadedEvent"
		],
		[
			"MintCream: any\tNativeScript - Module color/known-colors",
			"MintCream"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Cache",
			"Static propertyChangeEvent"
		],
		[
			"MistyRose: any\tNativeScript - Module color/known-colors",
			"MistyRose"
		],
		[
			"Static minValueProperty: Property\tNativeScript - Slider",
			"Static minValueProperty"
		],
		[
			"_removeView( view: View ): any\tNativeScript - ActionBar",
			"_removeView(${1:view: View})"
		],
		[
			"Static unloadedEvent: string\tNativeScript - ContentView",
			"Static unloadedEvent"
		],
		[
			"prototype: Promiseany\tNativeScript - PromiseConstructor",
			"prototype"
		],
		[
			"neutralButtonText: string\tNativeScript - ConfirmOptions",
			"neutralButtonText"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - WrapLayout",
			"_isInheritedChange()"
		],
		[
			"getChildAt( index: number ): View\tNativeScript - Layout",
			"getChildAt(${1:index: number})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Button",
			"Static cssClassProperty"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - ActionBar",
			"_getNativeViewsCount()"
		],
		[
			"Static maxValueProperty: Property\tNativeScript - Slider",
			"Static maxValueProperty"
		],
		[
			"OliveDrab: any\tNativeScript - Module color/known-colors",
			"OliveDrab"
		],
		[
			"OrangeRed: any\tNativeScript - Module color/known-colors",
			"OrangeRed"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - GridLayout",
			"_syncNativeProperties()"
		],
		[
			"PaleGreen: any\tNativeScript - Module color/known-colors",
			"PaleGreen"
		],
		[
			"_removeView( view: View ): any\tNativeScript - TextField",
			"_removeView(${1:view: View})"
		],
		[
			"Color( knownColor: string ): Color\tNativeScript - Color",
			"Color(${1:knownColor: string})"
		],
		[
			"prototype: Promiseany\tNativeScript - PromiseConstructor",
			"prototype"
		],
		[
			"configurable: boolean\tNativeScript - PropertyDescriptor",
			"configurable"
		],
		[
			"PeachPuff: any\tNativeScript - Module color/known-colors",
			"PeachPuff"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Border",
			"_onAttached(${1:context: any})"
		],
		[
			"addChild( view: View ): void\tNativeScript - StackLayout",
			"addChild(${1:view: View})"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Style",
			"Static propertyChangeEvent"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - WrapLayout",
			"_syncNativeProperties()"
		],
		[
			"_onContextChanged(): void\tNativeScript - AbsoluteLayout",
			"_onContextChanged()"
		],
		[
			"type: GestureTypes\tNativeScript - PinchGestureEventData",
			"type"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - LayoutBase",
			"_isInheritedChange()"
		],
		[
			"RosyBrown: any\tNativeScript - Module color/known-colors",
			"RosyBrown"
		],
		[
			"getDock( view: View ): string\tNativeScript - DockLayout",
			"getDock(${1:view: View})"
		],
		[
			"RoyalBlue: any\tNativeScript - Module color/known-colors",
			"RoyalBlue"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Slider",
			"_getCurrentLayoutBounds()"
		],
		[
			"Static iconProperty: Property\tNativeScript - ActionItem",
			"Static iconProperty"
		],
		[
			"clipToBounds: boolean\tNativeScript - ProxyViewContainer",
			"clipToBounds"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Button",
			"isUserInteractionEnabled"
		],
		[
			"cssClasses: Setstring\tNativeScript - ProxyViewContainer",
			"cssClasses"
		],
		[
			"time( reportName: string ): void\tNativeScript - Console",
			"time(${1:reportName: string})"
		],
		[
			"verticalAlignment: string\tNativeScript - AbsoluteLayout",
			"verticalAlignment"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - StackLayout",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - StackLayout",
			"getLocationOnScreen()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - GridLayout",
			"_isInheritedChange()"
		],
		[
			"horizontalAlignment: string\tNativeScript - SegmentedBar",
			"horizontalAlignment"
		],
		[
			"SlateBlue: any\tNativeScript - Module color/known-colors",
			"SlateBlue"
		],
		[
			"SlateGray: any\tNativeScript - Module color/known-colors",
			"SlateGray"
		],
		[
			"_removeView( view: View ): any\tNativeScript - SearchBar",
			"_removeView(${1:view: View})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - TextView",
			"_unregisterAllAnimations()"
		],
		[
			"object: Observable\tNativeScript - PinchGestureEventData",
			"object"
		],
		[
			"SteelBlue: any\tNativeScript - Module color/known-colors",
			"SteelBlue"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Progress",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Static textProperty: Property\tNativeScript - ActionItem",
			"Static textProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Label",
			"Static propertyChangeEvent"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Label",
			"Static isEnabledProperty"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Border",
			"_getCurrentLayoutBounds()"
		],
		[
			"Turquoise: any\tNativeScript - Module color/known-colors",
			"Turquoise"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Switch",
			"isUserInteractionEnabled"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Label",
			"Static classNameProperty"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - ContentView",
			"getLocationOnScreen()"
		],
		[
			"unshift( ...items: T[] ): number\tNativeScript - List<T>",
			"unshift(${1:...items: T[]})"
		],
		[
			"goBack( to?: BackstackEntry ): any\tNativeScript - Frame",
			"goBack(${1:to?: BackstackEntry})"
		],
		[
			"AliceBlue: any\tNativeScript - Module color/known-colors",
			"AliceBlue"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Switch",
			"Static cssClassProperty"
		],
		[
			"Static idProperty: Property\tNativeScript - SegmentedBar",
			"Static idProperty"
		],
		[
			"heightPercent: number\tNativeScript - CommonLayoutParams",
			"heightPercent"
		],
		[
			"Static hourProperty: Property\tNativeScript - TimePicker",
			"Static hourProperty"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Border",
			"Static cssClassProperty"
		],
		[
			"Static itemLoadingEvent: string\tNativeScript - ListView",
			"Static itemLoadingEvent"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Switch",
			"_getCurrentLayoutBounds()"
		],
		[
			"currentTarget: EventTarget\tNativeScript - ProgressEvent",
			"currentTarget"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - TabView",
			"_emit(${1:eventNames: string})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - SegmentedBar",
			"_removeFromSuperview()"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Switch",
			"_onAttached(${1:context: any})"
		],
		[
			"BurlyWood: any\tNativeScript - Module color/known-colors",
			"BurlyWood"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - SegmentedBar",
			"cssPseudoClasses"
		],
		[
			"eventName: string\tNativeScript - AndroidOptionEventData",
			"eventName"
		],
		[
			"CadetBlue: any\tNativeScript - Module color/known-colors",
			"CadetBlue"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - SearchBar",
			"_getNativeViewsCount()"
		],
		[
			"Chocolate: any\tNativeScript - Module color/known-colors",
			"Chocolate"
		],
		[
			"keys( o: any ): string\tNativeScript - ObjectConstructor",
			"keys(${1:o: any})"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Slider",
			"Static cssClassProperty"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - TabView",
			"_shouldApplyStyleHandlers()"
		],
		[
			"Static tapEvent: string\tNativeScript - NavigationButton",
			"Static tapEvent"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - HtmlView",
			"_unregisterAllAnimations()"
		],
		[
			"keys( o: any ): string\tNativeScript - ObjectConstructor",
			"keys(${1:o: any})"
		],
		[
			"paddingBottom: number\tNativeScript - ProxyViewContainer",
			"paddingBottom"
		],
		[
			"getFolder( name: string ): Folder\tNativeScript - Folder",
			"getFolder(${1:name: string})"
		],
		[
			"requestLayout(): void\tNativeScript - ProxyViewContainer",
			"requestLayout()"
		],
		[
			"DarkGreen: any\tNativeScript - Module color/known-colors",
			"DarkGreen"
		],
		[
			"DarkKhaki: any\tNativeScript - Module color/known-colors",
			"DarkKhaki"
		],
		[
			"unbind( property: string ): any\tNativeScript - Bindable",
			"unbind(${1:property: string})"
		],
		[
			"closeCallback: Function\tNativeScript - ShownModallyData",
			"closeCallback"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Slider",
			"isUserInteractionEnabled"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - LayoutBase",
			"_syncNativeProperties()"
		],
		[
			"isLayoutValid: boolean\tNativeScript - ActivityIndicator",
			"isLayoutValid"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Image",
			"Static propertyChangeEvent"
		],
		[
			"object: Observable\tNativeScript - TouchGestureEventData",
			"object"
		],
		[
			"autocapitalizationType: string\tNativeScript - TextField",
			"autocapitalizationType"
		],
		[
			"Static isLoadingProperty: Property\tNativeScript - Image",
			"Static isLoadingProperty"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Image",
			"Static isEnabledProperty"
		],
		[
			"unbind( property: string ): any\tNativeScript - Repeater",
			"unbind(${1:property: string})"
		],
		[
			"set( key: K, value: V ): MapKV\tNativeScript - Map<K, V>",
			"set(${1:key: K}, ${2:value: V})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Image",
			"Static classNameProperty"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - DockLayout",
			"_syncNativeProperties()"
		],
		[
			"Static dateProperty: Property\tNativeScript - DatePicker",
			"Static dateProperty"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - ListView",
			"_unregisterAllAnimations()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - TimePicker",
			"_syncNativeProperties()"
		],
		[
			"time( reportName: string ): void\tNativeScript - Console",
			"time(${1:reportName: string})"
		],
		[
			"Static timeProperty: Property\tNativeScript - TimePicker",
			"Static timeProperty"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - ContentView",
			"getLocationInWindow()"
		],
		[
			"getActualSize(): Size\tNativeScript - ProxyViewContainer",
			"getActualSize()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Placeholder",
			"getLocationOnScreen()"
		],
		[
			"unbind( property: string ): any\tNativeScript - Progress",
			"unbind(${1:property: string})"
		],
		[
			"pow( x: number, y: number ): number\tNativeScript - Math",
			"pow(${1:x: number}, ${2:y: number})"
		],
		[
			"Static yearProperty: Property\tNativeScript - DatePicker",
			"Static yearProperty"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - TextBase",
			"_unregisterAllAnimations()"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Layout",
			"_getCurrentLayoutBounds()"
		],
		[
			"FireBrick: any\tNativeScript - Module color/known-colors",
			"FireBrick"
		],
		[
			"_updateLayout(): void\tNativeScript - ProxyViewContainer",
			"_updateLayout()"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - ListView",
			"getViewById<T>(${1:id: string})"
		],
		[
			"contains( name: string ): boolean\tNativeScript - Folder",
			"contains(${1:name: string})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - TextView",
			"getViewById<T>(${1:id: string})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - TextBase",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Array: ArrayConstructor\tNativeScript - RegExpMatchArray",
			"Array"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - DockLayout",
			"_isInheritedChange()"
		],
		[
			"Gainsboro: any\tNativeScript - Module color/known-colors",
			"Gainsboro"
		],
		[
			"backgroundColor: Color\tNativeScript - ActivityIndicator",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - ActivityIndicator",
			"automationText"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - AbsoluteLayout",
			"isLayoutRequired"
		],
		[
			"_gestureObservers: any\tNativeScript - ActivityIndicator",
			"_gestureObservers"
		],
		[
			"set( key: K, value: V ): MapKV\tNativeScript - Map<K, V>",
			"set(${1:key: K}, ${2:value: V})"
		],
		[
			"unshift( ...items: T[] ): number\tNativeScript - List<T>",
			"unshift(${1:...items: T[]})"
		],
		[
			"_childrenCount: number\tNativeScript - ActivityIndicator",
			"_childrenCount"
		],
		[
			"object: Observable\tNativeScript - SwipeGestureEventData",
			"object"
		],
		[
			"unbind( property: string ): any\tNativeScript - ListView",
			"unbind(${1:property: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - TextBase",
			"unbind(${1:property: string})"
		],
		[
			"GoldenRod: any\tNativeScript - Module color/known-colors",
			"GoldenRod"
		],
		[
			"backgroundImage: string\tNativeScript - EditableTextBase",
			"backgroundImage"
		],
		[
			"systemIcon: number\tNativeScript - IOSActionItemSettings",
			"systemIcon"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Frame",
			"Static classNameProperty"
		],
		[
			"type: GestureTypes\tNativeScript - TouchGestureEventData",
			"type"
		],
		[
			"Static loadFinishedEvent: string\tNativeScript - WebView",
			"Static loadFinishedEvent"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Frame",
			"Static isEnabledProperty"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Frame",
			"Static propertyChangeEvent"
		],
		[
			"_isAddedToNativeVisualTree: boolean\tNativeScript - Page",
			"_isAddedToNativeVisualTree"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Repeater",
			"getViewById<T>(${1:id: string})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - HtmlView",
			"getViewById<T>(${1:id: string})"
		],
		[
			"get( name: string ): any\tNativeScript - VirtualArray<T>",
			"get(${1:name: string})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - DatePicker",
			"_isInheritedChange()"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Slider",
			"_onAttached(${1:context: any})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - WebView",
			"_shouldApplyStyleHandlers()"
		],
		[
			"formattedText: FormattedString\tNativeScript - TextField",
			"formattedText"
		],
		[
			"Static unloadedEvent: string\tNativeScript - StackLayout",
			"Static unloadedEvent"
		],
		[
			"IndianRed: any\tNativeScript - Module color/known-colors",
			"IndianRed"
		],
		[
			"toLocaleString(): string\tNativeScript - RegExpExecArray",
			"toLocaleString()"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Border",
			"isUserInteractionEnabled"
		],
		[
			"unbind( property: string ): any\tNativeScript - HtmlView",
			"unbind(${1:property: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - DatePicker",
			"_syncNativeProperties()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - TimePicker",
			"_isInheritedChange()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - WebView",
			"_emit(${1:eventNames: string})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Repeater",
			"_unregisterAllAnimations()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - ListPicker",
			"_isInheritedChange()"
		],
		[
			"Static checkedProperty: Property\tNativeScript - Switch",
			"Static checkedProperty"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Frame",
			"_onAttached(${1:context: any})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - WebView",
			"_unregisterAllAnimations()"
		],
		[
			"Static loadStartedEvent: string\tNativeScript - WebView",
			"Static loadStartedEvent"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Frame",
			"Static cssClassProperty"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - WebView",
			"getViewById<T>(${1:id: string})"
		],
		[
			"unbind( property: string ): any\tNativeScript - WebView",
			"unbind(${1:property: string})"
		],
		[
			"propertyName: string\tNativeScript - PropertyChangeData",
			"propertyName"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Image",
			"isUserInteractionEnabled"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Frame",
			"isUserInteractionEnabled"
		],
		[
			"cssClasses: Setstring\tNativeScript - ActivityIndicator",
			"cssClasses"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Image",
			"Static cssClassProperty"
		],
		[
			"_removeView( view: View ): any\tNativeScript - ListView",
			"_removeView(${1:view: View})"
		],
		[
			"paddingRight: number\tNativeScript - ProxyViewContainer",
			"paddingRight"
		],
		[
			"_removeView( view: View ): any\tNativeScript - TextBase",
			"_removeView(${1:view: View})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Image",
			"_getCurrentLayoutBounds()"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Image",
			"_onAttached(${1:context: any})"
		],
		[
			"fromPath( path: string ): Folder\tNativeScript - Folder",
			"fromPath(${1:path: string})"
		],
		[
			"Static classNameProperty: Property\tNativeScript - Page",
			"Static classNameProperty"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - Page",
			"Static isEnabledProperty"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - ListView",
			"_getNativeViewsCount()"
		],
		[
			"Static navigatingFromEvent: string\tNativeScript - Page",
			"Static navigatingFromEvent"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Page",
			"Static propertyChangeEvent"
		],
		[
			"Static showingModallyEvent: string\tNativeScript - Page",
			"Static showingModallyEvent"
		],
		[
			"marginBottom: number\tNativeScript - ProxyViewContainer",
			"marginBottom"
		],
		[
			"Static itemsProperty: Property\tNativeScript - ListView",
			"Static itemsProperty"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - TextBase",
			"_getNativeViewsCount()"
		],
		[
			"credentials: RequestCredentials\tNativeScript - Request",
			"credentials"
		],
		[
			"_updateLayout(): void\tNativeScript - ActivityIndicator",
			"_updateLayout()"
		],
		[
			"getActualSize(): Size\tNativeScript - ActivityIndicator",
			"getActualSize()"
		],
		[
			"requestLayout(): void\tNativeScript - ActivityIndicator",
			"requestLayout()"
		],
		[
			"SeaShell: any\tNativeScript - Module color/known-colors",
			"SeaShell"
		],
		[
			"navigationQueueIsEmpty(): boolean\tNativeScript - Frame",
			"navigationQueueIsEmpty()"
		],
		[
			"SeaGreen: any\tNativeScript - Module color/known-colors",
			"SeaGreen"
		],
		[
			"formattedText: FormattedString\tNativeScript - TextBase",
			"formattedText"
		],
		[
			"Static itemsProperty: Property\tNativeScript - Repeater",
			"Static itemsProperty"
		],
		[
			"borderRadius: number\tNativeScript - ProxyViewContainer",
			"borderRadius"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Repeater",
			"_getNativeViewsCount()"
		],
		[
			"Moccasin: any\tNativeScript - Module color/known-colors",
			"Moccasin"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - ListPicker",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - ListPicker",
			"getLocationInWindow()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Repeater",
			"_removeView(${1:view: View})"
		],
		[
			"isLayoutValid: boolean\tNativeScript - EditableTextBase",
			"isLayoutValid"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - TimePicker",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - TimePicker",
			"getLocationInWindow()"
		],
		[
			"Lavender: any\tNativeScript - Module color/known-colors",
			"Lavender"
		],
		[
			"new Border( json?: any ): Border\tNativeScript - Border",
			"new Border(${1:json?: any})"
		],
		[
			"unbind( property: string ): any\tNativeScript - TabView",
			"unbind(${1:property: string})"
		],
		[
			"setUTCDate( date: number ): number\tNativeScript - Date",
			"setUTCDate(${1:date: number})"
		],
		[
			"HoneyDew: any\tNativeScript - Module color/known-colors",
			"HoneyDew"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Label",
			"isUserInteractionEnabled"
		],
		[
			"Static unloadedEvent: string\tNativeScript - ListPicker",
			"Static unloadedEvent"
		],
		[
			"backgroundColor: Color\tNativeScript - EditableTextBase",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - EditableTextBase",
			"automationText"
		],
		[
			"_gestureObservers: any\tNativeScript - EditableTextBase",
			"_gestureObservers"
		],
		[
			"DeepPink: any\tNativeScript - Module color/known-colors",
			"DeepPink"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - TabView",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_childrenCount: number\tNativeScript - EditableTextBase",
			"_childrenCount"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - TabView",
			"_unregisterAllAnimations()"
		],
		[
			"neutralButtonText: string\tNativeScript - PromptOptions",
			"neutralButtonText"
		],
		[
			"DarkGray: any\tNativeScript - Module color/known-colors",
			"DarkGray"
		],
		[
			"DarkCyan: any\tNativeScript - Module color/known-colors",
			"DarkCyan"
		],
		[
			"DarkBlue: any\tNativeScript - Module color/known-colors",
			"DarkBlue"
		],
		[
			"Cornsilk: any\tNativeScript - Module color/known-colors",
			"Cornsilk"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - AndroidFrame",
			"notify<T>(${1:data: T})"
		],
		[
			"new ListPicker(): ListPicker\tNativeScript - ListPicker",
			"new ListPicker()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Border",
			"_emit(${1:eventNames: string})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - HtmlView",
			"_removeView(${1:view: View})"
		],
		[
			"handled: boolean\tNativeScript - AndroidOptionEventData",
			"handled"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Label",
			"Static cssClassProperty"
		],
		[
			"Static textWrapProperty: Property\tNativeScript - Label",
			"Static textWrapProperty"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - WrapLayout",
			"getLocationOnScreen()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - HtmlView",
			"_getNativeViewsCount()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - WrapLayout",
			"getLocationInWindow()"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Label",
			"_getCurrentLayoutBounds()"
		],
		[
			"desiredAccuracy: number\tNativeScript - LocationManager",
			"desiredAccuracy"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Label",
			"_onAttached(${1:context: any})"
		],
		[
			"addChild( view: View ): void\tNativeScript - WrapLayout",
			"addChild(${1:view: View})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Border",
			"_shouldApplyStyleHandlers()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - ScrollView",
			"Static unloadedEvent"
		],
		[
			"cancelButtonText: string\tNativeScript - ConfirmOptions",
			"cancelButtonText"
		],
		[
			"Static unloadedEvent: string\tNativeScript - WrapLayout",
			"Static unloadedEvent"
		],
		[
			"___filename: string\tNativeScript - Module NativeScript",
			"___filename"
		],
		[
			"ios: iOSLocationManager\tNativeScript - LocationManager",
			"ios"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - DatePicker",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - DatePicker",
			"getLocationInWindow()"
		],
		[
			"send( data?: any ): void\tNativeScript - XMLHttpRequest",
			"send(${1:data?: any})"
		],
		[
			"withCredentials: boolean\tNativeScript - XMLHttpRequest",
			"withCredentials"
		],
		[
			"prototype: Function\tNativeScript - FunctionConstructor",
			"prototype"
		],
		[
			"HEADERS_RECEIVED: number\tNativeScript - XMLHttpRequest",
			"HEADERS_RECEIVED"
		],
		[
			"delete( key: K ): boolean\tNativeScript - WeakMap<K, V>",
			"delete(${1:key: K})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - ScrollView",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - ScrollView",
			"getLocationOnScreen()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - DatePicker",
			"Static unloadedEvent"
		],
		[
			"Static unloadedEvent: string\tNativeScript - TimePicker",
			"Static unloadedEvent"
		],
		[
			"prototype: URIError\tNativeScript - URIErrorConstructor",
			"prototype"
		],
		[
			"Static dayProperty: Property\tNativeScript - DatePicker",
			"Static dayProperty"
		],
		[
			"toString(): string\tNativeScript - TemplateStringsArray",
			"toString()"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Switch",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Progress",
			"_removeView(${1:view: View})"
		],
		[
			"isBackNavigation: boolean\tNativeScript - NavigatedData",
			"isBackNavigation"
		],
		[
			"new Button( json?: any ): Button\tNativeScript - Button",
			"new Button(${1:json?: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Switch",
			"_emit(${1:eventNames: string})"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Frame",
			"_getCurrentLayoutBounds()"
		],
		[
			"Static textProperty: Property\tNativeScript - TextField",
			"Static textProperty"
		],
		[
			"search( regexp: RegExp ): number\tNativeScript - String",
			"search(${1:regexp: RegExp})"
		],
		[
			"getItems(): ArrayActionItem\tNativeScript - ActionItems",
			"getItems()"
		],
		[
			"search( regexp: string ): number\tNativeScript - String",
			"search(${1:regexp: string})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Progress",
			"_getNativeViewsCount()"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - StackLayout",
			"getMeasuredHeight()"
		],
		[
			"new Switch( json?: any ): Switch\tNativeScript - Switch",
			"new Switch(${1:json?: any})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Placeholder",
			"cssPseudoClasses"
		],
		[
			"get( name: string ): any\tNativeScript - AbsoluteLayout",
			"get(${1:name: string})"
		],
		[
			"horizontalAlignment: string\tNativeScript - Placeholder",
			"horizontalAlignment"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - StackLayout",
			"_removeFromSuperview()"
		],
		[
			"state: number\tNativeScript - GestureEventDataWithState",
			"state"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Button",
			"_emit(${1:eventNames: string})"
		],
		[
			"Static valueProperty: Property\tNativeScript - Progress",
			"Static valueProperty"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Button",
			"_shouldApplyStyleHandlers()"
		],
		[
			"Array: ArrayConstructor\tNativeScript - RegExpExecArray",
			"Array"
		],
		[
			"Static textProperty: Property\tNativeScript - SearchBar",
			"Static textProperty"
		],
		[
			"Static idProperty: Property\tNativeScript - StackLayout",
			"Static idProperty"
		],
		[
			"widthPercent: number\tNativeScript - CommonLayoutParams",
			"widthPercent"
		],
		[
			"max( ...values: number[] ): number\tNativeScript - Math",
			"max(${1:...values: number[]})"
		],
		[
			"min( ...values: number[] ): number\tNativeScript - Math",
			"min(${1:...values: number[]})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - SearchBar",
			"_isInheritedChange()"
		],
		[
			"bottomMargin: number\tNativeScript - CommonLayoutParams",
			"bottomMargin"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - Span",
			"Static propertyChangeEvent"
		],
		[
			"defaultPrevented: boolean\tNativeScript - ProgressEvent",
			"defaultPrevented"
		],
		[
			"horizontalAlignment: string\tNativeScript - StackLayout",
			"horizontalAlignment"
		],
		[
			"lengthComputable: boolean\tNativeScript - ProgressEvent",
			"lengthComputable"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - StackLayout",
			"cssPseudoClasses"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - ContentView",
			"cssPseudoClasses"
		],
		[
			"horizontalAlignment: string\tNativeScript - ContentView",
			"horizontalAlignment"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - SearchBar",
			"_syncNativeProperties()"
		],
		[
			"Static idProperty: Property\tNativeScript - Placeholder",
			"Static idProperty"
		],
		[
			"new DatePicker(): DatePicker\tNativeScript - DatePicker",
			"new DatePicker()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - TextView",
			"_removeView(${1:view: View})"
		],
		[
			"lengthComputable: boolean\tNativeScript - ProgressEvent",
			"lengthComputable"
		],
		[
			"defaultPrevented: boolean\tNativeScript - ProgressEvent",
			"defaultPrevented"
		],
		[
			"withFontSize( size: number ): Font\tNativeScript - Font",
			"withFontSize(${1:size: number})"
		],
		[
			"getUIFont( defaultFont: any ): any\tNativeScript - Font",
			"getUIFont(${1:defaultFont: any})"
		],
		[
			"type: \"\"\"*\"\"#\"\".\"\":\"\"[]\"\tNativeScript - SimpleSelector",
			"type"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - TextField",
			"_isInheritedChange()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - LayoutBase",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - LayoutBase",
			"getLocationInWindow()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - DockLayout",
			"Static unloadedEvent"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - TextView",
			"_getNativeViewsCount()"
		],
		[
			"addChild( view: View ): void\tNativeScript - LayoutBase",
			"addChild(${1:view: View})"
		],
		[
			"addChild( view: View ): void\tNativeScript - DockLayout",
			"addChild(${1:view: View})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - DockLayout",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - DockLayout",
			"getLocationOnScreen()"
		],
		[
			"Static idProperty: Property\tNativeScript - ContentView",
			"Static idProperty"
		],
		[
			"Array: ArrayConstructor\tNativeScript - RegExpExecArray",
			"Array"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - ContentView",
			"_removeFromSuperview()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - LayoutBase",
			"Static unloadedEvent"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - ActionBar",
			"_syncNativeProperties()"
		],
		[
			"min( ...values: number[] ): number\tNativeScript - Math",
			"min(${1:...values: number[]})"
		],
		[
			"max( ...values: number[] ): number\tNativeScript - Math",
			"max(${1:...values: number[]})"
		],
		[
			"search( regexp: string ): number\tNativeScript - String",
			"search(${1:regexp: string})"
		],
		[
			"search( regexp: RegExp ): number\tNativeScript - String",
			"search(${1:regexp: RegExp})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Placeholder",
			"_removeFromSuperview()"
		],
		[
			"Static loadedEvent: string\tNativeScript - SegmentedBar",
			"Static loadedEvent"
		],
		[
			"Static propertyChangeEvent: string\tNativeScript - View",
			"Static propertyChangeEvent"
		],
		[
			"Static isEnabledProperty: Property\tNativeScript - View",
			"Static isEnabledProperty"
		],
		[
			"Static classNameProperty: Property\tNativeScript - View",
			"Static classNameProperty"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - ContentView",
			"getMeasuredHeight()"
		],
		[
			"toString(): string\tNativeScript - TemplateStringsArray",
			"toString()"
		],
		[
			"prototype: Function\tNativeScript - FunctionConstructor",
			"prototype"
		],
		[
			"prototype: URIError\tNativeScript - URIErrorConstructor",
			"prototype"
		],
		[
			"eventName: string\tNativeScript - TouchGestureEventData",
			"eventName"
		],
		[
			"start(): any\tNativeScript - ControlStateChangeListener",
			"start()"
		],
		[
			"affectsLayout: boolean\tNativeScript - PropertyMetadata",
			"affectsLayout"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - SegmentedBar",
			"getMeasuredWidth()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - TextField",
			"_syncNativeProperties()"
		],
		[
			"Static rowProperty: Property\tNativeScript - GridLayout",
			"Static rowProperty"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Layout",
			"_shouldApplyStyleHandlers()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - GridLayout",
			"Static unloadedEvent"
		],
		[
			"eventName: string\tNativeScript - SwipeGestureEventData",
			"eventName"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - SegmentedBar",
			"notify<T>(${1:data: T})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - ActionBar",
			"_isInheritedChange()"
		],
		[
			"addChild( view: View ): void\tNativeScript - GridLayout",
			"addChild(${1:view: View})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - GridLayout",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - GridLayout",
			"getLocationOnScreen()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Layout",
			"_emit(${1:eventNames: string})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Slider",
			"_shouldApplyStyleHandlers()"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Placeholder",
			"getMeasuredHeight()"
		],
		[
			"affectsLayout: boolean\tNativeScript - PropertyMetadata",
			"affectsLayout"
		],
		[
			"getRow( view: View ): number\tNativeScript - GridLayout",
			"getRow(${1:view: View})"
		],
		[
			"setUTCDate( date: number ): number\tNativeScript - Date",
			"setUTCDate(${1:date: number})"
		],
		[
			"isLayoutValid: boolean\tNativeScript - CustomLayoutView",
			"isLayoutValid"
		],
		[
			"new Slider( json?: any ): Slider\tNativeScript - Slider",
			"new Slider(${1:json?: any})"
		],
		[
			"delete( key: K ): boolean\tNativeScript - WeakMap<K, V>",
			"delete(${1:key: K})"
		],
		[
			"formattedText: FormattedString\tNativeScript - TextView",
			"formattedText"
		],
		[
			"_childrenCount: number\tNativeScript - CustomLayoutView",
			"_childrenCount"
		],
		[
			"HEADERS_RECEIVED: number\tNativeScript - XMLHttpRequest",
			"HEADERS_RECEIVED"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Slider",
			"_emit(${1:eventNames: string})"
		],
		[
			"_gestureObservers: any\tNativeScript - CustomLayoutView",
			"_gestureObservers"
		],
		[
			"automationText: string\tNativeScript - CustomLayoutView",
			"automationText"
		],
		[
			"backgroundColor: Color\tNativeScript - CustomLayoutView",
			"backgroundColor"
		],
		[
			"withCredentials: boolean\tNativeScript - XMLHttpRequest",
			"withCredentials"
		],
		[
			"autocapitalizationType: string\tNativeScript - TextView",
			"autocapitalizationType"
		],
		[
			"send( data?: any ): void\tNativeScript - XMLHttpRequest",
			"send(${1:data?: any})"
		],
		[
			"credentials: RequestCredentials\tNativeScript - Request",
			"credentials"
		],
		[
			"new Layout( json?: any ): Layout\tNativeScript - Layout",
			"new Layout(${1:json?: any})"
		],
		[
			"eventName: string\tNativeScript - PinchGestureEventData",
			"eventName"
		],
		[
			"test( string: string ): boolean\tNativeScript - RegExp",
			"test(${1:string: string})"
		],
		[
			"Fuchsia: any\tNativeScript - Module color/known-colors",
			"Fuchsia"
		],
		[
			"ident: string\tNativeScript - SimpleIdentifierSelector",
			"ident"
		],
		[
			"bindingContext: any\tNativeScript - ProxyViewContainer",
			"bindingContext"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - Page",
			"_onAttached(${1:context: any})"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - ContentView",
			"getMeasuredWidth()"
		],
		[
			"Static idProperty: Property\tNativeScript - ListPicker",
			"Static idProperty"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - TimePicker",
			"getMeasuredHeight()"
		],
		[
			"splice( start: number ): T\tNativeScript - Array<T, T>",
			"splice(${1:start: number})"
		],
		[
			"horizontalAlignment: string\tNativeScript - LayoutBase",
			"horizontalAlignment"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - StackLayout",
			"getMeasuredWidth()"
		],
		[
			"Static idProperty: Property\tNativeScript - DockLayout",
			"Static idProperty"
		],
		[
			"rightMargin: number\tNativeScript - CommonLayoutParams",
			"rightMargin"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - TextBase",
			"_isInheritedChange()"
		],
		[
			"horizontalAlignment: string\tNativeScript - DatePicker",
			"horizontalAlignment"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - LayoutBase",
			"getMeasuredHeight()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - StackLayout",
			"notify<T>(${1:data: T})"
		],
		[
			"_isVisible: boolean\tNativeScript - ProxyViewContainer",
			"_isVisible"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Slider",
			"_unregisterAllAnimations()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Border",
			"_unregisterAllAnimations()"
		],
		[
			"_updateLayout(): void\tNativeScript - EditableTextBase",
			"_updateLayout()"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - View",
			"Static cssClassProperty"
		],
		[
			"keepAspectRatio: boolean\tNativeScript - CameraOptions",
			"keepAspectRatio"
		],
		[
			"HotPink: any\tNativeScript - Module color/known-colors",
			"HotPink"
		],
		[
			"getColumns(): ArrayItemSpec\tNativeScript - GridLayout",
			"getColumns()"
		],
		[
			"neutralButtonText: string\tNativeScript - LoginOptions",
			"neutralButtonText"
		],
		[
			"getActualSize(): Size\tNativeScript - EditableTextBase",
			"getActualSize()"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Float64Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"addCss( cssString: string ): void\tNativeScript - Page",
			"addCss(${1:cssString: string})"
		],
		[
			"version: string\tNativeScript - Module js-libs/esprima",
			"version"
		],
		[
			"Static idProperty: Property\tNativeScript - ScrollView",
			"Static idProperty"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Image",
			"_shouldApplyStyleHandlers()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - WrapLayout",
			"_removeFromSuperview()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - HtmlView",
			"_syncNativeProperties()"
		],
		[
			"cssClasses: Setstring\tNativeScript - EditableTextBase",
			"cssClasses"
		],
		[
			"enumerable: boolean\tNativeScript - PropertyDescriptor",
			"enumerable"
		],
		[
			"unbind( property: string ): any\tNativeScript - Switch",
			"unbind(${1:property: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Repeater",
			"_syncNativeProperties()"
		],
		[
			"requestLayout(): void\tNativeScript - EditableTextBase",
			"requestLayout()"
		],
		[
			"Static loadedEvent: string\tNativeScript - ContentView",
			"Static loadedEvent"
		],
		[
			"_updateLayout(): void\tNativeScript - CustomLayoutView",
			"_updateLayout()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - TimePicker",
			"_removeFromSuperview()"
		],
		[
			"unbind( property: string ): any\tNativeScript - Button",
			"unbind(${1:property: string})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - ListView",
			"_isInheritedChange()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - HtmlView",
			"_isInheritedChange()"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - View",
			"isUserInteractionEnabled"
		],
		[
			"TabView( json?: any ): TabView\tNativeScript - TabView",
			"TabView(${1:json?: any})"
		],
		[
			"Static idProperty: Property\tNativeScript - GridLayout",
			"Static idProperty"
		],
		[
			"Static unloadedEvent: string\tNativeScript - SearchBar",
			"Static unloadedEvent"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Image",
			"_emit(${1:eventNames: string})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - GridLayout",
			"_removeFromSuperview()"
		],
		[
			"marginBottom: number\tNativeScript - ActivityIndicator",
			"marginBottom"
		],
		[
			"Static stretchProperty: Property\tNativeScript - Image",
			"Static stretchProperty"
		],
		[
			"Static loadedEvent: string\tNativeScript - StackLayout",
			"Static loadedEvent"
		],
		[
			"Static htmlProperty: Property\tNativeScript - HtmlView",
			"Static htmlProperty"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Label",
			"_shouldApplyStyleHandlers()"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Button",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - ListPicker",
			"_removeFromSuperview()"
		],
		[
			"test( string: string ): boolean\tNativeScript - RegExp",
			"test(${1:string: string})"
		],
		[
			"removeChild( view: View ): void\tNativeScript - Layout",
			"removeChild(${1:view: View})"
		],
		[
			"horizontalAlignment: string\tNativeScript - DockLayout",
			"horizontalAlignment"
		],
		[
			"updateDistance: number\tNativeScript - LocationManager",
			"updateDistance"
		],
		[
			"new Color( argb: number ): Color\tNativeScript - Color",
			"new Color(${1:argb: number})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Progress",
			"_syncNativeProperties()"
		],
		[
			"reverse(): string\tNativeScript - TemplateStringsArray",
			"reverse()"
		],
		[
			"Style( parentView: View ): Style\tNativeScript - Style",
			"Style(${1:parentView: View})"
		],
		[
			"requestLayout(): void\tNativeScript - CustomLayoutView",
			"requestLayout()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - ListView",
			"_syncNativeProperties()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Switch",
			"_unregisterAllAnimations()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - TextBase",
			"_syncNativeProperties()"
		],
		[
			"Magenta: any\tNativeScript - Module color/known-colors",
			"Magenta"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - DockLayout",
			"cssPseudoClasses"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ProxyObject",
			"notify<T>(${1:data: T})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Label",
			"_emit(${1:eventNames: string})"
		],
		[
			"_onContextChanged(): void\tNativeScript - SegmentedBar",
			"_onContextChanged()"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Float64Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"Static idProperty: Property\tNativeScript - TimePicker",
			"Static idProperty"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Button",
			"_unregisterAllAnimations()"
		],
		[
			"Static Comment: string\tNativeScript - ParserEventType",
			"Static Comment"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - SegmentedBar",
			"isLayoutRequired"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - GridLayout",
			"getMeasuredHeight()"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - WrapLayout",
			"getMeasuredHeight()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - TextField",
			"Static unloadedEvent"
		],
		[
			"Static itemsProperty: Property\tNativeScript - TabView",
			"Static itemsProperty"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Progress",
			"_isInheritedChange()"
		],
		[
			"backgroundColor: Color\tNativeScript - FormattedString",
			"backgroundColor"
		],
		[
			"Static idProperty: Property\tNativeScript - DatePicker",
			"Static idProperty"
		],
		[
			"affectsStyle: boolean\tNativeScript - PropertyMetadata",
			"affectsStyle"
		],
		[
			"horizontalAlignment: string\tNativeScript - TimePicker",
			"horizontalAlignment"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - TimePicker",
			"cssPseudoClasses"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - ListPicker",
			"getMeasuredHeight()"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - View",
			"_getCurrentLayoutBounds()"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - WrapLayout",
			"cssPseudoClasses"
		],
		[
			"android: any\tNativeScript - GestureEventDataWithState",
			"android"
		],
		[
			"fontAttributes: number\tNativeScript - FormattedString",
			"fontAttributes"
		],
		[
			"freeze<T>( o: T ): T\tNativeScript - ObjectConstructor",
			"freeze<T>(${1:o: T})"
		],
		[
			"borderRadius: number\tNativeScript - ActivityIndicator",
			"borderRadius"
		],
		[
			"unbind( property: string ): any\tNativeScript - Layout",
			"unbind(${1:property: string})"
		],
		[
			"foregroundColor: Color\tNativeScript - FormattedString",
			"foregroundColor"
		],
		[
			"horizontalAlignment: string\tNativeScript - WrapLayout",
			"horizontalAlignment"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - ScrollView",
			"getMeasuredHeight()"
		],
		[
			"object: Observable\tNativeScript - PanGestureEventData",
			"object"
		],
		[
			"unbind( property: string ): any\tNativeScript - Border",
			"unbind(${1:property: string})"
		],
		[
			"cancelButtonText: string\tNativeScript - PromptOptions",
			"cancelButtonText"
		],
		[
			"unwrap( value: any ): any\tNativeScript - WrappedValue",
			"unwrap(${1:value: any})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Cache",
			"_emit(${1:eventNames: string})"
		],
		[
			"transition: NavigationTransition\tNativeScript - Frame",
			"transition"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - SearchBar",
			"getLocationOnScreen()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Repeater",
			"_isInheritedChange()"
		],
		[
			"createDump( obj: any ): string\tNativeScript - Console",
			"createDump(${1:obj: any})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - SearchBar",
			"getLocationInWindow()"
		],
		[
			"duration: number\tNativeScript - KeyframeAnimationInfo",
			"duration"
		],
		[
			"affectsStyle: boolean\tNativeScript - PropertyMetadata",
			"affectsStyle"
		],
		[
			"type: GestureTypes\tNativeScript - PanGestureEventData",
			"type"
		],
		[
			"horizontalAlignment: string\tNativeScript - ScrollView",
			"horizontalAlignment"
		],
		[
			"Style( parentView: View ): Style\tNativeScript - Style",
			"Style(${1:parentView: View})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - LayoutBase",
			"_removeFromSuperview()"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Slider",
			"getViewById<T>(${1:id: string})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - ScrollView",
			"cssPseudoClasses"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - TextView",
			"_syncNativeProperties()"
		],
		[
			"enumerable: boolean\tNativeScript - PropertyDescriptor",
			"enumerable"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - DockLayout",
			"getMeasuredHeight()"
		],
		[
			"OldLace: any\tNativeScript - Module color/known-colors",
			"OldLace"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Style",
			"_emit(${1:eventNames: string})"
		],
		[
			"returnKeyType: string\tNativeScript - EditableTextBase",
			"returnKeyType"
		],
		[
			"position: string\tNativeScript - IOSActionItemSettings",
			"position"
		],
		[
			"Static loadedEvent: string\tNativeScript - Placeholder",
			"Static loadedEvent"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - DatePicker",
			"_removeFromSuperview()"
		],
		[
			"getActualSize(): Size\tNativeScript - CustomLayoutView",
			"getActualSize()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - TabViewItem",
			"notify<T>(${1:data: T})"
		],
		[
			"cssClasses: Setstring\tNativeScript - CustomLayoutView",
			"cssClasses"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - TabView",
			"_getNativeViewsCount()"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Frame",
			"_emit(${1:eventNames: string})"
		],
		[
			"verticalAlignment: string\tNativeScript - SegmentedBar",
			"verticalAlignment"
		],
		[
			"changeMap: ChangeMap\tNativeScript - SelectorsMatch<T>",
			"changeMap"
		],
		[
			"_removeView( view: View ): any\tNativeScript - WebView",
			"_removeView(${1:view: View})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - TextView",
			"_isInheritedChange()"
		],
		[
			"concat( ...items: T[] ): T\tNativeScript - Array<T, T>",
			"concat(${1:...items: T[]})"
		],
		[
			"reverse(): string\tNativeScript - TemplateStringsArray",
			"reverse()"
		],
		[
			"createDump( obj: any ): string\tNativeScript - Console",
			"createDump(${1:obj: any})"
		],
		[
			"set( v: any ): void\tNativeScript - PropertyDescriptor",
			"set(${1:v: any})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - TabView",
			"_removeView(${1:view: View})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Layout",
			"_unregisterAllAnimations()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - ActionBar",
			"getLocationOnScreen()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - WebView",
			"_getNativeViewsCount()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - ActionBar",
			"getLocationInWindow()"
		],
		[
			"Crimson: any\tNativeScript - Module color/known-colors",
			"Crimson"
		],
		[
			"Static textProperty: Property\tNativeScript - TextView",
			"Static textProperty"
		],
		[
			"isUserInteractionEnabled: boolean\tNativeScript - Page",
			"isUserInteractionEnabled"
		],
		[
			"unbind( property: string ): any\tNativeScript - Slider",
			"unbind(${1:property: string})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Style",
			"_emit(${1:eventNames: string})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Layout",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Frame",
			"_shouldApplyStyleHandlers()"
		],
		[
			"splice( start: number ): T\tNativeScript - Array<T, T>",
			"splice(${1:start: number})"
		],
		[
			"registerHandlers(): any\tNativeScript - TextBaseStyler",
			"registerHandlers()"
		],
		[
			"stop(): any\tNativeScript - ControlStateChangeListener",
			"stop()"
		],
		[
			"Static navigationTypes: string\tNativeScript - WebView",
			"Static navigationTypes"
		],
		[
			"iterations: number\tNativeScript - AnimationDefinition",
			"iterations"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Float32Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"horizontalAlignment: string\tNativeScript - GridLayout",
			"horizontalAlignment"
		],
		[
			"stopImmediatePropagation(): void\tNativeScript - Event",
			"stopImmediatePropagation()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - DockLayout",
			"_removeFromSuperview()"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - ListPicker",
			"cssPseudoClasses"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - GridLayout",
			"cssPseudoClasses"
		],
		[
			"stopImmediatePropagation(): void\tNativeScript - Event",
			"stopImmediatePropagation()"
		],
		[
			"horizontalAlignment: string\tNativeScript - ListPicker",
			"horizontalAlignment"
		],
		[
			"Static idProperty: Property\tNativeScript - LayoutBase",
			"Static idProperty"
		],
		[
			"textAlignment: string\tNativeScript - EditableTextBase",
			"textAlignment"
		],
		[
			"___dirname: string\tNativeScript - Module NativeScript",
			"___dirname"
		],
		[
			"Static idProperty: Property\tNativeScript - WrapLayout",
			"Static idProperty"
		],
		[
			"DarkRed: any\tNativeScript - Module color/known-colors",
			"DarkRed"
		],
		[
			"WebView( json?: any ): WebView\tNativeScript - WebView",
			"WebView(${1:json?: any})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ContentView",
			"notify<T>(${1:data: T})"
		],
		[
			"exists( path: string ): boolean\tNativeScript - Folder",
			"exists(${1:path: string})"
		],
		[
			"SkyBlue: any\tNativeScript - Module color/known-colors",
			"SkyBlue"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - DatePicker",
			"cssPseudoClasses"
		],
		[
			"Static cssClassProperty: Property\tNativeScript - Page",
			"Static cssClassProperty"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - DatePicker",
			"getMeasuredHeight()"
		],
		[
			"paddingLeft: number\tNativeScript - ProxyViewContainer",
			"paddingLeft"
		],
		[
			"Static navigatedFromEvent: string\tNativeScript - Page",
			"Static navigatedFromEvent"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Placeholder",
			"getMeasuredWidth()"
		],
		[
			"_onAttached( context: any ): void\tNativeScript - View",
			"_onAttached(${1:context: any})"
		],
		[
			"state: number\tNativeScript - RotationGestureEventData",
			"state"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - ScrollView",
			"_removeFromSuperview()"
		],
		[
			"marginRight: number\tNativeScript - ProxyViewContainer",
			"marginRight"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Placeholder",
			"notify<T>(${1:data: T})"
		],
		[
			"concat( ...items: T[] ): T\tNativeScript - Array<T, T>",
			"concat(${1:...items: T[]})"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Float32Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"set( v: any ): void\tNativeScript - PropertyDescriptor",
			"set(${1:v: any})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - TextField",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - TextField",
			"getLocationOnScreen()"
		],
		[
			"Error: ErrorConstructor\tNativeScript - ReferenceError",
			"Error"
		],
		[
			"Static unloadedEvent: string\tNativeScript - ActionBar",
			"Static unloadedEvent"
		],
		[
			"cancelButtonText: string\tNativeScript - ActionOptions",
			"cancelButtonText"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Switch",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Static textProperty: Property\tNativeScript - TextBase",
			"Static textProperty"
		],
		[
			"backgroundImage: string\tNativeScript - AbsoluteLayout",
			"backgroundImage"
		],
		[
			"Thistle: any\tNativeScript - Module color/known-colors",
			"Thistle"
		],
		[
			"DimGray: any\tNativeScript - Module color/known-colors",
			"DimGray"
		],
		[
			"freeze<T>( o: T ): T\tNativeScript - ObjectConstructor",
			"freeze<T>(${1:o: T})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - LayoutBase",
			"cssPseudoClasses"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Border",
			"getViewById<T>(${1:id: string})"
		],
		[
			"object: Observable\tNativeScript - CreateViewEventData",
			"object"
		],
		[
			"_getCurrentLayoutBounds(): object\tNativeScript - Page",
			"_getCurrentLayoutBounds()"
		],
		[
			"borderWidth: number\tNativeScript - ProxyViewContainer",
			"borderWidth"
		],
		[
			"getChildrenCount(): number\tNativeScript - StackLayout",
			"getChildrenCount()"
		],
		[
			"Error: ErrorConstructor\tNativeScript - ReferenceError",
			"Error"
		],
		[
			"eventName: string\tNativeScript - CreateViewEventData",
			"eventName"
		],
		[
			"getDuration(): number\tNativeScript - SlideTransition",
			"getDuration()"
		],
		[
			"Static valueProperty: Property\tNativeScript - Slider",
			"Static valueProperty"
		],
		[
			"Static idProperty: Property\tNativeScript - ActionBar",
			"Static idProperty"
		],
		[
			"borderRadius: number\tNativeScript - CustomLayoutView",
			"borderRadius"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Slider",
			"_getNativeViewsCount()"
		],
		[
			"prototype: Boolean\tNativeScript - BooleanConstructor",
			"prototype"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Uint8ClampedArray",
			"buffer"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - TextField",
			"getMeasuredHeight()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Slider",
			"_removeView(${1:view: View})"
		],
		[
			"marginBottom: number\tNativeScript - CustomLayoutView",
			"marginBottom"
		],
		[
			"inheritable: boolean\tNativeScript - PropertyMetadata",
			"inheritable"
		],
		[
			"property: Property\tNativeScript - PropertyChangeData",
			"property"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - GridLayout",
			"notify<T>(${1:data: T})"
		],
		[
			"android: any\tNativeScript - RotationGestureEventData",
			"android"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - GridLayout",
			"getMeasuredWidth()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Layout",
			"_getNativeViewsCount()"
		],
		[
			"getChildrenCount(): number\tNativeScript - GridLayout",
			"getChildrenCount()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Layout",
			"_removeView(${1:view: View})"
		],
		[
			"object: Observable\tNativeScript - PropertyChangeData",
			"object"
		],
		[
			"currentTarget: EventTarget\tNativeScript - ErrorEvent",
			"currentTarget"
		],
		[
			"inheritable: boolean\tNativeScript - PropertyMetadata",
			"inheritable"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - ActionBar",
			"_removeFromSuperview()"
		],
		[
			"Static loadedEvent: string\tNativeScript - GridLayout",
			"Static loadedEvent"
		],
		[
			"get( name: string ): any\tNativeScript - SegmentedBar",
			"get(${1:name: string})"
		],
		[
			"typeName: string\tNativeScript - DependencyObservable",
			"typeName"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint32Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"targetProperty: string\tNativeScript - BindingOptions",
			"targetProperty"
		],
		[
			"toLocaleString(): string\tNativeScript - Float32Array",
			"toLocaleString()"
		],
		[
			"sourceProperty: string\tNativeScript - BindingOptions",
			"sourceProperty"
		],
		[
			"toLocaleString(): string\tNativeScript - Float64Array",
			"toLocaleString()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - TextView",
			"Static unloadedEvent"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint16Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"_onContextChanged(): void\tNativeScript - Placeholder",
			"_onContextChanged()"
		],
		[
			"concat<U>( ...items: U[] ): T\tNativeScript - List<T>",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"horizontalAlignment: string\tNativeScript - ActionBar",
			"horizontalAlignment"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - TextField",
			"_removeFromSuperview()"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - ActionBar",
			"getMeasuredHeight()"
		],
		[
			"push( ...items: T[] ): number\tNativeScript - List<T>",
			"push(${1:...items: T[]})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - ActionBar",
			"cssPseudoClasses"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - View",
			"_emit(${1:eventNames: string})"
		],
		[
			"headers: HeaderInitobject\tNativeScript - RequestInit",
			"headers"
		],
		[
			"Static default: Background\tNativeScript - Background",
			"Static default"
		],
		[
			"Static loadedEvent: string\tNativeScript - LayoutBase",
			"Static loadedEvent"
		],
		[
			"_onContextChanged(): void\tNativeScript - ContentView",
			"_onContextChanged()"
		],
		[
			"ios: IOSActionItemSettings\tNativeScript - ActionItem",
			"ios"
		],
		[
			"repeatX: boolean\tNativeScript - BackgroundDrawParams",
			"repeatX"
		],
		[
			"repeatY: boolean\tNativeScript - BackgroundDrawParams",
			"repeatY"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - DockLayout",
			"notify<T>(${1:data: T})"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - DockLayout",
			"getMeasuredWidth()"
		],
		[
			"verticalAlignment: string\tNativeScript - ContentView",
			"verticalAlignment"
		],
		[
			"getChildrenCount(): number\tNativeScript - DockLayout",
			"getChildrenCount()"
		],
		[
			"verticalAlignment: string\tNativeScript - Placeholder",
			"verticalAlignment"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Span",
			"_emit(${1:eventNames: string})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - TextView",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - TextView",
			"getLocationOnScreen()"
		],
		[
			"getChildrenCount(): number\tNativeScript - LayoutBase",
			"getChildrenCount()"
		],
		[
			"Static loadedEvent: string\tNativeScript - DockLayout",
			"Static loadedEvent"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - View",
			"_shouldApplyStyleHandlers()"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - LayoutBase",
			"getMeasuredWidth()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - LayoutBase",
			"notify<T>(${1:data: T})"
		],
		[
			"CAPTURING_PHASE: number\tNativeScript - ProgressEvent",
			"CAPTURING_PHASE"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Progress",
			"Static unloadedEvent"
		],
		[
			"strikethrough: number\tNativeScript - FormattedString",
			"strikethrough"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - SearchBar",
			"getMeasuredHeight()"
		],
		[
			"stopPropagation(): void\tNativeScript - ProgressEvent",
			"stopPropagation()"
		],
		[
			"eventName: string\tNativeScript - PanGestureEventData",
			"eventName"
		],
		[
			"cancelable: boolean\tNativeScript - ProgressEventInit",
			"cancelable"
		],
		[
			"cancelable: boolean\tNativeScript - ProgressEventInit",
			"cancelable"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - ContentView",
			"isLayoutRequired"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ActionItem",
			"notify<T>(${1:data: T})"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Placeholder",
			"isLayoutRequired"
		],
		[
			"stopPropagation(): void\tNativeScript - ProgressEvent",
			"stopPropagation()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - SearchBar",
			"_removeFromSuperview()"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - StackLayout",
			"isLayoutRequired"
		],
		[
			"CAPTURING_PHASE: number\tNativeScript - ProgressEvent",
			"CAPTURING_PHASE"
		],
		[
			"leftMargin: number\tNativeScript - CommonLayoutParams",
			"leftMargin"
		],
		[
			"verticalAlignment: string\tNativeScript - StackLayout",
			"verticalAlignment"
		],
		[
			"Static idProperty: Property\tNativeScript - SearchBar",
			"Static idProperty"
		],
		[
			"push( ...items: T[] ): number\tNativeScript - List<T>",
			"push(${1:...items: T[]})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Button",
			"_removeView(${1:view: View})"
		],
		[
			"concat<U>( ...items: U[] ): T\tNativeScript - List<T>",
			"concat<U>(${1:...items: U[]})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Button",
			"_getNativeViewsCount()"
		],
		[
			"_onContextChanged(): void\tNativeScript - StackLayout",
			"_onContextChanged()"
		],
		[
			"removeChildren(): void\tNativeScript - AbsoluteLayout",
			"removeChildren()"
		],
		[
			"headers: HeaderInitobject\tNativeScript - RequestInit",
			"headers"
		],
		[
			"ensureSelectors(): boolean\tNativeScript - StyleScope",
			"ensureSelectors()"
		],
		[
			"horizontalAlignment: string\tNativeScript - SearchBar",
			"horizontalAlignment"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - SearchBar",
			"cssPseudoClasses"
		],
		[
			"formattedText: FormattedString\tNativeScript - Button",
			"formattedText"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Switch",
			"_getNativeViewsCount()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Switch",
			"_removeView(${1:view: View})"
		],
		[
			"isLayoutValid: boolean\tNativeScript - AbsoluteLayout",
			"isLayoutValid"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint16Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"Static loadedEvent: string\tNativeScript - TimePicker",
			"Static loadedEvent"
		],
		[
			"actionBar: ActionBar\tNativeScript - NavigationButton",
			"actionBar"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ScrollView",
			"notify<T>(${1:data: T})"
		],
		[
			"Static loadedEvent: string\tNativeScript - DatePicker",
			"Static loadedEvent"
		],
		[
			"duration: number\tNativeScript - NavigationTransition",
			"duration"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint32Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - ScrollView",
			"getMeasuredWidth()"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Uint8ClampedArray",
			"buffer"
		],
		[
			"toLocaleString(): string\tNativeScript - Float64Array",
			"toLocaleString()"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - DatePicker",
			"getMeasuredWidth()"
		],
		[
			"Static loadedEvent: string\tNativeScript - WrapLayout",
			"Static loadedEvent"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - DatePicker",
			"notify<T>(${1:data: T})"
		],
		[
			"clearHistory: boolean\tNativeScript - NavigationEntry",
			"clearHistory"
		],
		[
			"backgroundColor: Color\tNativeScript - AbsoluteLayout",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - AbsoluteLayout",
			"automationText"
		],
		[
			"cancelable: boolean\tNativeScript - CancelableOptions",
			"cancelable"
		],
		[
			"Static idProperty: Property\tNativeScript - TextField",
			"Static idProperty"
		],
		[
			"_gestureObservers: any\tNativeScript - AbsoluteLayout",
			"_gestureObservers"
		],
		[
			"_childrenCount: number\tNativeScript - AbsoluteLayout",
			"_childrenCount"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Progress",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Progress",
			"getLocationOnScreen()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - HtmlView",
			"Static unloadedEvent"
		],
		[
			"unbind( property: string ): any\tNativeScript - Label",
			"unbind(${1:property: string})"
		],
		[
			"cancelButtonText: string\tNativeScript - LoginOptions",
			"cancelButtonText"
		],
		[
			"Static scrollEvent: string\tNativeScript - ScrollView",
			"Static scrollEvent"
		],
		[
			"Static loadedEvent: string\tNativeScript - ScrollView",
			"Static loadedEvent"
		],
		[
			"entry: NavigationEntry\tNativeScript - BackstackEntry",
			"entry"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Label",
			"getViewById<T>(${1:id: string})"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Border",
			"_removeView(${1:view: View})"
		],
		[
			"new Color( hex: string ): Color\tNativeScript - Color",
			"new Color(${1:hex: string})"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Label",
			"_unregisterAllAnimations()"
		],
		[
			"getChildrenCount(): number\tNativeScript - WrapLayout",
			"getChildrenCount()"
		],
		[
			"get( name: string ): any\tNativeScript - AndroidFrame",
			"get(${1:name: string})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Border",
			"_getNativeViewsCount()"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - WrapLayout",
			"getMeasuredWidth()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - WrapLayout",
			"notify<T>(${1:data: T})"
		],
		[
			"equals( value: Color ): boolean\tNativeScript - Color",
			"equals(${1:value: Color})"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - HtmlView",
			"getLocationInWindow()"
		],
		[
			"toLocaleString(): string\tNativeScript - Float32Array",
			"toLocaleString()"
		],
		[
			"Bisque: any\tNativeScript - Module color/known-colors",
			"Bisque"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - TabView",
			"_isInheritedChange()"
		],
		[
			"unbind( property: string ): any\tNativeScript - Frame",
			"unbind(${1:property: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - TabView",
			"_syncNativeProperties()"
		],
		[
			"_shouldApplyStyleHandlers(): any\tNativeScript - Page",
			"_shouldApplyStyleHandlers()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - HtmlView",
			"getLocationOnScreen()"
		],
		[
			"currentTarget: EventTarget\tNativeScript - ErrorEvent",
			"currentTarget"
		],
		[
			"horizontalAlignment: string\tNativeScript - TextField",
			"horizontalAlignment"
		],
		[
			"autocorrect: boolean\tNativeScript - EditableTextBase",
			"autocorrect"
		],
		[
			"Static loadedEvent: string\tNativeScript - ListPicker",
			"Static loadedEvent"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Repeater",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Repeater",
			"getLocationInWindow()"
		],
		[
			"borderRadius: number\tNativeScript - EditableTextBase",
			"borderRadius"
		],
		[
			"Indigo: any\tNativeScript - Module color/known-colors",
			"Indigo"
		],
		[
			"Maroon: any\tNativeScript - Module color/known-colors",
			"Maroon"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - TimePicker",
			"getMeasuredWidth()"
		],
		[
			"keyboardType: string\tNativeScript - EditableTextBase",
			"keyboardType"
		],
		[
			"borderColor: Color\tNativeScript - ProxyViewContainer",
			"borderColor"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - ListPicker",
			"getMeasuredWidth()"
		],
		[
			"marginBottom: number\tNativeScript - EditableTextBase",
			"marginBottom"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ListPicker",
			"notify<T>(${1:data: T})"
		],
		[
			"_emit( eventNames: string ): any\tNativeScript - Page",
			"_emit(${1:eventNames: string})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - TextField",
			"cssPseudoClasses"
		],
		[
			"prototype: Boolean\tNativeScript - BooleanConstructor",
			"prototype"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - TimePicker",
			"notify<T>(${1:data: T})"
		],
		[
			"unbind( property: string ): any\tNativeScript - Image",
			"unbind(${1:property: string})"
		],
		[
			"Orange: any\tNativeScript - Module color/known-colors",
			"Orange"
		],
		[
			"Orchid: any\tNativeScript - Module color/known-colors",
			"Orchid"
		],
		[
			"isEnabled: boolean\tNativeScript - ProxyViewContainer",
			"isEnabled"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Repeater",
			"Static unloadedEvent"
		],
		[
			"Purple: any\tNativeScript - Module color/known-colors",
			"Purple"
		],
		[
			"Salmon: any\tNativeScript - Module color/known-colors",
			"Salmon"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Frame",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Static shownModallyEvent: string\tNativeScript - Page",
			"Static shownModallyEvent"
		],
		[
			"marginLeft: number\tNativeScript - ProxyViewContainer",
			"marginLeft"
		],
		[
			"Static navigatingToEvent: string\tNativeScript - Page",
			"Static navigatingToEvent"
		],
		[
			"itemTemplate: stringTemplate\tNativeScript - ListView",
			"itemTemplate"
		],
		[
			"Sienna: any\tNativeScript - Module color/known-colors",
			"Sienna"
		],
		[
			"Silver: any\tNativeScript - Module color/known-colors",
			"Silver"
		],
		[
			"itemTemplate: stringTemplate\tNativeScript - Repeater",
			"itemTemplate"
		],
		[
			"getDuration(): number\tNativeScript - SlideTransition",
			"getDuration()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - TextBase",
			"Static unloadedEvent"
		],
		[
			"Tomato: any\tNativeScript - Module color/known-colors",
			"Tomato"
		],
		[
			"Violet: any\tNativeScript - Module color/known-colors",
			"Violet"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Image",
			"getViewById<T>(${1:id: string})"
		],
		[
			"Static unloadedEvent: string\tNativeScript - ListView",
			"Static unloadedEvent"
		],
		[
			"paddingTop: number\tNativeScript - ProxyViewContainer",
			"paddingTop"
		],
		[
			"Yellow: any\tNativeScript - Module color/known-colors",
			"Yellow"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Image",
			"_unregisterAllAnimations()"
		],
		[
			"translateX: number\tNativeScript - ProxyViewContainer",
			"translateX"
		],
		[
			"translateY: number\tNativeScript - ProxyViewContainer",
			"translateY"
		],
		[
			"onUnloaded(): void\tNativeScript - ProxyViewContainer",
			"onUnloaded()"
		],
		[
			"visibility: string\tNativeScript - ProxyViewContainer",
			"visibility"
		],
		[
			"marginRight: number\tNativeScript - ActivityIndicator",
			"marginRight"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - ListView",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - ListView",
			"getLocationOnScreen()"
		],
		[
			"icon: string\tNativeScript - AndroidActionBarSettings",
			"icon"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - TextBase",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - TextBase",
			"getLocationOnScreen()"
		],
		[
			"getLayerType(): number\tNativeScript - CacheLayerType",
			"getLayerType()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Frame",
			"_unregisterAllAnimations()"
		],
		[
			"borderWidth: number\tNativeScript - ActivityIndicator",
			"borderWidth"
		],
		[
			"remove(): Promiseany\tNativeScript - FileSystemEntity",
			"remove()"
		],
		[
			"bindingContext: any\tNativeScript - ActivityIndicator",
			"bindingContext"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Observable",
			"notify<T>(${1:data: T})"
		],
		[
			"_isVisible: boolean\tNativeScript - ActivityIndicator",
			"_isVisible"
		],
		[
			"object: Observable\tNativeScript - PropertyChangeData",
			"object"
		],
		[
			"toString(): string\tNativeScript - ObservableArray<T>",
			"toString()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - WebView",
			"_syncNativeProperties()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - WebView",
			"_isInheritedChange()"
		],
		[
			"Coral: any\tNativeScript - Module color/known-colors",
			"Coral"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Frame",
			"_getNativeViewsCount()"
		],
		[
			"delete( name: string ): void\tNativeScript - Headers",
			"delete(${1:name: string})"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - WebView",
			"getLocationOnScreen()"
		],
		[
			"has( name: string ): boolean\tNativeScript - Headers",
			"has(${1:name: string})"
		],
		[
			"_createUI(): void\tNativeScript - ProxyViewContainer",
			"_createUI()"
		],
		[
			"navigationType: string\tNativeScript - LoadEventData",
			"navigationType"
		],
		[
			"exists( path: string ): boolean\tNativeScript - File",
			"exists(${1:path: string})"
		],
		[
			"eventName: string\tNativeScript - PropertyChangeData",
			"eventName"
		],
		[
			"formData(): PromiseFormData\tNativeScript - Response",
			"formData()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Frame",
			"_removeView(${1:view: View})"
		],
		[
			"borderColor: Color\tNativeScript - ActivityIndicator",
			"borderColor"
		],
		[
			"Static urlProperty: Property\tNativeScript - WebView",
			"Static urlProperty"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - TextBase",
			"getMeasuredHeight()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - WebView",
			"Static unloadedEvent"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - TextField",
			"notify<T>(${1:data: T})"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - ListView",
			"getMeasuredHeight()"
		],
		[
			"isEnabled: boolean\tNativeScript - ActivityIndicator",
			"isEnabled"
		],
		[
			"borderWidth: number\tNativeScript - CustomLayoutView",
			"borderWidth"
		],
		[
			"Static CDATA: string\tNativeScript - ParserEventType",
			"Static CDATA"
		],
		[
			"getDuration(): number\tNativeScript - FadeTransition",
			"getDuration()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - ListView",
			"_removeFromSuperview()"
		],
		[
			"bindingContext: any\tNativeScript - CustomLayoutView",
			"bindingContext"
		],
		[
			"marginLeft: number\tNativeScript - ActivityIndicator",
			"marginLeft"
		],
		[
			"backStack: ArrayBackstackEntry\tNativeScript - Frame",
			"backStack"
		],
		[
			"delete( name: string ): void\tNativeScript - Headers",
			"delete(${1:name: string})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - TextBase",
			"_removeFromSuperview()"
		],
		[
			"_isVisible: boolean\tNativeScript - CustomLayoutView",
			"_isVisible"
		],
		[
			"translateX: number\tNativeScript - ActivityIndicator",
			"translateX"
		],
		[
			"toLocaleString(): string\tNativeScript - Array<T, T>",
			"toLocaleString()"
		],
		[
			"new Frame( json?: any ): Frame\tNativeScript - Frame",
			"new Frame(${1:json?: any})"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Image",
			"_getNativeViewsCount()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Image",
			"_removeView(${1:view: View})"
		],
		[
			"getFile( name: string ): File\tNativeScript - Folder",
			"getFile(${1:name: string})"
		],
		[
			"has( name: string ): boolean\tNativeScript - Headers",
			"has(${1:name: string})"
		],
		[
			"White: any\tNativeScript - Module color/known-colors",
			"White"
		],
		[
			"translateY: number\tNativeScript - ActivityIndicator",
			"translateY"
		],
		[
			"Static loadedEvent: string\tNativeScript - ActionBar",
			"Static loadedEvent"
		],
		[
			"Static itemTapEvent: string\tNativeScript - ListView",
			"Static itemTapEvent"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Slider",
			"_isInheritedChange()"
		],
		[
			"visibility: string\tNativeScript - ActivityIndicator",
			"visibility"
		],
		[
			"Static idProperty: Property\tNativeScript - ListView",
			"Static idProperty"
		],
		[
			"Wheat: any\tNativeScript - Module color/known-colors",
			"Wheat"
		],
		[
			"has( key: K ): boolean\tNativeScript - WeakMap<K, V>",
			"has(${1:key: K})"
		],
		[
			"Static navigatedToEvent: string\tNativeScript - Page",
			"Static navigatedToEvent"
		],
		[
			"prototype: Arrayany\tNativeScript - ArrayConstructor",
			"prototype"
		],
		[
			"formData(): PromiseFormData\tNativeScript - Response",
			"formData()"
		],
		[
			"toString(): string\tNativeScript - Uint8ClampedArray",
			"toString()"
		],
		[
			"onUnloaded(): void\tNativeScript - ActivityIndicator",
			"onUnloaded()"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Repeater",
			"cssPseudoClasses"
		],
		[
			"get( name: string ): any\tNativeScript - ProxyObject",
			"get(${1:name: string})"
		],
		[
			"byteOffset: number\tNativeScript - Uint8ClampedArray",
			"byteOffset"
		],
		[
			"horizontalAlignment: string\tNativeScript - Repeater",
			"horizontalAlignment"
		],
		[
			"byteLength: number\tNativeScript - Uint8ClampedArray",
			"byteLength"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - TextField",
			"getMeasuredWidth()"
		],
		[
			"x1: number\tNativeScript - CubicBezierAnimationCurve",
			"x1"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - TextView",
			"cssPseudoClasses"
		],
		[
			"Static idProperty: Property\tNativeScript - TextBase",
			"Static idProperty"
		],
		[
			"x2: number\tNativeScript - CubicBezierAnimationCurve",
			"x2"
		],
		[
			"minHeight: number\tNativeScript - ProxyViewContainer",
			"minHeight"
		],
		[
			"y1: number\tNativeScript - CubicBezierAnimationCurve",
			"y1"
		],
		[
			"y2: number\tNativeScript - CubicBezierAnimationCurve",
			"y2"
		],
		[
			"setDate( date: number ): number\tNativeScript - Date",
			"setDate(${1:date: number})"
		],
		[
			"marginTop: number\tNativeScript - ProxyViewContainer",
			"marginTop"
		],
		[
			"setTime( time: number ): number\tNativeScript - Date",
			"setTime(${1:time: number})"
		],
		[
			"horizontalAlignment: string\tNativeScript - TextBase",
			"horizontalAlignment"
		],
		[
			"horizontalAlignment: string\tNativeScript - TextView",
			"horizontalAlignment"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - TextBase",
			"cssPseudoClasses"
		],
		[
			"isLoaded: boolean\tNativeScript - ProxyViewContainer",
			"isLoaded"
		],
		[
			"horizontalAlignment: string\tNativeScript - ListView",
			"horizontalAlignment"
		],
		[
			"duration: number\tNativeScript - AnimationDefinition",
			"duration"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - ListView",
			"cssPseudoClasses"
		],
		[
			"marginRight: number\tNativeScript - CustomLayoutView",
			"marginRight"
		],
		[
			"toLocaleString(): string\tNativeScript - Array<T, T>",
			"toLocaleString()"
		],
		[
			"Static idProperty: Property\tNativeScript - Repeater",
			"Static idProperty"
		],
		[
			"bindingContext: any\tNativeScript - SegmentedBarItem",
			"bindingContext"
		],
		[
			"Olive: any\tNativeScript - Module color/known-colors",
			"Olive"
		],
		[
			"get( name: string ): any\tNativeScript - TabViewItem",
			"get(${1:name: string})"
		],
		[
			"isPlaying: boolean\tNativeScript - KeyframeAnimation",
			"isPlaying"
		],
		[
			"iterations: number\tNativeScript - KeyframeAnimation",
			"iterations"
		],
		[
			"prototype: Arrayany\tNativeScript - ArrayConstructor",
			"prototype"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Slider",
			"_syncNativeProperties()"
		],
		[
			"new Cache( json?: any ): Cache\tNativeScript - Cache",
			"new Cache(${1:json?: any})"
		],
		[
			"Static downloadedEvent: string\tNativeScript - Cache",
			"Static downloadedEvent"
		],
		[
			"className: string\tNativeScript - ProxyViewContainer",
			"className"
		],
		[
			"get( name: string ): any\tNativeScript - Placeholder",
			"get(${1:name: string})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Layout",
			"_isInheritedChange()"
		],
		[
			"marginRight: number\tNativeScript - EditableTextBase",
			"marginRight"
		],
		[
			"angularSyntax: boolean\tNativeScript - EasySAXParser",
			"angularSyntax"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Repeater",
			"_removeFromSuperview()"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint8Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"new Image( json?: any ): Image\tNativeScript - Image",
			"new Image(${1:json?: any})"
		],
		[
			"new Label( json?: any ): Label\tNativeScript - Label",
			"new Label(${1:json?: any})"
		],
		[
			"Linen: any\tNativeScript - Module color/known-colors",
			"Linen"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Progress",
			"cssPseudoClasses"
		],
		[
			"property: string\tNativeScript - KeyframeDeclaration",
			"property"
		],
		[
			"_onContextChanged(): void\tNativeScript - ListPicker",
			"_onContextChanged()"
		],
		[
			"setDate( date: number ): number\tNativeScript - Date",
			"setDate(${1:date: number})"
		],
		[
			"Khaki: any\tNativeScript - Module color/known-colors",
			"Khaki"
		],
		[
			"Ivory: any\tNativeScript - Module color/known-colors",
			"Ivory"
		],
		[
			"formattedText: FormattedString\tNativeScript - Label",
			"formattedText"
		],
		[
			"_onContextChanged(): void\tNativeScript - GridLayout",
			"_onContextChanged()"
		],
		[
			"borderWidth: number\tNativeScript - EditableTextBase",
			"borderWidth"
		],
		[
			"setTime( time: number ): number\tNativeScript - Date",
			"setTime(${1:time: number})"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Repeater",
			"getMeasuredHeight()"
		],
		[
			"Green: any\tNativeScript - Module color/known-colors",
			"Green"
		],
		[
			"bindingContext: any\tNativeScript - EditableTextBase",
			"bindingContext"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - HtmlView",
			"getMeasuredHeight()"
		],
		[
			"eventName: string\tNativeScript - PropertyChangeData",
			"eventName"
		],
		[
			"_isVisible: boolean\tNativeScript - EditableTextBase",
			"_isVisible"
		],
		[
			"verticalAlignment: string\tNativeScript - ListPicker",
			"verticalAlignment"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Layout",
			"_syncNativeProperties()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - TabView",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - TabView",
			"getLocationInWindow()"
		],
		[
			"cacheable: boolean\tNativeScript - NativeValueResult",
			"cacheable"
		],
		[
			"horizontalAlignment: string\tNativeScript - Progress",
			"horizontalAlignment"
		],
		[
			"defaultPrevented: boolean\tNativeScript - ErrorEvent",
			"defaultPrevented"
		],
		[
			"defaultPrevented: boolean\tNativeScript - ErrorEvent",
			"defaultPrevented"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - ListPicker",
			"isLayoutRequired"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - WebView",
			"getLocationInWindow()"
		],
		[
			"toLocaleString(): string\tNativeScript - Uint32Array",
			"toLocaleString()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - Page",
			"_unregisterAllAnimations()"
		],
		[
			"Brown: any\tNativeScript - Module color/known-colors",
			"Brown"
		],
		[
			"Black: any\tNativeScript - Module color/known-colors",
			"Black"
		],
		[
			"reverse(): Float32Array\tNativeScript - Float32Array",
			"reverse()"
		],
		[
			"Beige: any\tNativeScript - Module color/known-colors",
			"Beige"
		],
		[
			"verticalAlignment: string\tNativeScript - GridLayout",
			"verticalAlignment"
		],
		[
			"Azure: any\tNativeScript - Module color/known-colors",
			"Azure"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - ScrollView",
			"isLayoutRequired"
		],
		[
			"Static unloadedEvent: string\tNativeScript - TabView",
			"Static unloadedEvent"
		],
		[
			"isValid( value: any ): boolean\tNativeScript - Color",
			"isValid(${1:value: any})"
		],
		[
			"action: string\tNativeScript - TouchGestureEventData",
			"action"
		],
		[
			"_setNativeMinTime(): void\tNativeScript - TimePicker",
			"_setNativeMinTime()"
		],
		[
			"_setNativeMaxTime(): void\tNativeScript - TimePicker",
			"_setNativeMaxTime()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Label",
			"_getNativeViewsCount()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Border",
			"_isInheritedChange()"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Label",
			"_removeView(${1:view: View})"
		],
		[
			"verticalAlignment: string\tNativeScript - ScrollView",
			"verticalAlignment"
		],
		[
			"toLocaleString(): string\tNativeScript - Uint16Array",
			"toLocaleString()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - HtmlView",
			"_removeFromSuperview()"
		],
		[
			"getX(): number\tNativeScript - TouchGestureEventData",
			"getX()"
		],
		[
			"reverse(): Float32Array\tNativeScript - Float32Array",
			"reverse()"
		],
		[
			"getY(): number\tNativeScript - TouchGestureEventData",
			"getY()"
		],
		[
			"reverse(): Float64Array\tNativeScript - Float64Array",
			"reverse()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Border",
			"_syncNativeProperties()"
		],
		[
			"Static idProperty: Property\tNativeScript - TextView",
			"Static idProperty"
		],
		[
			"isAvailable(): Boolean\tNativeScript - Module camera",
			"isAvailable()"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - Page",
			"getViewById<T>(${1:id: string})"
		],
		[
			"saveToGallery: boolean\tNativeScript - CameraOptions",
			"saveToGallery"
		],
		[
			"_onContextChanged(): void\tNativeScript - WrapLayout",
			"_onContextChanged()"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Progress",
			"getMeasuredHeight()"
		],
		[
			"isNavigation: boolean\tNativeScript - BackstackEntry",
			"isNavigation"
		],
		[
			"Static idProperty: Property\tNativeScript - HtmlView",
			"Static idProperty"
		],
		[
			"reverse(): Float64Array\tNativeScript - Float64Array",
			"reverse()"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int16Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"_onContextChanged(): void\tNativeScript - ScrollView",
			"_onContextChanged()"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - GridLayout",
			"isLayoutRequired"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int32Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"bindingContext: any\tNativeScript - NavigationButton",
			"bindingContext"
		],
		[
			"clipToBounds: boolean\tNativeScript - AbsoluteLayout",
			"clipToBounds"
		],
		[
			"Static loadedEvent: string\tNativeScript - TextField",
			"Static loadedEvent"
		],
		[
			"console: Console\tNativeScript - Module NativeScript",
			"console"
		],
		[
			"shift(): string\tNativeScript - TemplateStringsArray",
			"shift()"
		],
		[
			"cssClasses: Setstring\tNativeScript - AbsoluteLayout",
			"cssClasses"
		],
		[
			"_onContextChanged(): void\tNativeScript - TimePicker",
			"_onContextChanged()"
		],
		[
			"Infinity: number\tNativeScript - Module NativeScript",
			"Infinity"
		],
		[
			"verticalAlignment: string\tNativeScript - WrapLayout",
			"verticalAlignment"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int16Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"has( key: K ): boolean\tNativeScript - WeakMap<K, V>",
			"has(${1:key: K})"
		],
		[
			"toString(): string\tNativeScript - Uint8ClampedArray",
			"toString()"
		],
		[
			"byteOffset: number\tNativeScript - Uint8ClampedArray",
			"byteOffset"
		],
		[
			"byteLength: number\tNativeScript - Uint8ClampedArray",
			"byteLength"
		],
		[
			"_onContextChanged(): void\tNativeScript - DatePicker",
			"_onContextChanged()"
		],
		[
			"isEnabled(): boolean\tNativeScript - LocationManager",
			"isEnabled()"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Uint8Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - WrapLayout",
			"isLayoutRequired"
		],
		[
			"toLocaleString(): string\tNativeScript - Uint32Array",
			"toLocaleString()"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int32Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"toLocaleString(): string\tNativeScript - Uint16Array",
			"toLocaleString()"
		],
		[
			"unbind( property: string ): any\tNativeScript - Page",
			"unbind(${1:property: string})"
		],
		[
			"stringify( value: any ): string\tNativeScript - JSON",
			"stringify(${1:value: any})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Progress",
			"_removeFromSuperview()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Switch",
			"_syncNativeProperties()"
		],
		[
			"shift(): string\tNativeScript - TemplateStringsArray",
			"shift()"
		],
		[
			"verticalAlignment: string\tNativeScript - DatePicker",
			"verticalAlignment"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - LayoutBase",
			"isLayoutRequired"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Switch",
			"_isInheritedChange()"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - ActionBar",
			"getMeasuredWidth()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ActionBar",
			"notify<T>(${1:data: T})"
		],
		[
			"paddingBottom: number\tNativeScript - AbsoluteLayout",
			"paddingBottom"
		],
		[
			"charAt( pos: number ): string\tNativeScript - String",
			"charAt(${1:pos: number})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - HtmlView",
			"cssPseudoClasses"
		],
		[
			"get( name: string ): any\tNativeScript - ContentView",
			"get(${1:name: string})"
		],
		[
			"verticalAlignment: string\tNativeScript - LayoutBase",
			"verticalAlignment"
		],
		[
			"charAt( pos: number ): string\tNativeScript - String",
			"charAt(${1:pos: number})"
		],
		[
			"get( name: string ): any\tNativeScript - StackLayout",
			"get(${1:name: string})"
		],
		[
			"_updateLayout(): void\tNativeScript - AbsoluteLayout",
			"_updateLayout()"
		],
		[
			"horizontalAlignment: string\tNativeScript - HtmlView",
			"horizontalAlignment"
		],
		[
			"getActualSize(): Size\tNativeScript - AbsoluteLayout",
			"getActualSize()"
		],
		[
			"Static textProperty: Property\tNativeScript - Button",
			"Static textProperty"
		],
		[
			"requestLayout(): void\tNativeScript - AbsoluteLayout",
			"requestLayout()"
		],
		[
			"verticalAlignment: string\tNativeScript - TimePicker",
			"verticalAlignment"
		],
		[
			"getDuration(): number\tNativeScript - FadeTransition",
			"getDuration()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Button",
			"_isInheritedChange()"
		],
		[
			"stringify( value: any ): string\tNativeScript - JSON",
			"stringify(${1:value: any})"
		],
		[
			"_onContextChanged(): void\tNativeScript - LayoutBase",
			"_onContextChanged()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - TextView",
			"_removeFromSuperview()"
		],
		[
			"unbind( property: string ): any\tNativeScript - Span",
			"unbind(${1:property: string})"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Button",
			"_syncNativeProperties()"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - TimePicker",
			"isLayoutRequired"
		],
		[
			"_onContextChanged(): void\tNativeScript - DockLayout",
			"_onContextChanged()"
		],
		[
			"Static loadedEvent: string\tNativeScript - SearchBar",
			"Static loadedEvent"
		],
		[
			"Static submitEvent: string\tNativeScript - SearchBar",
			"Static submitEvent"
		],
		[
			"backgroundImage: string\tNativeScript - SegmentedBar",
			"backgroundImage"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - DockLayout",
			"isLayoutRequired"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - DatePicker",
			"isLayoutRequired"
		],
		[
			"comb: \"+\"\"~\"\">\"\" \"\tNativeScript - AttributeSelector",
			"comb"
		],
		[
			"topMargin: number\tNativeScript - CommonLayoutParams",
			"topMargin"
		],
		[
			"seal<T>( o: T ): T\tNativeScript - ObjectConstructor",
			"seal<T>(${1:o: T})"
		],
		[
			"BUBBLING_PHASE: number\tNativeScript - ProgressEvent",
			"BUBBLING_PHASE"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - TextView",
			"getMeasuredHeight()"
		],
		[
			"pos: number\tNativeScript - SimpleIdentifierSelector",
			"pos"
		],
		[
			"Static idProperty: Property\tNativeScript - Progress",
			"Static idProperty"
		],
		[
			"preventDefault(): void\tNativeScript - ProgressEvent",
			"preventDefault()"
		],
		[
			"_unregisterAllAnimations(): any\tNativeScript - View",
			"_unregisterAllAnimations()"
		],
		[
			"writable: boolean\tNativeScript - PropertyDescriptor",
			"writable"
		],
		[
			"comb: \"+\"\"~\"\">\"\" \"\tNativeScript - UniversalSelector",
			"comb"
		],
		[
			"verticalAlignment: string\tNativeScript - DockLayout",
			"verticalAlignment"
		],
		[
			"view: View\tNativeScript - GestureEventDataWithState",
			"view"
		],
		[
			"seal<T>( o: T ): T\tNativeScript - ObjectConstructor",
			"seal<T>(${1:o: T})"
		],
		[
			"BUBBLING_PHASE: number\tNativeScript - ProgressEvent",
			"BUBBLING_PHASE"
		],
		[
			"unbind( property: string ): any\tNativeScript - View",
			"unbind(${1:property: string})"
		],
		[
			"stretchLastChild: boolean\tNativeScript - DockLayout",
			"stretchLastChild"
		],
		[
			"writable: boolean\tNativeScript - PropertyDescriptor",
			"writable"
		],
		[
			"parse( cssValue: string ): Font\tNativeScript - Font",
			"parse(${1:cssValue: string})"
		],
		[
			"getViewById<T>( id: string ): T\tNativeScript - View",
			"getViewById<T>(${1:id: string})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - SearchBar",
			"notify<T>(${1:data: T})"
		],
		[
			"preventDefault(): void\tNativeScript - ProgressEvent",
			"preventDefault()"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - SearchBar",
			"getMeasuredWidth()"
		],
		[
			"Static idProperty: Property\tNativeScript - TabView",
			"Static idProperty"
		],
		[
			"translateY: number\tNativeScript - CustomLayoutView",
			"translateY"
		],
		[
			"get( name: string ): any\tNativeScript - WrapLayout",
			"get(${1:name: string})"
		],
		[
			"running(): boolean\tNativeScript - Module fps-meter",
			"running()"
		],
		[
			"getRows(): ArrayItemSpec\tNativeScript - GridLayout",
			"getRows()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Layout",
			"getLocationOnScreen()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Label",
			"_isInheritedChange()"
		],
		[
			"horizontalAlignment: string\tNativeScript - TabView",
			"horizontalAlignment"
		],
		[
			"scrollableHeight: number\tNativeScript - ScrollView",
			"scrollableHeight"
		],
		[
			"metadata: PropertyMetadata\tNativeScript - Property",
			"metadata"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - TabView",
			"cssPseudoClasses"
		],
		[
			"translateY: number\tNativeScript - EditableTextBase",
			"translateY"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Label",
			"_syncNativeProperties()"
		],
		[
			"horizontalAccuracy: number\tNativeScript - Location",
			"horizontalAccuracy"
		],
		[
			"translateX: number\tNativeScript - EditableTextBase",
			"translateX"
		],
		[
			"focus(): boolean\tNativeScript - ProxyViewContainer",
			"focus()"
		],
		[
			"visibility: string\tNativeScript - CustomLayoutView",
			"visibility"
		],
		[
			"typeName: string\tNativeScript - ObservableArray<T>",
			"typeName"
		],
		[
			"Static Text: string\tNativeScript - ParserEventType",
			"Static Text"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Progress",
			"notify<T>(${1:data: T})"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - TextBase",
			"notify<T>(${1:data: T})"
		],
		[
			"clearCache(): void\tNativeScript - FileNameResolver",
			"clearCache()"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - WebView",
			"getMeasuredHeight()"
		],
		[
			"Navy: any\tNativeScript - Module color/known-colors",
			"Navy"
		],
		[
			"_createUI(): void\tNativeScript - ActivityIndicator",
			"_createUI()"
		],
		[
			"borderColor: Color\tNativeScript - CustomLayoutView",
			"borderColor"
		],
		[
			"delay: number\tNativeScript - KeyframeAnimationInfo",
			"delay"
		],
		[
			"cssClass: string\tNativeScript - ProxyViewContainer",
			"cssClass"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Progress",
			"getMeasuredWidth()"
		],
		[
			"isLoaded: boolean\tNativeScript - ActivityIndicator",
			"isLoaded"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Border",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Border",
			"getLocationOnScreen()"
		],
		[
			"okButtonText: string\tNativeScript - ConfirmOptions",
			"okButtonText"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - ListView",
			"notify<T>(${1:data: T})"
		],
		[
			"Static loadedEvent: string\tNativeScript - TextView",
			"Static loadedEvent"
		],
		[
			"metadata: PropertyMetadata\tNativeScript - Property",
			"metadata"
		],
		[
			"Static loadedEvent: string\tNativeScript - HtmlView",
			"Static loadedEvent"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Bindable",
			"notify<T>(${1:data: T})"
		],
		[
			"view: View\tNativeScript - RotationGestureEventData",
			"view"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Frame",
			"_syncNativeProperties()"
		],
		[
			"value: T\tNativeScript - TypedPropertyDescriptor<T>",
			"value"
		],
		[
			"bindingContext: any\tNativeScript - NavigationEntry",
			"bindingContext"
		],
		[
			"state: number\tNativeScript - PinchGestureEventData",
			"state"
		],
		[
			"responseType: string\tNativeScript - XMLHttpRequest",
			"responseType"
		],
		[
			"borderRadius: number\tNativeScript - AbsoluteLayout",
			"borderRadius"
		],
		[
			"toLocaleString(): string\tNativeScript - Int16Array",
			"toLocaleString()"
		],
		[
			"marginLeft: number\tNativeScript - EditableTextBase",
			"marginLeft"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - Page",
			"_getNativeViewsCount()"
		],
		[
			"marginTop: number\tNativeScript - ActivityIndicator",
			"marginTop"
		],
		[
			"get( name: string ): any\tNativeScript - GridLayout",
			"get(${1:name: string})"
		],
		[
			"Teal: any\tNativeScript - Module color/known-colors",
			"Teal"
		],
		[
			"get( name: string ): any\tNativeScript - ListPicker",
			"get(${1:name: string})"
		],
		[
			"minHeight: number\tNativeScript - ActivityIndicator",
			"minHeight"
		],
		[
			"responseText: string\tNativeScript - XMLHttpRequest",
			"responseText"
		],
		[
			"get( name: string ): string\tNativeScript - Headers",
			"get(${1:name: string})"
		],
		[
			"isEnabled: boolean\tNativeScript - EditableTextBase",
			"isEnabled"
		],
		[
			"get( name: string ): any\tNativeScript - DatePicker",
			"get(${1:name: string})"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Switch",
			"getLocationOnScreen()"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - TextBase",
			"getMeasuredWidth()"
		],
		[
			"responseType: string\tNativeScript - XMLHttpRequest",
			"responseType"
		],
		[
			"responseText: string\tNativeScript - XMLHttpRequest",
			"responseText"
		],
		[
			"Lime: any\tNativeScript - Module color/known-colors",
			"Lime"
		],
		[
			"Slider( json?: any ): Slider\tNativeScript - Slider",
			"Slider(${1:json?: any})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Frame",
			"_isInheritedChange()"
		],
		[
			"Static loadedEvent: string\tNativeScript - TextBase",
			"Static loadedEvent"
		],
		[
			"className: string\tNativeScript - ActivityIndicator",
			"className"
		],
		[
			"fromPath( path: string ): File\tNativeScript - File",
			"fromPath(${1:path: string})"
		],
		[
			"Border( json?: any ): Border\tNativeScript - Border",
			"Border(${1:json?: any})"
		],
		[
			"toLocaleString(): string\tNativeScript - Uint8Array",
			"toLocaleString()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Switch",
			"getLocationInWindow()"
		],
		[
			"get( name: string ): any\tNativeScript - ScrollView",
			"get(${1:name: string})"
		],
		[
			"toLocaleString(): string\tNativeScript - Int16Array",
			"toLocaleString()"
		],
		[
			"onUnloaded(): void\tNativeScript - CustomLayoutView",
			"onUnloaded()"
		],
		[
			"onLoaded(): void\tNativeScript - ProxyViewContainer",
			"onLoaded()"
		],
		[
			"Snow: any\tNativeScript - Module color/known-colors",
			"Snow"
		],
		[
			"toLocaleString(): string\tNativeScript - Int32Array",
			"toLocaleString()"
		],
		[
			"manager: any\tNativeScript - AndroidLocationManager",
			"manager"
		],
		[
			"isEnabled: boolean\tNativeScript - CustomLayoutView",
			"isEnabled"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int8Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"Layout( json?: any ): Layout\tNativeScript - Layout",
			"Layout(${1:json?: any})"
		],
		[
			"length: number\tNativeScript - TemplateStringsArray",
			"length"
		],
		[
			"_removeView( view: View ): any\tNativeScript - Page",
			"_removeView(${1:view: View})"
		],
		[
			"typeName: string\tNativeScript - ProxyViewContainer",
			"typeName"
		],
		[
			"get( name: string ): any\tNativeScript - TimePicker",
			"get(${1:name: string})"
		],
		[
			"value: T\tNativeScript - TypedPropertyDescriptor<T>",
			"value"
		],
		[
			"Error: ErrorConstructor\tNativeScript - SyntaxError",
			"Error"
		],
		[
			"toLocaleString(): string\tNativeScript - Int32Array",
			"toLocaleString()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Style",
			"_syncNativeProperties()"
		],
		[
			"_nativeView: any\tNativeScript - ProxyViewContainer",
			"_nativeView"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - HtmlView",
			"notify<T>(${1:data: T})"
		],
		[
			"borderColor: Color\tNativeScript - EditableTextBase",
			"borderColor"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - WebView",
			"_removeFromSuperview()"
		],
		[
			"marginBottom: number\tNativeScript - AbsoluteLayout",
			"marginBottom"
		],
		[
			"_updateTextDecoration(): void\tNativeScript - Style",
			"_updateTextDecoration()"
		],
		[
			"prototype: Symbol\tNativeScript - SymbolConstructor",
			"prototype"
		],
		[
			"prototype: String\tNativeScript - StringConstructor",
			"prototype"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - ActionBar",
			"isLayoutRequired"
		],
		[
			"length: number\tNativeScript - TemplateStringsArray",
			"length"
		],
		[
			"minWidth: number\tNativeScript - ProxyViewContainer",
			"minWidth"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Repeater",
			"getMeasuredWidth()"
		],
		[
			"BYTES_PER_ELEMENT: number\tNativeScript - Int8Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Slider",
			"Static unloadedEvent"
		],
		[
			"stack(): ArrayFrame\tNativeScript - Module ui/frame",
			"stack()"
		],
		[
			"Error: ErrorConstructor\tNativeScript - SyntaxError",
			"Error"
		],
		[
			"prototype: Symbol\tNativeScript - SymbolConstructor",
			"prototype"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - ListView",
			"getMeasuredWidth()"
		],
		[
			"object: Observable\tNativeScript - ShownModallyData",
			"object"
		],
		[
			"delete( key: K ): boolean\tNativeScript - Map<K, V>",
			"delete(${1:key: K})"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Switch",
			"Static unloadedEvent"
		],
		[
			"Gray: any\tNativeScript - Module color/known-colors",
			"Gray"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - HtmlView",
			"getMeasuredWidth()"
		],
		[
			"_getNativeViewsCount(): number\tNativeScript - View",
			"_getNativeViewsCount()"
		],
		[
			"paddingRight: number\tNativeScript - AbsoluteLayout",
			"paddingRight"
		],
		[
			"Gold: any\tNativeScript - Module color/known-colors",
			"Gold"
		],
		[
			"prototype: String\tNativeScript - StringConstructor",
			"prototype"
		],
		[
			"toString(): string\tNativeScript - RegExpMatchArray",
			"toString()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Repeater",
			"notify<T>(${1:data: T})"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Image",
			"_isInheritedChange()"
		],
		[
			"type: GestureTypes\tNativeScript - GesturesObserver",
			"type"
		],
		[
			"filename: string\tNativeScript - NativeScriptModule",
			"filename"
		],
		[
			"get( name: string ): string\tNativeScript - Headers",
			"get(${1:name: string})"
		],
		[
			"Switch( json?: any ): Switch\tNativeScript - Switch",
			"Switch(${1:json?: any})"
		],
		[
			"_onContextChanged(): void\tNativeScript - TextField",
			"_onContextChanged()"
		],
		[
			"onUnloaded(): void\tNativeScript - EditableTextBase",
			"onUnloaded()"
		],
		[
			"MAX_VALUE: number\tNativeScript - NumberConstructor",
			"MAX_VALUE"
		],
		[
			"metadata: PropertyMetadata\tNativeScript - Property",
			"metadata"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - SearchBar",
			"isLayoutRequired"
		],
		[
			"MIN_VALUE: number\tNativeScript - NumberConstructor",
			"MIN_VALUE"
		],
		[
			"scale: number\tNativeScript - PinchGestureEventData",
			"scale"
		],
		[
			"_onContextChanged(): void\tNativeScript - ActionBar",
			"_onContextChanged()"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Image",
			"_syncNativeProperties()"
		],
		[
			"prototype: Number\tNativeScript - NumberConstructor",
			"prototype"
		],
		[
			"prototype: RegExp\tNativeScript - RegExpConstructor",
			"prototype"
		],
		[
			"lastMatch: string\tNativeScript - RegExpConstructor",
			"lastMatch"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - TabView",
			"getMeasuredHeight()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Border",
			"Static unloadedEvent"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Button",
			"Static unloadedEvent"
		],
		[
			"toString(): string\tNativeScript - RegExpMatchArray",
			"toString()"
		],
		[
			"prototype: Object\tNativeScript - ObjectConstructor",
			"prototype"
		],
		[
			"lastModified: Date\tNativeScript - FileSystemEntity",
			"lastModified"
		],
		[
			"horizontalAlignment: string\tNativeScript - WebView",
			"horizontalAlignment"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - TextField",
			"isLayoutRequired"
		],
		[
			"isLayoutValid: boolean\tNativeScript - SegmentedBar",
			"isLayoutValid"
		],
		[
			"Static idProperty: Property\tNativeScript - WebView",
			"Static idProperty"
		],
		[
			"textFieldHintColor: Color\tNativeScript - SearchBar",
			"textFieldHintColor"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - WebView",
			"cssPseudoClasses"
		],
		[
			"toLocaleString(): string\tNativeScript - Uint8Array",
			"toLocaleString()"
		],
		[
			"object: Observable\tNativeScript - GestureEventData",
			"object"
		],
		[
			"verticalAlignment: string\tNativeScript - SearchBar",
			"verticalAlignment"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Slider",
			"getLocationInWindow()"
		],
		[
			"opacity: number\tNativeScript - AnimationDefinition",
			"opacity"
		],
		[
			"get( name: string ): any\tNativeScript - DockLayout",
			"get(${1:name: string})"
		],
		[
			"type: GestureTypes\tNativeScript - GestureEventData",
			"type"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Button",
			"getLocationInWindow()"
		],
		[
			"Static clearEvent: string\tNativeScript - SearchBar",
			"Static clearEvent"
		],
		[
			"prototype: RegExp\tNativeScript - RegExpConstructor",
			"prototype"
		],
		[
			"addChild( view: View ): void\tNativeScript - Layout",
			"addChild(${1:view: View})"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Button",
			"getLocationOnScreen()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Slider",
			"getLocationOnScreen()"
		],
		[
			"Cyan: any\tNativeScript - Module color/known-colors",
			"Cyan"
		],
		[
			"get( name: string ): any\tNativeScript - Observable",
			"get(${1:name: string})"
		],
		[
			"lastMatch: string\tNativeScript - RegExpConstructor",
			"lastMatch"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - TabView",
			"_removeFromSuperview()"
		],
		[
			"ListPicker(): ListPicker\tNativeScript - ListPicker",
			"ListPicker()"
		],
		[
			"delete( key: K ): boolean\tNativeScript - Map<K, V>",
			"delete(${1:key: K})"
		],
		[
			"backgroundColor: Color\tNativeScript - SegmentedBar",
			"backgroundColor"
		],
		[
			"marginLeft: number\tNativeScript - CustomLayoutView",
			"marginLeft"
		],
		[
			"automationText: string\tNativeScript - SegmentedBar",
			"automationText"
		],
		[
			"Static loadedEvent: string\tNativeScript - ListView",
			"Static loadedEvent"
		],
		[
			"filename: string\tNativeScript - NativeScriptModule",
			"filename"
		],
		[
			"MAX_VALUE: number\tNativeScript - NumberConstructor",
			"MAX_VALUE"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Layout",
			"Static unloadedEvent"
		],
		[
			"MIN_VALUE: number\tNativeScript - NumberConstructor",
			"MIN_VALUE"
		],
		[
			"prototype: Number\tNativeScript - NumberConstructor",
			"prototype"
		],
		[
			"prototype: Object\tNativeScript - ObjectConstructor",
			"prototype"
		],
		[
			"Blue: any\tNativeScript - Module color/known-colors",
			"Blue"
		],
		[
			"_gestureObservers: any\tNativeScript - SegmentedBar",
			"_gestureObservers"
		],
		[
			"get( name: string ): any\tNativeScript - LayoutBase",
			"get(${1:name: string})"
		],
		[
			"translateX: number\tNativeScript - CustomLayoutView",
			"translateX"
		],
		[
			"backgroundImage: string\tNativeScript - Placeholder",
			"backgroundImage"
		],
		[
			"cancelBubble: boolean\tNativeScript - ProgressEvent",
			"cancelBubble"
		],
		[
			"updateTextTrigger: string\tNativeScript - TextField",
			"updateTextTrigger"
		],
		[
			"_onContextChanged(): void\tNativeScript - SearchBar",
			"_onContextChanged()"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - ArrayBufferView",
			"buffer"
		],
		[
			"backgroundImage: string\tNativeScript - ContentView",
			"backgroundImage"
		],
		[
			"_childrenCount: number\tNativeScript - SegmentedBar",
			"_childrenCount"
		],
		[
			"Plum: any\tNativeScript - Module color/known-colors",
			"Plum"
		],
		[
			"_removeView( view: View ): any\tNativeScript - View",
			"_removeView(${1:view: View})"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - TextView",
			"getMeasuredWidth()"
		],
		[
			"Static loadedEvent: string\tNativeScript - Progress",
			"Static loadedEvent"
		],
		[
			"currentEntry: NavigationEntry\tNativeScript - Frame",
			"currentEntry"
		],
		[
			"Pink: any\tNativeScript - Module color/known-colors",
			"Pink"
		],
		[
			"Aqua: any\tNativeScript - Module color/known-colors",
			"Aqua"
		],
		[
			"_updateTextDecoration(): void\tNativeScript - Style",
			"_updateTextDecoration()"
		],
		[
			"horizontalOffset: number\tNativeScript - ScrollView",
			"horizontalOffset"
		],
		[
			"backgroundImage: string\tNativeScript - StackLayout",
			"backgroundImage"
		],
		[
			"verticalAlignment: string\tNativeScript - TextField",
			"verticalAlignment"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Style",
			"_syncNativeProperties()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - TextView",
			"notify<T>(${1:data: T})"
		],
		[
			"DatePicker(): DatePicker\tNativeScript - DatePicker",
			"DatePicker()"
		],
		[
			"verticalAlignment: string\tNativeScript - ActionBar",
			"verticalAlignment"
		],
		[
			"translate: Pair\tNativeScript - AnimationDefinition",
			"translate"
		],
		[
			"visibility: string\tNativeScript - EditableTextBase",
			"visibility"
		],
		[
			"Peru: any\tNativeScript - Module color/known-colors",
			"Peru"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - ArrayBufferView",
			"buffer"
		],
		[
			"Static loadedEvent: string\tNativeScript - Repeater",
			"Static loadedEvent"
		],
		[
			"Static textProperty: Property\tNativeScript - Label",
			"Static textProperty"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Layout",
			"getLocationInWindow()"
		],
		[
			"visibility: string\tNativeScript - NavigationButton",
			"visibility"
		],
		[
			"cancelBubble: boolean\tNativeScript - ProgressEvent",
			"cancelBubble"
		],
		[
			"showActionBar: boolean\tNativeScript - AndroidFrame",
			"showActionBar"
		],
		[
			"get( name: string ): any\tNativeScript - ActionItem",
			"get(${1:name: string})"
		],
		[
			"visualStateValue: any\tNativeScript - PropertyEntry",
			"visualStateValue"
		],
		[
			"Button( json?: any ): Button\tNativeScript - Button",
			"Button(${1:json?: any})"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Placeholder",
			"isLayoutValid"
		],
		[
			"returnValue: boolean\tNativeScript - ProgressEvent",
			"returnValue"
		],
		[
			"deltaY: number\tNativeScript - PanGestureEventData",
			"deltaY"
		],
		[
			"_childrenCount: number\tNativeScript - StackLayout",
			"_childrenCount"
		],
		[
			"_gestureObservers: any\tNativeScript - StackLayout",
			"_gestureObservers"
		],
		[
			"get( name: string ): any\tNativeScript - SearchBar",
			"get(${1:name: string})"
		],
		[
			"dismissSoftInput(): void\tNativeScript - SearchBar",
			"dismissSoftInput()"
		],
		[
			"toString(): string\tNativeScript - FormattedString",
			"toString()"
		],
		[
			"deltaX: number\tNativeScript - PanGestureEventData",
			"deltaX"
		],
		[
			"isLayoutValid: boolean\tNativeScript - ContentView",
			"isLayoutValid"
		],
		[
			"automationText: string\tNativeScript - StackLayout",
			"automationText"
		],
		[
			"backgroundColor: Color\tNativeScript - StackLayout",
			"backgroundColor"
		],
		[
			"bubbles: boolean\tNativeScript - ProgressEventInit",
			"bubbles"
		],
		[
			"_updateTextTransform(): void\tNativeScript - Style",
			"_updateTextTransform()"
		],
		[
			"ios: any\tNativeScript - GestureEventDataWithState",
			"ios"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - View",
			"_syncNativeProperties()"
		],
		[
			"Error: ErrorConstructor\tNativeScript - RangeError",
			"Error"
		],
		[
			"fontFamily: string\tNativeScript - FormattedString",
			"fontFamily"
		],
		[
			"backgroundImage: string\tNativeScript - DatePicker",
			"backgroundImage"
		],
		[
			"returnValue: boolean\tNativeScript - ProgressEvent",
			"returnValue"
		],
		[
			"backgroundImage: string\tNativeScript - TimePicker",
			"backgroundImage"
		],
		[
			"isLayoutValid: boolean\tNativeScript - StackLayout",
			"isLayoutValid"
		],
		[
			"backgroundColor: Color\tNativeScript - ContentView",
			"backgroundColor"
		],
		[
			"backgroundColor: Color\tNativeScript - Placeholder",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - ContentView",
			"automationText"
		],
		[
			"Error: ErrorConstructor\tNativeScript - RangeError",
			"Error"
		],
		[
			"automationText: string\tNativeScript - Placeholder",
			"automationText"
		],
		[
			"_gestureObservers: any\tNativeScript - ContentView",
			"_gestureObservers"
		],
		[
			"_childrenCount: number\tNativeScript - ContentView",
			"_childrenCount"
		],
		[
			"splice( start: number ): T\tNativeScript - List<T>",
			"splice(${1:start: number})"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Button",
			"getMeasuredHeight()"
		],
		[
			"toString(): string\tNativeScript - RegExpExecArray",
			"toString()"
		],
		[
			"cssClasses: Setstring\tNativeScript - SegmentedBar",
			"cssClasses"
		],
		[
			"Static tapEvent: string\tNativeScript - ActionItem",
			"Static tapEvent"
		],
		[
			"verticalAlignment: string\tNativeScript - Progress",
			"verticalAlignment"
		],
		[
			"concat( ...items: T[] ): T\tNativeScript - List<T>",
			"concat(${1:...items: T[]})"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Button",
			"_removeFromSuperview()"
		],
		[
			"sizeY: number\tNativeScript - BackgroundDrawParams",
			"sizeY"
		],
		[
			"sizeX: number\tNativeScript - BackgroundDrawParams",
			"sizeX"
		],
		[
			"_gestureObservers: any\tNativeScript - Placeholder",
			"_gestureObservers"
		],
		[
			"backgroundImage: string\tNativeScript - DockLayout",
			"backgroundImage"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - HtmlView",
			"isLayoutRequired"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - View",
			"_isInheritedChange()"
		],
		[
			"reverse(): string\tNativeScript - RegExpMatchArray",
			"reverse()"
		],
		[
			"actionItems: ActionItems\tNativeScript - ActionBar",
			"actionItems"
		],
		[
			"_childrenCount: number\tNativeScript - Placeholder",
			"_childrenCount"
		],
		[
			"eventName: string\tNativeScript - GestureEventData",
			"eventName"
		],
		[
			"_onContextChanged(): void\tNativeScript - Progress",
			"_onContextChanged()"
		],
		[
			"backgroundImage: string\tNativeScript - GridLayout",
			"backgroundImage"
		],
		[
			"Static idProperty: Property\tNativeScript - Button",
			"Static idProperty"
		],
		[
			"toLocaleString(): string\tNativeScript - Int8Array",
			"toLocaleString()"
		],
		[
			"delete( value: T ): boolean\tNativeScript - Set<T>",
			"delete(${1:value: T})"
		],
		[
			"isAndroid: boolean\tNativeScript - Module platform",
			"isAndroid"
		],
		[
			"_onContextChanged(): void\tNativeScript - TextView",
			"_onContextChanged()"
		],
		[
			"disconnect(): any\tNativeScript - GesturesObserver",
			"disconnect()"
		],
		[
			"toLocaleLowerCase(): string\tNativeScript - String",
			"toLocaleLowerCase()"
		],
		[
			"selectedIndex: number\tNativeScript - SegmentedBar",
			"selectedIndex"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Switch",
			"cssPseudoClasses"
		],
		[
			"toString(): string\tNativeScript - RegExpExecArray",
			"toString()"
		],
		[
			"horizontalAlignment: string\tNativeScript - Switch",
			"horizontalAlignment"
		],
		[
			"reverse(): string\tNativeScript - RegExpMatchArray",
			"reverse()"
		],
		[
			"toLocaleUpperCase(): string\tNativeScript - String",
			"toLocaleUpperCase()"
		],
		[
			"iterator: symbol\tNativeScript - SymbolConstructor",
			"iterator"
		],
		[
			"delete( value: T ): boolean\tNativeScript - Set<T>",
			"delete(${1:value: T})"
		],
		[
			"Static idProperty: Property\tNativeScript - Switch",
			"Static idProperty"
		],
		[
			"paddingLeft: number\tNativeScript - AbsoluteLayout",
			"paddingLeft"
		],
		[
			"horizontalAlignment: string\tNativeScript - Button",
			"horizontalAlignment"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Button",
			"cssPseudoClasses"
		],
		[
			"splice( start: number ): T\tNativeScript - List<T>",
			"splice(${1:start: number})"
		],
		[
			"object: Observable\tNativeScript - ScrollEventData",
			"object"
		],
		[
			"concat( ...items: T[] ): T\tNativeScript - List<T>",
			"concat(${1:...items: T[]})"
		],
		[
			"toLocaleLowerCase(): string\tNativeScript - String",
			"toLocaleLowerCase()"
		],
		[
			"removeChildren(): void\tNativeScript - StackLayout",
			"removeChildren()"
		],
		[
			"toLocaleUpperCase(): string\tNativeScript - String",
			"toLocaleUpperCase()"
		],
		[
			"pop(): string\tNativeScript - TemplateStringsArray",
			"pop()"
		],
		[
			"marginRight: number\tNativeScript - AbsoluteLayout",
			"marginRight"
		],
		[
			"iterator: symbol\tNativeScript - SymbolConstructor",
			"iterator"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Switch",
			"_removeFromSuperview()"
		],
		[
			"_updateTextTransform(): void\tNativeScript - Style",
			"_updateTextTransform()"
		],
		[
			"reloadPage(): void\tNativeScript - Module ui/frame",
			"reloadPage()"
		],
		[
			"eventName: string\tNativeScript - ShownModallyData",
			"eventName"
		],
		[
			"backgroundImage: string\tNativeScript - WrapLayout",
			"backgroundImage"
		],
		[
			"heightPixels: number\tNativeScript - ScreenMetrics",
			"heightPixels"
		],
		[
			"reverse(): Uint16Array\tNativeScript - Uint16Array",
			"reverse()"
		],
		[
			"toLocaleString(): string\tNativeScript - Int8Array",
			"toLocaleString()"
		],
		[
			"moduleName: string\tNativeScript - NavigationEntry",
			"moduleName"
		],
		[
			"backgroundImage: string\tNativeScript - LayoutBase",
			"backgroundImage"
		],
		[
			"pop(): string\tNativeScript - TemplateStringsArray",
			"pop()"
		],
		[
			"reverse(): Uint32Array\tNativeScript - Uint32Array",
			"reverse()"
		],
		[
			"verticalAlignment: string\tNativeScript - HtmlView",
			"verticalAlignment"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Switch",
			"getMeasuredHeight()"
		],
		[
			"borderWidth: number\tNativeScript - AbsoluteLayout",
			"borderWidth"
		],
		[
			"actions: Arraystring\tNativeScript - ActionOptions",
			"actions"
		],
		[
			"bindingContext: any\tNativeScript - AbsoluteLayout",
			"bindingContext"
		],
		[
			"isStarted: boolean\tNativeScript - LocationManager",
			"isStarted"
		],
		[
			"_isVisible: boolean\tNativeScript - AbsoluteLayout",
			"_isVisible"
		],
		[
			"cancelable: boolean\tNativeScript - ConfirmOptions",
			"cancelable"
		],
		[
			"get( name: string ): any\tNativeScript - ActionBar",
			"get(${1:name: string})"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Border",
			"getMeasuredHeight()"
		],
		[
			"fragmentTag: string\tNativeScript - BackstackEntry",
			"fragmentTag"
		],
		[
			"_onContextChanged(): void\tNativeScript - HtmlView",
			"_onContextChanged()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Label",
			"getLocationOnScreen()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Border",
			"_removeFromSuperview()"
		],
		[
			"bubbles: boolean\tNativeScript - ProgressEventInit",
			"bubbles"
		],
		[
			"reverse(): Uint16Array\tNativeScript - Uint16Array",
			"reverse()"
		],
		[
			"Color( argb: number ): Color\tNativeScript - Color",
			"Color(${1:argb: number})"
		],
		[
			"android: any\tNativeScript - TouchGestureEventData",
			"android"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Layout",
			"getMeasuredHeight()"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Progress",
			"isLayoutRequired"
		],
		[
			"scrollableWidth: number\tNativeScript - ScrollView",
			"scrollableWidth"
		],
		[
			"tabsBackgroundColor: Color\tNativeScript - TabView",
			"tabsBackgroundColor"
		],
		[
			"_updateLayout(): void\tNativeScript - SegmentedBar",
			"_updateLayout()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Label",
			"Static unloadedEvent"
		],
		[
			"Static loadedEvent: string\tNativeScript - TabView",
			"Static loadedEvent"
		],
		[
			"stopPropagation(): void\tNativeScript - ErrorEvent",
			"stopPropagation()"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Slider",
			"getMeasuredHeight()"
		],
		[
			"_raiseTap(): void\tNativeScript - NavigationButton",
			"_raiseTap()"
		],
		[
			"getActualSize(): Size\tNativeScript - SegmentedBar",
			"getActualSize()"
		],
		[
			"reverse(): Uint32Array\tNativeScript - Uint32Array",
			"reverse()"
		],
		[
			"Static idProperty: Property\tNativeScript - Border",
			"Static idProperty"
		],
		[
			"backgroundImage: string\tNativeScript - ScrollView",
			"backgroundImage"
		],
		[
			"backgroundImage: string\tNativeScript - ListPicker",
			"backgroundImage"
		],
		[
			"_syncNativeProperties(): void\tNativeScript - Page",
			"_syncNativeProperties()"
		],
		[
			"verticalAlignment: string\tNativeScript - TextView",
			"verticalAlignment"
		],
		[
			"okButtonText: string\tNativeScript - PromptOptions",
			"okButtonText"
		],
		[
			"defaultValue: any\tNativeScript - PropertyMetadata",
			"defaultValue"
		],
		[
			"stopPropagation(): void\tNativeScript - ErrorEvent",
			"stopPropagation()"
		],
		[
			"horizontalAlignment: string\tNativeScript - Border",
			"horizontalAlignment"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Border",
			"cssPseudoClasses"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - TabView",
			"getMeasuredWidth()"
		],
		[
			"CAPTURING_PHASE: number\tNativeScript - ErrorEvent",
			"CAPTURING_PHASE"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - TabView",
			"notify<T>(${1:data: T})"
		],
		[
			"className: string\tNativeScript - EditableTextBase",
			"className"
		],
		[
			"editable: boolean\tNativeScript - EditableTextBase",
			"editable"
		],
		[
			"android: any\tNativeScript - SwipeGestureEventData",
			"android"
		],
		[
			"name: string\tNativeScript - KeyframeAnimationInfo",
			"name"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Layout",
			"_removeFromSuperview()"
		],
		[
			"isLoaded: boolean\tNativeScript - EditableTextBase",
			"isLoaded"
		],
		[
			"requestLayout(): void\tNativeScript - SegmentedBar",
			"requestLayout()"
		],
		[
			"_isInheritedChange(): boolean\tNativeScript - Page",
			"_isInheritedChange()"
		],
		[
			"updateTextTrigger: string\tNativeScript - TextView",
			"updateTextTrigger"
		],
		[
			"marginTop: number\tNativeScript - EditableTextBase",
			"marginTop"
		],
		[
			"minHeight: number\tNativeScript - EditableTextBase",
			"minHeight"
		],
		[
			"_createUI(): void\tNativeScript - CustomLayoutView",
			"_createUI()"
		],
		[
			"_onContextChanged(): void\tNativeScript - Repeater",
			"_onContextChanged()"
		],
		[
			"timeout: number\tNativeScript - HttpRequestOptions",
			"timeout"
		],
		[
			"cssType: string\tNativeScript - ProxyViewContainer",
			"cssType"
		],
		[
			"toJSON: functionanyany\tNativeScript - HttpContent",
			"toJSON"
		],
		[
			"byteOffset: number\tNativeScript - ArrayBufferView",
			"byteOffset"
		],
		[
			"dismissSoftInput(): void\tNativeScript - TextField",
			"dismissSoftInput()"
		],
		[
			"byteLength: number\tNativeScript - ArrayBufferView",
			"byteLength"
		],
		[
			"deviceType: string\tNativeScript - PlatformContext",
			"deviceType"
		],
		[
			"get( name: string ): any\tNativeScript - TextField",
			"get(${1:name: string})"
		],
		[
			"CAPTURING_PHASE: number\tNativeScript - ErrorEvent",
			"CAPTURING_PHASE"
		],
		[
			"_createUI(): void\tNativeScript - EditableTextBase",
			"_createUI()"
		],
		[
			"defaultValue: any\tNativeScript - PropertyMetadata",
			"defaultValue"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - TextView",
			"isLayoutRequired"
		],
		[
			"minHeight: number\tNativeScript - CustomLayoutView",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - CustomLayoutView",
			"marginTop"
		],
		[
			"rotate: number\tNativeScript - AnimationDefinition",
			"rotate"
		],
		[
			"Static idProperty: Property\tNativeScript - Layout",
			"Static idProperty"
		],
		[
			"verticalAlignment: string\tNativeScript - Repeater",
			"verticalAlignment"
		],
		[
			"Red: any\tNativeScript - Module color/known-colors",
			"Red"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - ListView",
			"isLayoutRequired"
		],
		[
			"isLoaded: boolean\tNativeScript - CustomLayoutView",
			"isLoaded"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - TextBase",
			"isLayoutRequired"
		],
		[
			"verticalAlignment: string\tNativeScript - TextBase",
			"verticalAlignment"
		],
		[
			"opacity: number\tNativeScript - ProxyViewContainer",
			"opacity"
		],
		[
			"toString(): string\tNativeScript - SlideTransition",
			"toString()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Slider",
			"_removeFromSuperview()"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Repeater",
			"isLayoutRequired"
		],
		[
			"originX: number\tNativeScript - ProxyViewContainer",
			"originX"
		],
		[
			"Tan: any\tNativeScript - Module color/known-colors",
			"Tan"
		],
		[
			"originY: number\tNativeScript - ProxyViewContainer",
			"originY"
		],
		[
			"cancel: functionvoidvoid\tNativeScript - Animation",
			"cancel"
		],
		[
			"onLoaded(): void\tNativeScript - ActivityIndicator",
			"onLoaded()"
		],
		[
			"padding: string\tNativeScript - ProxyViewContainer",
			"padding"
		],
		[
			"focus(): boolean\tNativeScript - ActivityIndicator",
			"focus()"
		],
		[
			"verticalAlignment: string\tNativeScript - ListView",
			"verticalAlignment"
		],
		[
			"byteOffset: number\tNativeScript - ArrayBufferView",
			"byteOffset"
		],
		[
			"byteLength: number\tNativeScript - ArrayBufferView",
			"byteLength"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Image",
			"getLocationOnScreen()"
		],
		[
			"horizontalAlignment: string\tNativeScript - Layout",
			"horizontalAlignment"
		],
		[
			"typeName: string\tNativeScript - ActivityIndicator",
			"typeName"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Image",
			"getLocationInWindow()"
		],
		[
			"_onContextChanged(): void\tNativeScript - TextBase",
			"_onContextChanged()"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Layout",
			"cssPseudoClasses"
		],
		[
			"_onContextChanged(): void\tNativeScript - ListView",
			"_onContextChanged()"
		],
		[
			"minWidth: number\tNativeScript - ActivityIndicator",
			"minWidth"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Frame",
			"getLocationOnScreen()"
		],
		[
			"toString(): string\tNativeScript - SlideTransition",
			"toString()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Image",
			"Static unloadedEvent"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Slider",
			"cssPseudoClasses"
		],
		[
			"Static srcProperty: Property\tNativeScript - Image",
			"Static srcProperty"
		],
		[
			"android: any\tNativeScript - PinchGestureEventData",
			"android"
		],
		[
			"horizontalAlignment: string\tNativeScript - Slider",
			"horizontalAlignment"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Frame",
			"getLocationInWindow()"
		],
		[
			"cssClass: string\tNativeScript - ActivityIndicator",
			"cssClass"
		],
		[
			"start: objectnumbernumber\tNativeScript - Position",
			"start"
		],
		[
			"Static loadedEvent: string\tNativeScript - WebView",
			"Static loadedEvent"
		],
		[
			"baseClassInfo: ClassInfo\tNativeScript - ClassInfo",
			"baseClassInfo"
		],
		[
			"_nativeView: any\tNativeScript - ActivityIndicator",
			"_nativeView"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - WebView",
			"notify<T>(${1:data: T})"
		],
		[
			"className: string\tNativeScript - CustomLayoutView",
			"className"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - WebView",
			"getMeasuredWidth()"
		],
		[
			"Static idProperty: Property\tNativeScript - Slider",
			"Static idProperty"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Frame",
			"Static unloadedEvent"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Label",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - View",
			"getLocationOnScreen()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - View",
			"getLocationInWindow()"
		],
		[
			"delay: number\tNativeScript - AnimationDefinition",
			"delay"
		],
		[
			"new Page( json?: any ): Page\tNativeScript - Page",
			"new Page(${1:json?: any})"
		],
		[
			"object: Observable\tNativeScript - ChangedData<T>",
			"object"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Border",
			"getMeasuredWidth()"
		],
		[
			"okButtonText: string\tNativeScript - AlertOptions",
			"okButtonText"
		],
		[
			"prototype: Error\tNativeScript - ErrorConstructor",
			"prototype"
		],
		[
			"_gestureObservers: any\tNativeScript - LayoutBase",
			"_gestureObservers"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Border",
			"notify<T>(${1:data: T})"
		],
		[
			"cancelable: boolean\tNativeScript - ProgressEvent",
			"cancelable"
		],
		[
			"cancelable: boolean\tNativeScript - ActionOptions",
			"cancelable"
		],
		[
			"marginLeft: number\tNativeScript - AbsoluteLayout",
			"marginLeft"
		],
		[
			"rotate: number\tNativeScript - ProxyViewContainer",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - ProxyViewContainer",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - ProxyViewContainer",
			"scaleY"
		],
		[
			"comb: \"+\"\"~\"\">\"\" \"\tNativeScript - SimpleSelector",
			"comb"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Switch",
			"getMeasuredWidth()"
		],
		[
			"removeChildren(): void\tNativeScript - GridLayout",
			"removeChildren()"
		],
		[
			"backgroundImage: string\tNativeScript - ActionBar",
			"backgroundImage"
		],
		[
			"getUTCMilliseconds(): number\tNativeScript - Date",
			"getUTCMilliseconds()"
		],
		[
			"_childrenCount: number\tNativeScript - WrapLayout",
			"_childrenCount"
		],
		[
			"get( name: string ): any\tNativeScript - HtmlView",
			"get(${1:name: string})"
		],
		[
			"comb: \"+\"\"~\"\">\"\" \"\tNativeScript - PseudoSelector",
			"comb"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Frame",
			"getMeasuredHeight()"
		],
		[
			"_childrenCount: number\tNativeScript - GridLayout",
			"_childrenCount"
		],
		[
			"removeChildren(): void\tNativeScript - LayoutBase",
			"removeChildren()"
		],
		[
			"_setNativeTime(): void\tNativeScript - TimePicker",
			"_setNativeTime()"
		],
		[
			"borderRadius: number\tNativeScript - SegmentedBar",
			"borderRadius"
		],
		[
			"state: number\tNativeScript - PanGestureEventData",
			"state"
		],
		[
			"Error: ErrorConstructor\tNativeScript - TypeError",
			"Error"
		],
		[
			"typeName: string\tNativeScript - EditableTextBase",
			"typeName"
		],
		[
			"_gestureObservers: any\tNativeScript - WrapLayout",
			"_gestureObservers"
		],
		[
			"reverse(): string\tNativeScript - RegExpExecArray",
			"reverse()"
		],
		[
			"borderColor: Color\tNativeScript - AbsoluteLayout",
			"borderColor"
		],
		[
			"_updateLayout(): void\tNativeScript - StackLayout",
			"_updateLayout()"
		],
		[
			"declarations: Declaration\tNativeScript - RuleSet",
			"declarations"
		],
		[
			"addedCount: number\tNativeScript - ChangedData<T>",
			"addedCount"
		],
		[
			"object: Observable\tNativeScript - ChangedData<T>",
			"object"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Frame",
			"_removeFromSuperview()"
		],
		[
			"toLocaleTimeString(): string\tNativeScript - Date",
			"toLocaleTimeString()"
		],
		[
			"toLocaleDateString(): string\tNativeScript - Date",
			"toLocaleDateString()"
		],
		[
			"getLocationInWindow(): Point\tNativeScript - Page",
			"getLocationInWindow()"
		],
		[
			"getLocationOnScreen(): Point\tNativeScript - Page",
			"getLocationOnScreen()"
		],
		[
			"_onContextChanged(): void\tNativeScript - WebView",
			"_onContextChanged()"
		],
		[
			"marginBottom: number\tNativeScript - SegmentedBar",
			"marginBottom"
		],
		[
			"posY: number\tNativeScript - BackgroundDrawParams",
			"posY"
		],
		[
			"posX: number\tNativeScript - BackgroundDrawParams",
			"posX"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Image",
			"_removeFromSuperview()"
		],
		[
			"Static idProperty: Property\tNativeScript - Label",
			"Static idProperty"
		],
		[
			"BUBBLING_PHASE: number\tNativeScript - ErrorEvent",
			"BUBBLING_PHASE"
		],
		[
			"cancelable: boolean\tNativeScript - ProgressEvent",
			"cancelable"
		],
		[
			"automationText: string\tNativeScript - WrapLayout",
			"automationText"
		],
		[
			"minWidth: number\tNativeScript - EditableTextBase",
			"minWidth"
		],
		[
			"backgroundColor: Color\tNativeScript - WrapLayout",
			"backgroundColor"
		],
		[
			"verticalAccuracy: number\tNativeScript - Location",
			"verticalAccuracy"
		],
		[
			"automationText: string\tNativeScript - LayoutBase",
			"automationText"
		],
		[
			"Static idProperty: Property\tNativeScript - Frame",
			"Static idProperty"
		],
		[
			"target: EventTarget\tNativeScript - ProgressEvent",
			"target"
		],
		[
			"reverse(): string\tNativeScript - RegExpExecArray",
			"reverse()"
		],
		[
			"removeChildren(): void\tNativeScript - DockLayout",
			"removeChildren()"
		],
		[
			"_updateLayout(): void\tNativeScript - ContentView",
			"_updateLayout()"
		],
		[
			"backgroundColor: Color\tNativeScript - LayoutBase",
			"backgroundColor"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Layout",
			"getMeasuredWidth()"
		],
		[
			"removeChildren(): void\tNativeScript - WrapLayout",
			"removeChildren()"
		],
		[
			"getActualSize(): Size\tNativeScript - ContentView",
			"getActualSize()"
		],
		[
			"readyState: number\tNativeScript - XMLHttpRequest",
			"readyState"
		],
		[
			"_updateLayout(): void\tNativeScript - Placeholder",
			"_updateLayout()"
		],
		[
			"preventDefault(): void\tNativeScript - ErrorEvent",
			"preventDefault()"
		],
		[
			"getActualSize(): Size\tNativeScript - StackLayout",
			"getActualSize()"
		],
		[
			"toLocaleDateString(): string\tNativeScript - Date",
			"toLocaleDateString()"
		],
		[
			"horizontalAlignment: string\tNativeScript - Label",
			"horizontalAlignment"
		],
		[
			"visibility: string\tNativeScript - AbsoluteLayout",
			"visibility"
		],
		[
			"toLocaleTimeString(): string\tNativeScript - Date",
			"toLocaleTimeString()"
		],
		[
			"statusText: string\tNativeScript - XMLHttpRequest",
			"statusText"
		],
		[
			"Error: ErrorConstructor\tNativeScript - TypeError",
			"Error"
		],
		[
			"Static unloadedEvent: string\tNativeScript - View",
			"Static unloadedEvent"
		],
		[
			"fontSize: number\tNativeScript - EditableTextBase",
			"fontSize"
		],
		[
			"navigationBarHeight: number\tNativeScript - Frame",
			"navigationBarHeight"
		],
		[
			"navBarVisibility: string\tNativeScript - iOSFrame",
			"navBarVisibility"
		],
		[
			"getActualSize(): Size\tNativeScript - Placeholder",
			"getActualSize()"
		],
		[
			"eventName: string\tNativeScript - ScrollEventData",
			"eventName"
		],
		[
			"cssClass: string\tNativeScript - EditableTextBase",
			"cssClass"
		],
		[
			"isLayoutValid: boolean\tNativeScript - WrapLayout",
			"isLayoutValid"
		],
		[
			"name: string\tNativeScript - NavigationTransition",
			"name"
		],
		[
			"backgroundColor: Color\tNativeScript - DockLayout",
			"backgroundColor"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Label",
			"cssPseudoClasses"
		],
		[
			"get( name: string ): any\tNativeScript - Repeater",
			"get(${1:name: string})"
		],
		[
			"actionView: View\tNativeScript - NavigationButton",
			"actionView"
		],
		[
			"requestLayout(): void\tNativeScript - ContentView",
			"requestLayout()"
		],
		[
			"minimumUpdateTime: number\tNativeScript - Options",
			"minimumUpdateTime"
		],
		[
			"get( name: string ): any\tNativeScript - TextBase",
			"get(${1:name: string})"
		],
		[
			"Static loadedEvent: string\tNativeScript - Switch",
			"Static loadedEvent"
		],
		[
			"verticalAlignment: string\tNativeScript - WebView",
			"verticalAlignment"
		],
		[
			"Static idProperty: Property\tNativeScript - Image",
			"Static idProperty"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - WebView",
			"isLayoutRequired"
		],
		[
			"backgroundImage: string\tNativeScript - SearchBar",
			"backgroundImage"
		],
		[
			"horizontalAlignment: string\tNativeScript - Style",
			"horizontalAlignment"
		],
		[
			"cssType: string\tNativeScript - ActivityIndicator",
			"cssType"
		],
		[
			"automationText: string\tNativeScript - DockLayout",
			"automationText"
		],
		[
			"horizontalAlignment: string\tNativeScript - Frame",
			"horizontalAlignment"
		],
		[
			"getUTCMilliseconds(): number\tNativeScript - Date",
			"getUTCMilliseconds()"
		],
		[
			"paddingBottom: number\tNativeScript - StackLayout",
			"paddingBottom"
		],
		[
			"get( name: string ): any\tNativeScript - Bindable",
			"get(${1:name: string})"
		],
		[
			"ios: any\tNativeScript - RotationGestureEventData",
			"ios"
		],
		[
			"toString(): string\tNativeScript - FadeTransition",
			"toString()"
		],
		[
			"_childrenCount: number\tNativeScript - ListPicker",
			"_childrenCount"
		],
		[
			"animated: boolean\tNativeScript - NavigationEntry",
			"animated"
		],
		[
			"expression: string\tNativeScript - BindingOptions",
			"expression"
		],
		[
			"_nativeView: any\tNativeScript - EditableTextBase",
			"_nativeView"
		],
		[
			"resolvedPage: Page\tNativeScript - BackstackEntry",
			"resolvedPage"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Frame",
			"cssPseudoClasses"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Layout",
			"notify<T>(${1:data: T})"
		],
		[
			"horizontalAlignment: string\tNativeScript - Image",
			"horizontalAlignment"
		],
		[
			"get( name: string ): any\tNativeScript - Progress",
			"get(${1:name: string})"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Label",
			"getMeasuredHeight()"
		],
		[
			"Static loadedEvent: string\tNativeScript - Layout",
			"Static loadedEvent"
		],
		[
			"_gestureObservers: any\tNativeScript - ListPicker",
			"_gestureObservers"
		],
		[
			"translateY: number\tNativeScript - AbsoluteLayout",
			"translateY"
		],
		[
			"translateX: number\tNativeScript - AbsoluteLayout",
			"translateX"
		],
		[
			"Static loadedEvent: string\tNativeScript - Button",
			"Static loadedEvent"
		],
		[
			"effectiveValue: any\tNativeScript - PropertyEntry",
			"effectiveValue"
		],
		[
			"inheritedValue: any\tNativeScript - PropertyEntry",
			"inheritedValue"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Image",
			"cssPseudoClasses"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Slider",
			"notify<T>(${1:data: T})"
		],
		[
			"valueSource: number\tNativeScript - PropertyEntry",
			"valueSource"
		],
		[
			"requestLayout(): void\tNativeScript - Placeholder",
			"requestLayout()"
		],
		[
			"opacity: number\tNativeScript - ActivityIndicator",
			"opacity"
		],
		[
			"widthPixels: number\tNativeScript - ScreenMetrics",
			"widthPixels"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Slider",
			"getMeasuredWidth()"
		],
		[
			"Error: ErrorConstructor\tNativeScript - EvalError",
			"Error"
		],
		[
			"originX: number\tNativeScript - ActivityIndicator",
			"originX"
		],
		[
			"defaultText: string\tNativeScript - PromptOptions",
			"defaultText"
		],
		[
			"_childrenCount: number\tNativeScript - ScrollView",
			"_childrenCount"
		],
		[
			"originY: number\tNativeScript - ActivityIndicator",
			"originY"
		],
		[
			"_gestureObservers: any\tNativeScript - DockLayout",
			"_gestureObservers"
		],
		[
			"automationText: string\tNativeScript - ListPicker",
			"automationText"
		],
		[
			"_gestureObservers: any\tNativeScript - ScrollView",
			"_gestureObservers"
		],
		[
			"cancelable: boolean\tNativeScript - PromptOptions",
			"cancelable"
		],
		[
			"_onContextChanged(): void\tNativeScript - TabView",
			"_onContextChanged()"
		],
		[
			"minuteInterval: number\tNativeScript - TimePicker",
			"minuteInterval"
		],
		[
			"automationText: string\tNativeScript - ScrollView",
			"automationText"
		],
		[
			"backgroundColor: Color\tNativeScript - ScrollView",
			"backgroundColor"
		],
		[
			"backgroundColor: Color\tNativeScript - ListPicker",
			"backgroundColor"
		],
		[
			"Color( hex: string ): Color\tNativeScript - Color",
			"Color(${1:hex: string})"
		],
		[
			"isLayoutValid: boolean\tNativeScript - TimePicker",
			"isLayoutValid"
		],
		[
			"get( name: string ): any\tNativeScript - ListView",
			"get(${1:name: string})"
		],
		[
			"new View( json?: any ): View\tNativeScript - View",
			"new View(${1:json?: any})"
		],
		[
			"_getAndroidTabView(): any\tNativeScript - TabView",
			"_getAndroidTabView()"
		],
		[
			"typeName: string\tNativeScript - NavigationButton",
			"typeName"
		],
		[
			"onLoaded(): void\tNativeScript - CustomLayoutView",
			"onLoaded()"
		],
		[
			"isLayoutValid: boolean\tNativeScript - GridLayout",
			"isLayoutValid"
		],
		[
			"backgroundColor: Color\tNativeScript - GridLayout",
			"backgroundColor"
		],
		[
			"onLoaded(): void\tNativeScript - EditableTextBase",
			"onLoaded()"
		],
		[
			"Static unloadedEvent: string\tNativeScript - Page",
			"Static unloadedEvent"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Button",
			"getMeasuredWidth()"
		],
		[
			"currentActivity: any\tNativeScript - AndroidFrame",
			"currentActivity"
		],
		[
			"automationText: string\tNativeScript - GridLayout",
			"automationText"
		],
		[
			"focus(): boolean\tNativeScript - CustomLayoutView",
			"focus()"
		],
		[
			"_childrenCount: number\tNativeScript - DockLayout",
			"_childrenCount"
		],
		[
			"Static loadedEvent: string\tNativeScript - Border",
			"Static loadedEvent"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Button",
			"notify<T>(${1:data: T})"
		],
		[
			"focus(): boolean\tNativeScript - EditableTextBase",
			"focus()"
		],
		[
			"toString(): string\tNativeScript - FadeTransition",
			"toString()"
		],
		[
			"isLayoutValid: boolean\tNativeScript - DatePicker",
			"isLayoutValid"
		],
		[
			"backgroundColor: Color\tNativeScript - TimePicker",
			"backgroundColor"
		],
		[
			"isLayoutValid: boolean\tNativeScript - ScrollView",
			"isLayoutValid"
		],
		[
			"typeName: string\tNativeScript - SegmentedBarItem",
			"typeName"
		],
		[
			"automationText: string\tNativeScript - TimePicker",
			"automationText"
		],
		[
			"typeName: string\tNativeScript - CustomLayoutView",
			"typeName"
		],
		[
			"readyState: number\tNativeScript - XMLHttpRequest",
			"readyState"
		],
		[
			"_gestureObservers: any\tNativeScript - TimePicker",
			"_gestureObservers"
		],
		[
			"cssClasses: Setstring\tNativeScript - Placeholder",
			"cssClasses"
		],
		[
			"paddingTop: number\tNativeScript - AbsoluteLayout",
			"paddingTop"
		],
		[
			"_childrenCount: number\tNativeScript - TimePicker",
			"_childrenCount"
		],
		[
			"_childrenCount: number\tNativeScript - LayoutBase",
			"_childrenCount"
		],
		[
			"new ItemSpec(): ItemSpec\tNativeScript - ItemSpec",
			"new ItemSpec()"
		],
		[
			"minWidth: number\tNativeScript - CustomLayoutView",
			"minWidth"
		],
		[
			"_cssState: any\tNativeScript - ProxyViewContainer",
			"_cssState"
		],
		[
			"_domId: number\tNativeScript - ProxyViewContainer",
			"_domId"
		],
		[
			"method: string\tNativeScript - HttpRequestOptions",
			"method"
		],
		[
			"onUnloaded(): void\tNativeScript - AbsoluteLayout",
			"onUnloaded()"
		],
		[
			"content: HttpContent\tNativeScript - HttpResponse",
			"content"
		],
		[
			"statusText: string\tNativeScript - XMLHttpRequest",
			"statusText"
		],
		[
			"verticalAlignment: string\tNativeScript - TabView",
			"verticalAlignment"
		],
		[
			"getChildrenCount(): number\tNativeScript - Layout",
			"getChildrenCount()"
		],
		[
			"height: number\tNativeScript - CommonLayoutParams",
			"height"
		],
		[
			"stylesheet: StyleSheet\tNativeScript - SyntaxTree",
			"stylesheet"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - TabView",
			"isLayoutRequired"
		],
		[
			"underline: number\tNativeScript - FormattedString",
			"underline"
		],
		[
			"object: Observable\tNativeScript - DownloadedData",
			"object"
		],
		[
			"backgroundColor: Color\tNativeScript - DatePicker",
			"backgroundColor"
		],
		[
			"_getStyleScope(): StyleScope\tNativeScript - Page",
			"_getStyleScope()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Label",
			"_removeFromSuperview()"
		],
		[
			"automationText: string\tNativeScript - DatePicker",
			"automationText"
		],
		[
			"cssClasses: Setstring\tNativeScript - ContentView",
			"cssClasses"
		],
		[
			"new Span( json?: any ): Span\tNativeScript - Span",
			"new Span(${1:json?: any})"
		],
		[
			"image: ImageSource\tNativeScript - DownloadedData",
			"image"
		],
		[
			"_gestureObservers: any\tNativeScript - DatePicker",
			"_gestureObservers"
		],
		[
			"isLayoutValid: boolean\tNativeScript - ListPicker",
			"isLayoutValid"
		],
		[
			"debug: boolean\tNativeScript - Module utils/debug",
			"debug"
		],
		[
			"verticalOffset: number\tNativeScript - ScrollView",
			"verticalOffset"
		],
		[
			"isLayoutValid: boolean\tNativeScript - LayoutBase",
			"isLayoutValid"
		],
		[
			"_gestureObservers: any\tNativeScript - GridLayout",
			"_gestureObservers"
		],
		[
			"_childrenCount: number\tNativeScript - DatePicker",
			"_childrenCount"
		],
		[
			"get( object: any ): Source\tNativeScript - Source",
			"get(${1:object: any})"
		],
		[
			"Error: ErrorConstructor\tNativeScript - EvalError",
			"Error"
		],
		[
			"height: number\tNativeScript - ProxyViewContainer",
			"height"
		],
		[
			"get( name: string ): any\tNativeScript - TextView",
			"get(${1:name: string})"
		],
		[
			"_nativeView: any\tNativeScript - CustomLayoutView",
			"_nativeView"
		],
		[
			"backgroundImage: string\tNativeScript - TextField",
			"backgroundImage"
		],
		[
			"dismissSoftInput(): void\tNativeScript - TextView",
			"dismissSoftInput()"
		],
		[
			"clipToBounds: boolean\tNativeScript - StackLayout",
			"clipToBounds"
		],
		[
			"okButtonText: string\tNativeScript - LoginOptions",
			"okButtonText"
		],
		[
			"prototype: Error\tNativeScript - ErrorConstructor",
			"prototype"
		],
		[
			"preventDefault(): void\tNativeScript - ErrorEvent",
			"preventDefault()"
		],
		[
			"remove( key: string ): void\tNativeScript - Cache",
			"remove(${1:key: string})"
		],
		[
			"margin: string\tNativeScript - ProxyViewContainer",
			"margin"
		],
		[
			"target: EventTarget\tNativeScript - ProgressEvent",
			"target"
		],
		[
			"isEnabled: boolean\tNativeScript - AbsoluteLayout",
			"isEnabled"
		],
		[
			"length: number\tNativeScript - ObservableArray<T>",
			"length"
		],
		[
			"cancelable: boolean\tNativeScript - DialogOptions",
			"cancelable"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Image",
			"getMeasuredHeight()"
		],
		[
			"requestLayout(): void\tNativeScript - StackLayout",
			"requestLayout()"
		],
		[
			"horizontalAlignment: string\tNativeScript - Style",
			"horizontalAlignment"
		],
		[
			"Static loadedEvent: string\tNativeScript - Slider",
			"Static loadedEvent"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Switch",
			"notify<T>(${1:data: T})"
		],
		[
			"cssClasses: Setstring\tNativeScript - StackLayout",
			"cssClasses"
		],
		[
			"isLayoutValid: boolean\tNativeScript - DockLayout",
			"isLayoutValid"
		],
		[
			"addedCount: number\tNativeScript - ChangedData<T>",
			"addedCount"
		],
		[
			"BUBBLING_PHASE: number\tNativeScript - ErrorEvent",
			"BUBBLING_PHASE"
		],
		[
			"cssClass: string\tNativeScript - CustomLayoutView",
			"cssClass"
		],
		[
			"marginBottom: number\tNativeScript - StackLayout",
			"marginBottom"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Float32Array",
			"buffer"
		],
		[
			"bindingContext: any\tNativeScript - SegmentedBar",
			"bindingContext"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Node",
			"cssPseudoClasses"
		],
		[
			"requestLayout(): void\tNativeScript - LayoutBase",
			"requestLayout()"
		],
		[
			"borderWidth: number\tNativeScript - SegmentedBar",
			"borderWidth"
		],
		[
			"pseudoClasses: Setstring\tNativeScript - Changes",
			"pseudoClasses"
		],
		[
			"heightDIPs: number\tNativeScript - ScreenMetrics",
			"heightDIPs"
		],
		[
			"verticalAlignment: string\tNativeScript - Layout",
			"verticalAlignment"
		],
		[
			"reverse(): Uint8Array\tNativeScript - Uint8Array",
			"reverse()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Label",
			"notify<T>(${1:data: T})"
		],
		[
			"getTimezoneOffset(): number\tNativeScript - Date",
			"getTimezoneOffset()"
		],
		[
			"cssType: string\tNativeScript - EditableTextBase",
			"cssType"
		],
		[
			"reverse(): Uint8Array\tNativeScript - Uint8Array",
			"reverse()"
		],
		[
			"formData(): PromiseFormData\tNativeScript - Body",
			"formData()"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Label",
			"getMeasuredWidth()"
		],
		[
			"length: number\tNativeScript - Uint8ClampedArray",
			"length"
		],
		[
			"object: Observable\tNativeScript - NavigatedData",
			"object"
		],
		[
			"height: number\tNativeScript - ActivityIndicator",
			"height"
		],
		[
			"_updateLayout(): void\tNativeScript - GridLayout",
			"_updateLayout()"
		],
		[
			"shift(): string\tNativeScript - RegExpMatchArray",
			"shift()"
		],
		[
			"paddingBottom: number\tNativeScript - DockLayout",
			"paddingBottom"
		],
		[
			"requestLayout(): void\tNativeScript - ScrollView",
			"requestLayout()"
		],
		[
			"Static idProperty: Property\tNativeScript - Page",
			"Static idProperty"
		],
		[
			"msCaching: string\tNativeScript - XMLHttpRequest",
			"msCaching"
		],
		[
			"marginRight: number\tNativeScript - SegmentedBar",
			"marginRight"
		],
		[
			"reverse(): Int16Array\tNativeScript - Int16Array",
			"reverse()"
		],
		[
			"paddingBottom: number\tNativeScript - GridLayout",
			"paddingBottom"
		],
		[
			"_onContextChanged(): void\tNativeScript - Switch",
			"_onContextChanged()"
		],
		[
			"length: number\tNativeScript - Uint8ClampedArray",
			"length"
		],
		[
			"backgroundImage: string\tNativeScript - TextView",
			"backgroundImage"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Float32Array",
			"buffer"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Float64Array",
			"buffer"
		],
		[
			"view: View\tNativeScript - PinchGestureEventData",
			"view"
		],
		[
			"end: objectnumbernumber\tNativeScript - Position",
			"end"
		],
		[
			"margin: string\tNativeScript - ActivityIndicator",
			"margin"
		],
		[
			"item: any\tNativeScript - AndroidOptionEventData",
			"item"
		],
		[
			"removeColumns(): void\tNativeScript - GridLayout",
			"removeColumns()"
		],
		[
			"headers: HeaderInit\tNativeScript - ResponseInit",
			"headers"
		],
		[
			"paddingRight: number\tNativeScript - StackLayout",
			"paddingRight"
		],
		[
			"_childrenCount: number\tNativeScript - SearchBar",
			"_childrenCount"
		],
		[
			"cssClasses: Setstring\tNativeScript - ListPicker",
			"cssClasses"
		],
		[
			"paddingBottom: number\tNativeScript - WrapLayout",
			"paddingBottom"
		],
		[
			"context: any\tNativeScript - CreateViewEventData",
			"context"
		],
		[
			"_gestureObservers: any\tNativeScript - SearchBar",
			"_gestureObservers"
		],
		[
			"getDuration(): number\tNativeScript - Transition",
			"getDuration()"
		],
		[
			"loaded: number\tNativeScript - ProgressEventInit",
			"loaded"
		],
		[
			"cssClasses: Setstring\tNativeScript - TimePicker",
			"cssClasses"
		],
		[
			"layerType: number\tNativeScript - CacheLayerType",
			"layerType"
		],
		[
			"automationText: string\tNativeScript - SearchBar",
			"automationText"
		],
		[
			"backgroundColor: Color\tNativeScript - SearchBar",
			"backgroundColor"
		],
		[
			"borderRadius: number\tNativeScript - Placeholder",
			"borderRadius"
		],
		[
			"get( name: string ): any\tNativeScript - TabView",
			"get(${1:name: string})"
		],
		[
			"msCaching: string\tNativeScript - XMLHttpRequest",
			"msCaching"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Button",
			"isLayoutRequired"
		],
		[
			"verticalAlignment: string\tNativeScript - Switch",
			"verticalAlignment"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Border",
			"isLayoutRequired"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Style",
			"notify<T>(${1:data: T})"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Switch",
			"isLayoutRequired"
		],
		[
			"rotate: number\tNativeScript - ActivityIndicator",
			"rotate"
		],
		[
			"Static idProperty: Property\tNativeScript - View",
			"Static idProperty"
		],
		[
			"scaleX: number\tNativeScript - ActivityIndicator",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - ActivityIndicator",
			"scaleY"
		],
		[
			"getActualSize(): Size\tNativeScript - LayoutBase",
			"getActualSize()"
		],
		[
			"reverse(): Int32Array\tNativeScript - Int32Array",
			"reverse()"
		],
		[
			"requestLayout(): void\tNativeScript - TimePicker",
			"requestLayout()"
		],
		[
			"currentTarget: EventTarget\tNativeScript - Event",
			"currentTarget"
		],
		[
			"_updateLayout(): void\tNativeScript - WrapLayout",
			"_updateLayout()"
		],
		[
			"requestLayout(): void\tNativeScript - DockLayout",
			"requestLayout()"
		],
		[
			"Frame( json?: any ): Frame\tNativeScript - Frame",
			"Frame(${1:json?: any})"
		],
		[
			"_updateLayout(): void\tNativeScript - ListPicker",
			"_updateLayout()"
		],
		[
			"isLayoutValid: boolean\tNativeScript - SearchBar",
			"isLayoutValid"
		],
		[
			"isLayoutValid: boolean\tNativeScript - TextField",
			"isLayoutValid"
		],
		[
			"Label( json?: any ): Label\tNativeScript - Label",
			"Label(${1:json?: any})"
		],
		[
			"verticalAlignment: string\tNativeScript - Button",
			"verticalAlignment"
		],
		[
			"formData(): PromiseFormData\tNativeScript - Body",
			"formData()"
		],
		[
			"fontSize: number\tNativeScript - FormattedString",
			"fontSize"
		],
		[
			"headers: HeaderInit\tNativeScript - ResponseInit",
			"headers"
		],
		[
			"_context: any\tNativeScript - ProxyViewContainer",
			"_context"
		],
		[
			"backgroundPosition: string\tNativeScript - Style",
			"backgroundPosition"
		],
		[
			"backgroundImage: string\tNativeScript - Progress",
			"backgroundImage"
		],
		[
			"responseBody: any\tNativeScript - XMLHttpRequest",
			"responseBody"
		],
		[
			"responseBody: any\tNativeScript - XMLHttpRequest",
			"responseBody"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Frame",
			"notify<T>(${1:data: T})"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Layout",
			"isLayoutRequired"
		],
		[
			"eventName: string\tNativeScript - DownloadedData",
			"eventName"
		],
		[
			"currentTarget: EventTarget\tNativeScript - Event",
			"currentTarget"
		],
		[
			"verticalAlignment: string\tNativeScript - Border",
			"verticalAlignment"
		],
		[
			"typeName: string\tNativeScript - FormattedString",
			"typeName"
		],
		[
			"marginBottom: number\tNativeScript - Placeholder",
			"marginBottom"
		],
		[
			"cssClasses: Setstring\tNativeScript - ScrollView",
			"cssClasses"
		],
		[
			"_onContextChanged(): void\tNativeScript - Button",
			"_onContextChanged()"
		],
		[
			"loaded: number\tNativeScript - ProgressEventInit",
			"loaded"
		],
		[
			"object: Observable\tNativeScript - LoadEventData",
			"object"
		],
		[
			"cssClasses: Setstring\tNativeScript - GridLayout",
			"cssClasses"
		],
		[
			"Static Delete: string\tNativeScript - ChangeType",
			"Static Delete"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Image",
			"getMeasuredWidth()"
		],
		[
			"raw: string\tNativeScript - TemplateStringsArray",
			"raw"
		],
		[
			"horizontalAlignment: string\tNativeScript - View",
			"horizontalAlignment"
		],
		[
			"Static Splice: string\tNativeScript - ChangeType",
			"Static Splice"
		],
		[
			"Static Update: string\tNativeScript - ChangeType",
			"Static Update"
		],
		[
			"backgroundImage: string\tNativeScript - Repeater",
			"backgroundImage"
		],
		[
			"getActualSize(): Size\tNativeScript - ListPicker",
			"getActualSize()"
		],
		[
			"toJSON( key?: any ): string\tNativeScript - Date",
			"toJSON(${1:key?: any})"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Float64Array",
			"buffer"
		],
		[
			"getActualSize(): Size\tNativeScript - TimePicker",
			"getActualSize()"
		],
		[
			"Error: ErrorConstructor\tNativeScript - URIError",
			"Error"
		],
		[
			"Image( json?: any ): Image\tNativeScript - Image",
			"Image(${1:json?: any})"
		],
		[
			"getActualSize(): Size\tNativeScript - WrapLayout",
			"getActualSize()"
		],
		[
			"backgroundColor: Color\tNativeScript - TextField",
			"backgroundColor"
		],
		[
			"resetValue(): void\tNativeScript - PropertyEntry",
			"resetValue()"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - Page",
			"_removeFromSuperview()"
		],
		[
			"object: Observable\tNativeScript - ItemEventData",
			"object"
		],
		[
			"cancelBubble: boolean\tNativeScript - ErrorEvent",
			"cancelBubble"
		],
		[
			"_updateLayout(): void\tNativeScript - TimePicker",
			"_updateLayout()"
		],
		[
			"minHeight: number\tNativeScript - AbsoluteLayout",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - AbsoluteLayout",
			"marginTop"
		],
		[
			"eventName: string\tNativeScript - ChangedData<T>",
			"eventName"
		],
		[
			"toLocaleString(): string\tNativeScript - List<T>",
			"toLocaleString()"
		],
		[
			"clearWriters(): any\tNativeScript - Module trace",
			"clearWriters()"
		],
		[
			"_childrenCount: number\tNativeScript - ActionBar",
			"_childrenCount"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Cache",
			"notify<T>(${1:data: T})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - View",
			"cssPseudoClasses"
		],
		[
			"width: number\tNativeScript - CommonLayoutParams",
			"width"
		],
		[
			"has( key: K ): boolean\tNativeScript - Map<K, V>",
			"has(${1:key: K})"
		],
		[
			"itemsLayout: LayoutBase\tNativeScript - Repeater",
			"itemsLayout"
		],
		[
			"clipToBounds: boolean\tNativeScript - GridLayout",
			"clipToBounds"
		],
		[
			"options: number\tNativeScript - PropertyMetadata",
			"options"
		],
		[
			"isLoaded: boolean\tNativeScript - AbsoluteLayout",
			"isLoaded"
		],
		[
			"selectedIndex: number\tNativeScript - ListPicker",
			"selectedIndex"
		],
		[
			"Static Delete: string\tNativeScript - ChangeType",
			"Static Delete"
		],
		[
			"_gestureObservers: any\tNativeScript - ActionBar",
			"_gestureObservers"
		],
		[
			"get( name: string ): any\tNativeScript - WebView",
			"get(${1:name: string})"
		],
		[
			"newValue: any\tNativeScript - PropertyChangeData",
			"newValue"
		],
		[
			"Static Splice: string\tNativeScript - ChangeType",
			"Static Splice"
		],
		[
			"_onContextChanged(): void\tNativeScript - Border",
			"_onContextChanged()"
		],
		[
			"cssClasses: Setstring\tNativeScript - DatePicker",
			"cssClasses"
		],
		[
			"automationText: string\tNativeScript - TextField",
			"automationText"
		],
		[
			"automationText: string\tNativeScript - ActionBar",
			"automationText"
		],
		[
			"Static Update: string\tNativeScript - ChangeType",
			"Static Update"
		],
		[
			"backgroundColor: Color\tNativeScript - ActionBar",
			"backgroundColor"
		],
		[
			"backgroundImage: string\tNativeScript - TextBase",
			"backgroundImage"
		],
		[
			"loadSize: number\tNativeScript - VirtualArray<T>",
			"loadSize"
		],
		[
			"typeName: string\tNativeScript - VirtualArray<T>",
			"typeName"
		],
		[
			"cancelBubble: boolean\tNativeScript - ErrorEvent",
			"cancelBubble"
		],
		[
			"borderRadius: number\tNativeScript - ContentView",
			"borderRadius"
		],
		[
			"toLocaleString(): string\tNativeScript - List<T>",
			"toLocaleString()"
		],
		[
			"borderRadius: number\tNativeScript - StackLayout",
			"borderRadius"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Frame",
			"getMeasuredWidth()"
		],
		[
			"has( key: K ): boolean\tNativeScript - Map<K, V>",
			"has(${1:key: K})"
		],
		[
			"width: number\tNativeScript - ProxyViewContainer",
			"width"
		],
		[
			"cancelable: boolean\tNativeScript - LoginOptions",
			"cancelable"
		],
		[
			"getTimezoneOffset(): number\tNativeScript - Date",
			"getTimezoneOffset()"
		],
		[
			"target: View\tNativeScript - AnimationDefinition",
			"target"
		],
		[
			"exports: any\tNativeScript - Module NativeScript",
			"exports"
		],
		[
			"Static loadedEvent: string\tNativeScript - Label",
			"Static loadedEvent"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Style",
			"notify<T>(${1:data: T})"
		],
		[
			"_gestureObservers: any\tNativeScript - TextField",
			"_gestureObservers"
		],
		[
			"oldValue: any\tNativeScript - PropertyChangeData",
			"oldValue"
		],
		[
			"_childrenCount: number\tNativeScript - TextField",
			"_childrenCount"
		],
		[
			"raw: string\tNativeScript - TemplateStringsArray",
			"raw"
		],
		[
			"getActualSize(): Size\tNativeScript - DockLayout",
			"getActualSize()"
		],
		[
			"eventName: string\tNativeScript - ChangedData<T>",
			"eventName"
		],
		[
			"requestLayout(): void\tNativeScript - ListPicker",
			"requestLayout()"
		],
		[
			"originY: number\tNativeScript - CustomLayoutView",
			"originY"
		],
		[
			"originX: number\tNativeScript - CustomLayoutView",
			"originX"
		],
		[
			"opacity: number\tNativeScript - CustomLayoutView",
			"opacity"
		],
		[
			"backgroundImage: string\tNativeScript - HtmlView",
			"backgroundImage"
		],
		[
			"isLayoutValid: boolean\tNativeScript - ActionBar",
			"isLayoutValid"
		],
		[
			"android: any\tNativeScript - PanGestureEventData",
			"android"
		],
		[
			"Cache( json?: any ): Cache\tNativeScript - Cache",
			"Cache(${1:json?: any})"
		],
		[
			"cssPseudoClasses: Setstring\tNativeScript - Page",
			"cssPseudoClasses"
		],
		[
			"marginBottom: number\tNativeScript - ContentView",
			"marginBottom"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - Page",
			"getMeasuredHeight()"
		],
		[
			"className: string\tNativeScript - AbsoluteLayout",
			"className"
		],
		[
			"options: number\tNativeScript - PropertyMetadata",
			"options"
		],
		[
			"cancelable: boolean\tNativeScript - AlertOptions",
			"cancelable"
		],
		[
			"paddingBottom: number\tNativeScript - LayoutBase",
			"paddingBottom"
		],
		[
			"_onContextChanged(): void\tNativeScript - Layout",
			"_onContextChanged()"
		],
		[
			"horizontalAlignment: string\tNativeScript - Page",
			"horizontalAlignment"
		],
		[
			"toJSON( key?: any ): string\tNativeScript - Date",
			"toJSON(${1:key?: any})"
		],
		[
			"_createUI(): void\tNativeScript - AbsoluteLayout",
			"_createUI()"
		],
		[
			"getActualSize(): Size\tNativeScript - GridLayout",
			"getActualSize()"
		],
		[
			"cssType: string\tNativeScript - CustomLayoutView",
			"cssType"
		],
		[
			"clipToBounds: boolean\tNativeScript - LayoutBase",
			"clipToBounds"
		],
		[
			"requestLayout(): void\tNativeScript - GridLayout",
			"requestLayout()"
		],
		[
			"requestLayout(): void\tNativeScript - DatePicker",
			"requestLayout()"
		],
		[
			"curve: any\tNativeScript - KeyframeAnimationInfo",
			"curve"
		],
		[
			"Error: ErrorConstructor\tNativeScript - URIError",
			"Error"
		],
		[
			"backgroundPosition: string\tNativeScript - Style",
			"backgroundPosition"
		],
		[
			"reverse(): Int32Array\tNativeScript - Int32Array",
			"reverse()"
		],
		[
			"_onContextChanged(): void\tNativeScript - Slider",
			"_onContextChanged()"
		],
		[
			"reverse(): Int16Array\tNativeScript - Int16Array",
			"reverse()"
		],
		[
			"Static loadedEvent: string\tNativeScript - Frame",
			"Static loadedEvent"
		],
		[
			"view: View\tNativeScript - TouchGestureEventData",
			"view"
		],
		[
			"isTrusted: boolean\tNativeScript - ProgressEvent",
			"isTrusted"
		],
		[
			"getMeasuredHeight(): number\tNativeScript - View",
			"getMeasuredHeight()"
		],
		[
			"originY: number\tNativeScript - EditableTextBase",
			"originY"
		],
		[
			"originX: number\tNativeScript - EditableTextBase",
			"originX"
		],
		[
			"clipToBounds: boolean\tNativeScript - WrapLayout",
			"clipToBounds"
		],
		[
			"getActualSize(): Size\tNativeScript - DatePicker",
			"getActualSize()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Image",
			"notify<T>(${1:data: T})"
		],
		[
			"opacity: number\tNativeScript - EditableTextBase",
			"opacity"
		],
		[
			"_updateLayout(): void\tNativeScript - DatePicker",
			"_updateLayout()"
		],
		[
			"cssClasses: Setstring\tNativeScript - DockLayout",
			"cssClasses"
		],
		[
			"requestLayout(): void\tNativeScript - WrapLayout",
			"requestLayout()"
		],
		[
			"topmost(): Frame\tNativeScript - Module ui/frame",
			"topmost()"
		],
		[
			"_cssState: any\tNativeScript - ActivityIndicator",
			"_cssState"
		],
		[
			"_updateLayout(): void\tNativeScript - ScrollView",
			"_updateLayout()"
		],
		[
			"_domId: number\tNativeScript - ActivityIndicator",
			"_domId"
		],
		[
			"eventPhase: number\tNativeScript - ProgressEvent",
			"eventPhase"
		],
		[
			"cssClasses: Setstring\tNativeScript - WrapLayout",
			"cssClasses"
		],
		[
			"_removeFromSuperview(): any\tNativeScript - View",
			"_removeFromSuperview()"
		],
		[
			"Static loadedEvent: string\tNativeScript - Image",
			"Static loadedEvent"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Slider",
			"isLayoutRequired"
		],
		[
			"_updateLayout(): void\tNativeScript - DockLayout",
			"_updateLayout()"
		],
		[
			"view: View\tNativeScript - SwipeGestureEventData",
			"view"
		],
		[
			"backgroundImage: string\tNativeScript - ListView",
			"backgroundImage"
		],
		[
			"cssClasses: Setstring\tNativeScript - LayoutBase",
			"cssClasses"
		],
		[
			"clipToBounds: boolean\tNativeScript - DockLayout",
			"clipToBounds"
		],
		[
			"getActualSize(): Size\tNativeScript - ScrollView",
			"getActualSize()"
		],
		[
			"eventPhase: number\tNativeScript - ProgressEvent",
			"eventPhase"
		],
		[
			"_isVisible: boolean\tNativeScript - SegmentedBar",
			"_isVisible"
		],
		[
			"isTrusted: boolean\tNativeScript - ProgressEvent",
			"isTrusted"
		],
		[
			"_updateLayout(): void\tNativeScript - LayoutBase",
			"_updateLayout()"
		],
		[
			"shift(): string\tNativeScript - RegExpMatchArray",
			"shift()"
		],
		[
			"verticalAlignment: string\tNativeScript - Slider",
			"verticalAlignment"
		],
		[
			"automationText: string\tNativeScript - TextView",
			"automationText"
		],
		[
			"total: number\tNativeScript - ProgressEventInit",
			"total"
		],
		[
			"_isVisible: boolean\tNativeScript - StackLayout",
			"_isVisible"
		],
		[
			"_childrenCount: number\tNativeScript - ListView",
			"_childrenCount"
		],
		[
			"bindingContext: any\tNativeScript - StackLayout",
			"bindingContext"
		],
		[
			"borderWidth: number\tNativeScript - StackLayout",
			"borderWidth"
		],
		[
			"_gestureObservers: any\tNativeScript - ListView",
			"_gestureObservers"
		],
		[
			"automationText: string\tNativeScript - ListView",
			"automationText"
		],
		[
			"backgroundColor: Color\tNativeScript - ListView",
			"backgroundColor"
		],
		[
			"isLayoutValid: boolean\tNativeScript - ListView",
			"isLayoutValid"
		],
		[
			"context: RequestContext\tNativeScript - Request",
			"context"
		],
		[
			"toLocaleString(): string\tNativeScript - Object",
			"toLocaleString()"
		],
		[
			"timeStamp: number\tNativeScript - ProgressEvent",
			"timeStamp"
		],
		[
			"borderRadius: number\tNativeScript - GridLayout",
			"borderRadius"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Label",
			"isLayoutRequired"
		],
		[
			"getCurve(): any\tNativeScript - SlideTransition",
			"getCurve()"
		],
		[
			"statusText: string\tNativeScript - ResponseInit",
			"statusText"
		],
		[
			"context: RequestContext\tNativeScript - Request",
			"context"
		],
		[
			"_domId: number\tNativeScript - CustomLayoutView",
			"_domId"
		],
		[
			"_cssState: any\tNativeScript - CustomLayoutView",
			"_cssState"
		],
		[
			"_onContextChanged(): void\tNativeScript - Image",
			"_onContextChanged()"
		],
		[
			"verticalAlignment: string\tNativeScript - Image",
			"verticalAlignment"
		],
		[
			"height: number\tNativeScript - CustomLayoutView",
			"height"
		],
		[
			"bindingContext: any\tNativeScript - ProxyObject",
			"bindingContext"
		],
		[
			"elementName: string\tNativeScript - ParserEvent",
			"elementName"
		],
		[
			"margin: string\tNativeScript - CustomLayoutView",
			"margin"
		],
		[
			"exports: any\tNativeScript - NativeScriptModule",
			"exports"
		],
		[
			"rotate: number\tNativeScript - CustomLayoutView",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - CustomLayoutView",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - CustomLayoutView",
			"scaleY"
		],
		[
			"onUnloaded(): void\tNativeScript - SegmentedBar",
			"onUnloaded()"
		],
		[
			"prototype: Date\tNativeScript - DateConstructor",
			"prototype"
		],
		[
			"shift(): string\tNativeScript - RegExpExecArray",
			"shift()"
		],
		[
			"round( x: number ): number\tNativeScript - Math",
			"round(${1:x: number})"
		],
		[
			"length: number\tNativeScript - RegExpMatchArray",
			"length"
		],
		[
			"floor( x: number ): number\tNativeScript - Math",
			"floor(${1:x: number})"
		],
		[
			"get( name: string ): any\tNativeScript - Slider",
			"get(${1:name: string})"
		],
		[
			"eventName: string\tNativeScript - LoadEventData",
			"eventName"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Image",
			"isLayoutRequired"
		],
		[
			"eventName: string\tNativeScript - ItemEventData",
			"eventName"
		],
		[
			"reverse(): T\tNativeScript - ObservableArray<T>",
			"reverse()"
		],
		[
			"returnValue: boolean\tNativeScript - ErrorEvent",
			"returnValue"
		],
		[
			"marginRight: number\tNativeScript - StackLayout",
			"marginRight"
		],
		[
			"affectsLayout: boolean\tNativeScript - Property",
			"affectsLayout"
		],
		[
			"object: Observable\tNativeScript - ItemsLoading",
			"object"
		],
		[
			"statusText: string\tNativeScript - ResponseInit",
			"statusText"
		],
		[
			"getCurve(): any\tNativeScript - SlideTransition",
			"getCurve()"
		],
		[
			"AT_TARGET: number\tNativeScript - ProgressEvent",
			"AT_TARGET"
		],
		[
			"marginBottom: number\tNativeScript - ListPicker",
			"marginBottom"
		],
		[
			"cache: RequestCache\tNativeScript - RequestInit",
			"cache"
		],
		[
			"affectsLayout: boolean\tNativeScript - Property",
			"affectsLayout"
		],
		[
			"paddingRight: number\tNativeScript - LayoutBase",
			"paddingRight"
		],
		[
			"parent: Folder\tNativeScript - FileSystemEntity",
			"parent"
		],
		[
			"has( value: T ): boolean\tNativeScript - Set<T>",
			"has(${1:value: T})"
		],
		[
			"marginBottom: number\tNativeScript - LayoutBase",
			"marginBottom"
		],
		[
			"defaultPrevented: boolean\tNativeScript - Event",
			"defaultPrevented"
		],
		[
			"backgroundImage: string\tNativeScript - WebView",
			"backgroundImage"
		],
		[
			"Array: ArrayConstructor\tNativeScript - List<T>",
			"Array"
		],
		[
			"orientation: string\tNativeScript - StackLayout",
			"orientation"
		],
		[
			"Static loadedEvent: string\tNativeScript - Page",
			"Static loadedEvent"
		],
		[
			"headers: any\tNativeScript - HttpRequestOptions",
			"headers"
		],
		[
			"statusCode: number\tNativeScript - HttpResponse",
			"statusCode"
		],
		[
			"done: boolean\tNativeScript - IteratorResult<T>",
			"done"
		],
		[
			"verticalAlignment: string\tNativeScript - Style",
			"verticalAlignment"
		],
		[
			"toLocaleString(): string\tNativeScript - Object",
			"toLocaleString()"
		],
		[
			"borderRadius: number\tNativeScript - ListPicker",
			"borderRadius"
		],
		[
			"responseXML: any\tNativeScript - XMLHttpRequest",
			"responseXML"
		],
		[
			"borderRadius: number\tNativeScript - LayoutBase",
			"borderRadius"
		],
		[
			"byteLength: number\tNativeScript - Float32Array",
			"byteLength"
		],
		[
			"byteOffset: number\tNativeScript - Float32Array",
			"byteOffset"
		],
		[
			"paddingLeft: number\tNativeScript - StackLayout",
			"paddingLeft"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - Page",
			"getMeasuredWidth()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Page",
			"notify<T>(${1:data: T})"
		],
		[
			"desiredAccuracy: number\tNativeScript - Options",
			"desiredAccuracy"
		],
		[
			"Static loadedEvent: string\tNativeScript - View",
			"Static loadedEvent"
		],
		[
			"visibility: string\tNativeScript - SegmentedBar",
			"visibility"
		],
		[
			"manager: any\tNativeScript - iOSLocationManager",
			"manager"
		],
		[
			"translateY: number\tNativeScript - SegmentedBar",
			"translateY"
		],
		[
			"translateX: number\tNativeScript - SegmentedBar",
			"translateX"
		],
		[
			"widthDIPs: number\tNativeScript - ScreenMetrics",
			"widthDIPs"
		],
		[
			"borderRadius: number\tNativeScript - Background",
			"borderRadius"
		],
		[
			"eventName: string\tNativeScript - NavigatedData",
			"eventName"
		],
		[
			"verticalAlignment: string\tNativeScript - Label",
			"verticalAlignment"
		],
		[
			"marginBottom: number\tNativeScript - TimePicker",
			"marginBottom"
		],
		[
			"_isVisible: boolean\tNativeScript - Placeholder",
			"_isVisible"
		],
		[
			"toString(): string\tNativeScript - Float32Array",
			"toString()"
		],
		[
			"bindingContext: any\tNativeScript - Placeholder",
			"bindingContext"
		],
		[
			"borderRadius: number\tNativeScript - TimePicker",
			"borderRadius"
		],
		[
			"borderWidth: number\tNativeScript - Placeholder",
			"borderWidth"
		],
		[
			"marginLeft: number\tNativeScript - SegmentedBar",
			"marginLeft"
		],
		[
			"AT_TARGET: number\tNativeScript - ProgressEvent",
			"AT_TARGET"
		],
		[
			"isEnabled: boolean\tNativeScript - SegmentedBar",
			"isEnabled"
		],
		[
			"selectors: SelectorCore\tNativeScript - RuleSet",
			"selectors"
		],
		[
			"marginRight: number\tNativeScript - Placeholder",
			"marginRight"
		],
		[
			"byteLength: number\tNativeScript - Float64Array",
			"byteLength"
		],
		[
			"borderColor: Color\tNativeScript - SegmentedBar",
			"borderColor"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - Span",
			"notify<T>(${1:data: T})"
		],
		[
			"byteOffset: number\tNativeScript - Float64Array",
			"byteOffset"
		],
		[
			"value: string\tNativeScript - AttributeSelector",
			"value"
		],
		[
			"isLayoutValid: boolean\tNativeScript - HtmlView",
			"isLayoutValid"
		],
		[
			"_onContextChanged(): void\tNativeScript - Label",
			"_onContextChanged()"
		],
		[
			"marginBottom: number\tNativeScript - GridLayout",
			"marginBottom"
		],
		[
			"cssClasses: Setstring\tNativeScript - ActionBar",
			"cssClasses"
		],
		[
			"backgroundColor: Color\tNativeScript - HtmlView",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - HtmlView",
			"automationText"
		],
		[
			"_gestureObservers: any\tNativeScript - HtmlView",
			"_gestureObservers"
		],
		[
			"_childrenCount: number\tNativeScript - HtmlView",
			"_childrenCount"
		],
		[
			"comb: \"+\"\"~\"\">\"\" \"\tNativeScript - TypeSelector",
			"comb"
		],
		[
			"exports: any\tNativeScript - NativeScriptModule",
			"exports"
		],
		[
			"requestLayout(): void\tNativeScript - SearchBar",
			"requestLayout()"
		],
		[
			"_nativeView: any\tNativeScript - AbsoluteLayout",
			"_nativeView"
		],
		[
			"global: any\tNativeScript - Module NativeScript",
			"global"
		],
		[
			"isLayoutValid: boolean\tNativeScript - TextView",
			"isLayoutValid"
		],
		[
			"cssClass: string\tNativeScript - AbsoluteLayout",
			"cssClass"
		],
		[
			"backgroundColor: Color\tNativeScript - TextView",
			"backgroundColor"
		],
		[
			"endings: string\tNativeScript - BlobPropertyBag",
			"endings"
		],
		[
			"round( x: number ): number\tNativeScript - Math",
			"round(${1:x: number})"
		],
		[
			"_gestureObservers: any\tNativeScript - TextView",
			"_gestureObservers"
		],
		[
			"_childrenCount: number\tNativeScript - TextView",
			"_childrenCount"
		],
		[
			"_childrenCount: number\tNativeScript - Progress",
			"_childrenCount"
		],
		[
			"toString(): string\tNativeScript - Float64Array",
			"toString()"
		],
		[
			"NaN: number\tNativeScript - Module NativeScript",
			"NaN"
		],
		[
			"requestLayout(): void\tNativeScript - TextField",
			"requestLayout()"
		],
		[
			"getMeasuredWidth(): number\tNativeScript - View",
			"getMeasuredWidth()"
		],
		[
			"notify<T>( data: T ): void\tNativeScript - View",
			"notify<T>(${1:data: T})"
		],
		[
			"_gestureObservers: any\tNativeScript - Progress",
			"_gestureObservers"
		],
		[
			"automationText: string\tNativeScript - Progress",
			"automationText"
		],
		[
			"backgroundColor: Color\tNativeScript - Progress",
			"backgroundColor"
		],
		[
			"getActualSize(): Size\tNativeScript - TextField",
			"getActualSize()"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Uint16Array",
			"buffer"
		],
		[
			"endings: string\tNativeScript - BlobPropertyBag",
			"endings"
		],
		[
			"_updateLayout(): void\tNativeScript - TextField",
			"_updateLayout()"
		],
		[
			"floor( x: number ): number\tNativeScript - Math",
			"floor(${1:x: number})"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Progress",
			"isLayoutValid"
		],
		[
			"_updateLayout(): void\tNativeScript - ActionBar",
			"_updateLayout()"
		],
		[
			"getActualSize(): Size\tNativeScript - ActionBar",
			"getActualSize()"
		],
		[
			"responseXML: any\tNativeScript - XMLHttpRequest",
			"responseXML"
		],
		[
			"requestLayout(): void\tNativeScript - ActionBar",
			"requestLayout()"
		],
		[
			"actionBar: ActionBar\tNativeScript - ActionItem",
			"actionBar"
		],
		[
			"curve: any\tNativeScript - NavigationTransition",
			"curve"
		],
		[
			"navDepth: number\tNativeScript - BackstackEntry",
			"navDepth"
		],
		[
			"rootViewGroup: any\tNativeScript - AndroidFrame",
			"rootViewGroup"
		],
		[
			"verticalAlignment: string\tNativeScript - Style",
			"verticalAlignment"
		],
		[
			"textAlignment: string\tNativeScript - TextField",
			"textAlignment"
		],
		[
			"getActualSize(): Size\tNativeScript - SearchBar",
			"getActualSize()"
		],
		[
			"paddingRight: number\tNativeScript - WrapLayout",
			"paddingRight"
		],
		[
			"returnKeyType: string\tNativeScript - TextField",
			"returnKeyType"
		],
		[
			"marginRight: number\tNativeScript - ContentView",
			"marginRight"
		],
		[
			"total: number\tNativeScript - ProgressEventInit",
			"total"
		],
		[
			"toString(): string\tNativeScript - Float64Array",
			"toString()"
		],
		[
			"android: any\tNativeScript - ProxyViewContainer",
			"android"
		],
		[
			"color: Color\tNativeScript - ProxyViewContainer",
			"color"
		],
		[
			"_updateLayout(): void\tNativeScript - SearchBar",
			"_updateLayout()"
		],
		[
			"cssClasses: Setstring\tNativeScript - TextField",
			"cssClasses"
		],
		[
			"parent: View\tNativeScript - ProxyViewContainer",
			"parent"
		],
		[
			"style: Style\tNativeScript - ProxyViewContainer",
			"style"
		],
		[
			"_onContextChanged(): void\tNativeScript - Frame",
			"_onContextChanged()"
		],
		[
			"borderWidth: number\tNativeScript - ContentView",
			"borderWidth"
		],
		[
			"verticalAlignment: string\tNativeScript - Frame",
			"verticalAlignment"
		],
		[
			"bindingContext: any\tNativeScript - ContentView",
			"bindingContext"
		],
		[
			"borderRadius: number\tNativeScript - DatePicker",
			"borderRadius"
		],
		[
			"_context: any\tNativeScript - ActivityIndicator",
			"_context"
		],
		[
			"byteOffset: number\tNativeScript - Float64Array",
			"byteOffset"
		],
		[
			"byteLength: number\tNativeScript - Float64Array",
			"byteLength"
		],
		[
			"toString(): string\tNativeScript - Float32Array",
			"toString()"
		],
		[
			"paddingRight: number\tNativeScript - GridLayout",
			"paddingRight"
		],
		[
			"busy: boolean\tNativeScript - ActivityIndicator",
			"busy"
		],
		[
			"_isVisible: boolean\tNativeScript - ContentView",
			"_isVisible"
		],
		[
			"byteOffset: number\tNativeScript - Float32Array",
			"byteOffset"
		],
		[
			"marginBottom: number\tNativeScript - WrapLayout",
			"marginBottom"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Frame",
			"isLayoutRequired"
		],
		[
			"byteLength: number\tNativeScript - Float32Array",
			"byteLength"
		],
		[
			"marginBottom: number\tNativeScript - DatePicker",
			"marginBottom"
		],
		[
			"marginBottom: number\tNativeScript - DockLayout",
			"marginBottom"
		],
		[
			"get( name: string ): any\tNativeScript - Button",
			"get(${1:name: string})"
		],
		[
			"_childrenCount: number\tNativeScript - Repeater",
			"_childrenCount"
		],
		[
			"_gestureObservers: any\tNativeScript - Repeater",
			"_gestureObservers"
		],
		[
			"width: number\tNativeScript - ActivityIndicator",
			"width"
		],
		[
			"automationText: string\tNativeScript - Repeater",
			"automationText"
		],
		[
			"backgroundColor: Color\tNativeScript - Repeater",
			"backgroundColor"
		],
		[
			"cancel(): void\tNativeScript - AnimationPromise",
			"cancel()"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Repeater",
			"isLayoutValid"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Uint32Array",
			"buffer"
		],
		[
			"isLayoutValid: boolean\tNativeScript - TextBase",
			"isLayoutValid"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Uint32Array",
			"buffer"
		],
		[
			"affectsLayout: boolean\tNativeScript - Property",
			"affectsLayout"
		],
		[
			"defaultPrevented: boolean\tNativeScript - Event",
			"defaultPrevented"
		],
		[
			"backgroundColor: Color\tNativeScript - TextBase",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - TextBase",
			"automationText"
		],
		[
			"_gestureObservers: any\tNativeScript - TextBase",
			"_gestureObservers"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Uint16Array",
			"buffer"
		],
		[
			"_childrenCount: number\tNativeScript - TextBase",
			"_childrenCount"
		],
		[
			"timeStamp: number\tNativeScript - ProgressEvent",
			"timeStamp"
		],
		[
			"scale: Pair\tNativeScript - AnimationDefinition",
			"scale"
		],
		[
			"delay: number\tNativeScript - KeyframeAnimation",
			"delay"
		],
		[
			"scaleY: number\tNativeScript - EditableTextBase",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - EditableTextBase",
			"scaleX"
		],
		[
			"rotate: number\tNativeScript - EditableTextBase",
			"rotate"
		],
		[
			"margin: string\tNativeScript - EditableTextBase",
			"margin"
		],
		[
			"height: number\tNativeScript - EditableTextBase",
			"height"
		],
		[
			"shift(): string\tNativeScript - RegExpExecArray",
			"shift()"
		],
		[
			"borderRadius: number\tNativeScript - WrapLayout",
			"borderRadius"
		],
		[
			"bindingContext: any\tNativeScript - TabViewItem",
			"bindingContext"
		],
		[
			"_domId: number\tNativeScript - EditableTextBase",
			"_domId"
		],
		[
			"_cssState: any\tNativeScript - EditableTextBase",
			"_cssState"
		],
		[
			"get( name: string ): any\tNativeScript - Layout",
			"get(${1:name: string})"
		],
		[
			"inputType: string\tNativeScript - PromptOptions",
			"inputType"
		],
		[
			"borderRadius: number\tNativeScript - DockLayout",
			"borderRadius"
		],
		[
			"minWidth: number\tNativeScript - AbsoluteLayout",
			"minWidth"
		],
		[
			"cssClasses: Setstring\tNativeScript - SearchBar",
			"cssClasses"
		],
		[
			"returnValue: boolean\tNativeScript - ErrorEvent",
			"returnValue"
		],
		[
			"Array: ArrayConstructor\tNativeScript - List<T>",
			"Array"
		],
		[
			"length: number\tNativeScript - RegExpMatchArray",
			"length"
		],
		[
			"borderRadius: number\tNativeScript - ScrollView",
			"borderRadius"
		],
		[
			"prototype: Date\tNativeScript - DateConstructor",
			"prototype"
		],
		[
			"marginBottom: number\tNativeScript - ScrollView",
			"marginBottom"
		],
		[
			"items: ArrayTabViewItem\tNativeScript - TabView",
			"items"
		],
		[
			"done: boolean\tNativeScript - IteratorResult<T>",
			"done"
		],
		[
			"backgroundImage: string\tNativeScript - TabView",
			"backgroundImage"
		],
		[
			"cache: RequestCache\tNativeScript - RequestInit",
			"cache"
		],
		[
			"typeName: string\tNativeScript - AbsoluteLayout",
			"typeName"
		],
		[
			"get( name: string ): any\tNativeScript - Border",
			"get(${1:name: string})"
		],
		[
			"scrollY: number\tNativeScript - ScrollEventData",
			"scrollY"
		],
		[
			"scrollX: number\tNativeScript - ScrollEventData",
			"scrollX"
		],
		[
			"has( value: T ): boolean\tNativeScript - Set<T>",
			"has(${1:value: T})"
		],
		[
			"get( name: string ): any\tNativeScript - Switch",
			"get(${1:name: string})"
		],
		[
			"focus(): boolean\tNativeScript - AbsoluteLayout",
			"focus()"
		],
		[
			"paddingRight: number\tNativeScript - DockLayout",
			"paddingRight"
		],
		[
			"onLoaded(): void\tNativeScript - AbsoluteLayout",
			"onLoaded()"
		],
		[
			"component: View\tNativeScript - ComponentModule",
			"component"
		],
		[
			"ios: any\tNativeScript - TouchGestureEventData",
			"ios"
		],
		[
			"ios: any\tNativeScript - SwipeGestureEventData",
			"ios"
		],
		[
			"bindingContext: any\tNativeScript - GridLayout",
			"bindingContext"
		],
		[
			"textAlignment: string\tNativeScript - TextView",
			"textAlignment"
		],
		[
			"message: string\tNativeScript - ReferenceError",
			"message"
		],
		[
			"returnKeyType: string\tNativeScript - TextView",
			"returnKeyType"
		],
		[
			"borderWidth: number\tNativeScript - GridLayout",
			"borderWidth"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Int16Array",
			"buffer"
		],
		[
			"marginRight: number\tNativeScript - LayoutBase",
			"marginRight"
		],
		[
			"message: string\tNativeScript - ReferenceError",
			"message"
		],
		[
			"sqrt( x: number ): number\tNativeScript - Math",
			"sqrt(${1:x: number})"
		],
		[
			"title: string\tNativeScript - SegmentedBarItem",
			"title"
		],
		[
			"sqrt( x: number ): number\tNativeScript - Math",
			"sqrt(${1:x: number})"
		],
		[
			"cssType: string\tNativeScript - AbsoluteLayout",
			"cssType"
		],
		[
			"cssClasses: Setstring\tNativeScript - TextView",
			"cssClasses"
		],
		[
			"onUnloaded(): void\tNativeScript - Placeholder",
			"onUnloaded()"
		],
		[
			"isLayoutValid: boolean\tNativeScript - WebView",
			"isLayoutValid"
		],
		[
			"backgroundImage: string\tNativeScript - Layout",
			"backgroundImage"
		],
		[
			"get( key: K ): V\tNativeScript - WeakMap<K, V>",
			"get(${1:key: K})"
		],
		[
			"backgroundRepeat: string\tNativeScript - Style",
			"backgroundRepeat"
		],
		[
			"ios: any\tNativeScript - PinchGestureEventData",
			"ios"
		],
		[
			"getAndroidTypeface(): any\tNativeScript - Font",
			"getAndroidTypeface()"
		],
		[
			"width: number\tNativeScript - CustomLayoutView",
			"width"
		],
		[
			"backgroundColor: Color\tNativeScript - WebView",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - WebView",
			"automationText"
		],
		[
			"text(): Promisestring\tNativeScript - Response",
			"text()"
		],
		[
			"verticalAlignment: string\tNativeScript - Page",
			"verticalAlignment"
		],
		[
			"getActualSize(): Size\tNativeScript - ListView",
			"getActualSize()"
		],
		[
			"_gestureObservers: any\tNativeScript - WebView",
			"_gestureObservers"
		],
		[
			"_childrenCount: number\tNativeScript - WebView",
			"_childrenCount"
		],
		[
			"timeout: number\tNativeScript - XMLHttpRequest",
			"timeout"
		],
		[
			"backgroundImage: string\tNativeScript - Slider",
			"backgroundImage"
		],
		[
			"height: number\tNativeScript - PlatformContext",
			"height"
		],
		[
			"start(): void\tNativeScript - Module fps-meter",
			"start()"
		],
		[
			"backgroundRepeat: string\tNativeScript - Style",
			"backgroundRepeat"
		],
		[
			"cssClasses: Setstring\tNativeScript - ListView",
			"cssClasses"
		],
		[
			"translateX: number\tNativeScript - StackLayout",
			"translateX"
		],
		[
			"translateY: number\tNativeScript - StackLayout",
			"translateY"
		],
		[
			"cssClasses: Setstring\tNativeScript - Progress",
			"cssClasses"
		],
		[
			"timeout: number\tNativeScript - XMLHttpRequest",
			"timeout"
		],
		[
			"url: string\tNativeScript - HttpRequestOptions",
			"url"
		],
		[
			"get( name: string ): any\tNativeScript - Image",
			"get(${1:name: string})"
		],
		[
			"byteLength: number\tNativeScript - Uint16Array",
			"byteLength"
		],
		[
			"borderWidth: number\tNativeScript - ListPicker",
			"borderWidth"
		],
		[
			"byteOffset: number\tNativeScript - Uint16Array",
			"byteOffset"
		],
		[
			"_onContextChanged(): void\tNativeScript - Page",
			"_onContextChanged()"
		],
		[
			"isEnabled: boolean\tNativeScript - StackLayout",
			"isEnabled"
		],
		[
			"borderWidth: number\tNativeScript - LayoutBase",
			"borderWidth"
		],
		[
			"attachComment: boolean\tNativeScript - Options",
			"attachComment"
		],
		[
			"requestLayout(): void\tNativeScript - HtmlView",
			"requestLayout()"
		],
		[
			"index: number\tNativeScript - RegExpMatchArray",
			"index"
		],
		[
			"ceil( x: number ): number\tNativeScript - Math",
			"ceil(${1:x: number})"
		],
		[
			"bindingContext: any\tNativeScript - ActionItem",
			"bindingContext"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Int16Array",
			"buffer"
		],
		[
			"view: View\tNativeScript - PanGestureEventData",
			"view"
		],
		[
			"visibility: string\tNativeScript - StackLayout",
			"visibility"
		],
		[
			"input: string\tNativeScript - RegExpMatchArray",
			"input"
		],
		[
			"atan( x: number ): number\tNativeScript - Math",
			"atan(${1:x: number})"
		],
		[
			"asin( x: number ): number\tNativeScript - Math",
			"asin(${1:x: number})"
		],
		[
			"_updateLayout(): void\tNativeScript - Progress",
			"_updateLayout()"
		],
		[
			"borderColor: Color\tNativeScript - StackLayout",
			"borderColor"
		],
		[
			"getActualSize(): Size\tNativeScript - Progress",
			"getActualSize()"
		],
		[
			"isBack: boolean\tNativeScript - BackstackEntry",
			"isBack"
		],
		[
			"acos( x: number ): number\tNativeScript - Math",
			"acos(${1:x: number})"
		],
		[
			"length: number\tNativeScript - RegExpExecArray",
			"length"
		],
		[
			"cancelable: boolean\tNativeScript - ErrorEvent",
			"cancelable"
		],
		[
			"requestLayout(): void\tNativeScript - Progress",
			"requestLayout()"
		],
		[
			"_context: any\tNativeScript - CustomLayoutView",
			"_context"
		],
		[
			"dump( obj: any ): void\tNativeScript - Console",
			"dump(${1:obj: any})"
		],
		[
			"requestLayout(): void\tNativeScript - ListView",
			"requestLayout()"
		],
		[
			"getActualSize(): Size\tNativeScript - HtmlView",
			"getActualSize()"
		],
		[
			"reverse(): Int8Array\tNativeScript - Int8Array",
			"reverse()"
		],
		[
			"marginRight: number\tNativeScript - DockLayout",
			"marginRight"
		],
		[
			"marginLeft: number\tNativeScript - ContentView",
			"marginLeft"
		],
		[
			"LOADING: number\tNativeScript - XMLHttpRequest",
			"LOADING"
		],
		[
			"_updateLayout(): void\tNativeScript - HtmlView",
			"_updateLayout()"
		],
		[
			"marginBottom: number\tNativeScript - TextField",
			"marginBottom"
		],
		[
			"paddingLeft: number\tNativeScript - WrapLayout",
			"paddingLeft"
		],
		[
			"keyboardType: string\tNativeScript - TextField",
			"keyboardType"
		],
		[
			"paddingTop: number\tNativeScript - StackLayout",
			"paddingTop"
		],
		[
			"get( key: K ): V\tNativeScript - WeakMap<K, V>",
			"get(${1:key: K})"
		],
		[
			"getMilliseconds(): number\tNativeScript - Date",
			"getMilliseconds()"
		],
		[
			"bindingContext: any\tNativeScript - ListPicker",
			"bindingContext"
		],
		[
			"isEnabled: boolean\tNativeScript - ContentView",
			"isEnabled"
		],
		[
			"onUnloaded(): void\tNativeScript - ContentView",
			"onUnloaded()"
		],
		[
			"_isVisible: boolean\tNativeScript - GridLayout",
			"_isVisible"
		],
		[
			"get( name: string ): any\tNativeScript - Style",
			"get(${1:name: string})"
		],
		[
			"_isVisible: boolean\tNativeScript - DatePicker",
			"_isVisible"
		],
		[
			"borderRadius: number\tNativeScript - TextField",
			"borderRadius"
		],
		[
			"autocorrect: boolean\tNativeScript - TextField",
			"autocorrect"
		],
		[
			"bindingContext: any\tNativeScript - LayoutBase",
			"bindingContext"
		],
		[
			"_createUI(): void\tNativeScript - SegmentedBar",
			"_createUI()"
		],
		[
			"bindingContext: any\tNativeScript - DatePicker",
			"bindingContext"
		],
		[
			"get( name: string ): any\tNativeScript - Frame",
			"get(${1:name: string})"
		],
		[
			"imageSource: ImageSource\tNativeScript - Image",
			"imageSource"
		],
		[
			"orientation: string\tNativeScript - WrapLayout",
			"orientation"
		],
		[
			"verticalAlignment: string\tNativeScript - View",
			"verticalAlignment"
		],
		[
			"_isVisible: boolean\tNativeScript - ListPicker",
			"_isVisible"
		],
		[
			"borderColor: Color\tNativeScript - ContentView",
			"borderColor"
		],
		[
			"get( name: string ): any\tNativeScript - Style",
			"get(${1:name: string})"
		],
		[
			"registerHandlers(): any\tNativeScript - Styler",
			"registerHandlers()"
		],
		[
			"toString(): string\tNativeScript - Array<T, T>",
			"toString()"
		],
		[
			"borderWidth: number\tNativeScript - DatePicker",
			"borderWidth"
		],
		[
			"getCurve(): any\tNativeScript - FadeTransition",
			"getCurve()"
		],
		[
			"requestLayout(): void\tNativeScript - TextBase",
			"requestLayout()"
		],
		[
			"updateDistance: number\tNativeScript - Options",
			"updateDistance"
		],
		[
			"android: any\tNativeScript - ActivityIndicator",
			"android"
		],
		[
			"_updateLayout(): void\tNativeScript - ListView",
			"_updateLayout()"
		],
		[
			"paddingLeft: number\tNativeScript - GridLayout",
			"paddingLeft"
		],
		[
			"ceil( x: number ): number\tNativeScript - Math",
			"ceil(${1:x: number})"
		],
		[
			"_isVisible: boolean\tNativeScript - LayoutBase",
			"_isVisible"
		],
		[
			"getMilliseconds(): number\tNativeScript - Date",
			"getMilliseconds()"
		],
		[
			"removed: ArrayT\tNativeScript - ChangedData<T>",
			"removed"
		],
		[
			"marginRight: number\tNativeScript - WrapLayout",
			"marginRight"
		],
		[
			"bubbles: boolean\tNativeScript - ProgressEvent",
			"bubbles"
		],
		[
			"marginLeft: number\tNativeScript - StackLayout",
			"marginLeft"
		],
		[
			"color: Color\tNativeScript - ActivityIndicator",
			"color"
		],
		[
			"getActualSize(): Size\tNativeScript - TextBase",
			"getActualSize()"
		],
		[
			"dump( obj: any ): void\tNativeScript - Console",
			"dump(${1:obj: any})"
		],
		[
			"borderWidth: number\tNativeScript - Background",
			"borderWidth"
		],
		[
			"atan( x: number ): number\tNativeScript - Math",
			"atan(${1:x: number})"
		],
		[
			"device: Device\tNativeScript - Module platform",
			"device"
		],
		[
			"_updateLayout(): void\tNativeScript - TextBase",
			"_updateLayout()"
		],
		[
			"marginRight: number\tNativeScript - DatePicker",
			"marginRight"
		],
		[
			"parent: View\tNativeScript - ActivityIndicator",
			"parent"
		],
		[
			"isIOS: boolean\tNativeScript - Module platform",
			"isIOS"
		],
		[
			"toString(): string\tNativeScript - Uint16Array",
			"toString()"
		],
		[
			"text(): Promisestring\tNativeScript - Response",
			"text()"
		],
		[
			"style: Style\tNativeScript - ActivityIndicator",
			"style"
		],
		[
			"marginRight: number\tNativeScript - TimePicker",
			"marginRight"
		],
		[
			"asin( x: number ): number\tNativeScript - Math",
			"asin(${1:x: number})"
		],
		[
			"acos( x: number ): number\tNativeScript - Math",
			"acos(${1:x: number})"
		],
		[
			"target: EventTarget\tNativeScript - ErrorEvent",
			"target"
		],
		[
			"pop(): string\tNativeScript - RegExpMatchArray",
			"pop()"
		],
		[
			"cssClasses: Setstring\tNativeScript - Repeater",
			"cssClasses"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Uint8Array",
			"buffer"
		],
		[
			"borderWidth: number\tNativeScript - TimePicker",
			"borderWidth"
		],
		[
			"toString(): string\tNativeScript - Uint32Array",
			"toString()"
		],
		[
			"toString(): string\tNativeScript - ParserEvent",
			"toString()"
		],
		[
			"textAlignment: string\tNativeScript - TextBase",
			"textAlignment"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Int32Array",
			"buffer"
		],
		[
			"bindingContext: any\tNativeScript - TimePicker",
			"bindingContext"
		],
		[
			"byteLength: number\tNativeScript - Uint32Array",
			"byteLength"
		],
		[
			"Static tapEvent: string\tNativeScript - Button",
			"Static tapEvent"
		],
		[
			"byteOffset: number\tNativeScript - Uint32Array",
			"byteOffset"
		],
		[
			"byteLength: number\tNativeScript - Uint32Array",
			"byteLength"
		],
		[
			"borderColor: Color\tNativeScript - Placeholder",
			"borderColor"
		],
		[
			"length: number\tNativeScript - VirtualArray<T>",
			"length"
		],
		[
			"byteOffset: number\tNativeScript - Uint32Array",
			"byteOffset"
		],
		[
			"marginBottom: number\tNativeScript - SearchBar",
			"marginBottom"
		],
		[
			"toString(): string\tNativeScript - Uint16Array",
			"toString()"
		],
		[
			"byteOffset: number\tNativeScript - Uint16Array",
			"byteOffset"
		],
		[
			"cssClasses: Setstring\tNativeScript - TextBase",
			"cssClasses"
		],
		[
			"_isVisible: boolean\tNativeScript - TimePicker",
			"_isVisible"
		],
		[
			"affectsStyle: boolean\tNativeScript - Property",
			"affectsStyle"
		],
		[
			"minHeight: number\tNativeScript - SegmentedBar",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - SegmentedBar",
			"marginTop"
		],
		[
			"marginRight: number\tNativeScript - ListPicker",
			"marginRight"
		],
		[
			"byteLength: number\tNativeScript - Uint16Array",
			"byteLength"
		],
		[
			"length: number\tNativeScript - RegExpExecArray",
			"length"
		],
		[
			"removed: ArrayT\tNativeScript - ChangedData<T>",
			"removed"
		],
		[
			"property: K\tNativeScript - KeyValuePair<K, V>",
			"property"
		],
		[
			"isLoaded: boolean\tNativeScript - SegmentedBar",
			"isLoaded"
		],
		[
			"affectsStyle: boolean\tNativeScript - Property",
			"affectsStyle"
		],
		[
			"curve: any\tNativeScript - AnimationDefinition",
			"curve"
		],
		[
			"borderWidth: number\tNativeScript - WrapLayout",
			"borderWidth"
		],
		[
			"byteLength: number\tNativeScript - ArrayBuffer",
			"byteLength"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Int32Array",
			"buffer"
		],
		[
			"width: number\tNativeScript - EditableTextBase",
			"width"
		],
		[
			"getCurve(): any\tNativeScript - FadeTransition",
			"getCurve()"
		],
		[
			"isEnabled: boolean\tNativeScript - Placeholder",
			"isEnabled"
		],
		[
			"marginLeft: number\tNativeScript - Placeholder",
			"marginLeft"
		],
		[
			"requestLayout(): void\tNativeScript - TextView",
			"requestLayout()"
		],
		[
			"visibility: string\tNativeScript - ContentView",
			"visibility"
		],
		[
			"eventName: string\tNativeScript - ItemsLoading",
			"eventName"
		],
		[
			"bubbles: boolean\tNativeScript - ProgressEvent",
			"bubbles"
		],
		[
			"value: any\tNativeScript - KeyframeDeclaration",
			"value"
		],
		[
			"getActualSize(): Size\tNativeScript - TextView",
			"getActualSize()"
		],
		[
			"_updateLayout(): void\tNativeScript - Repeater",
			"_updateLayout()"
		],
		[
			"iconSource: string\tNativeScript - TabViewItem",
			"iconSource"
		],
		[
			"position: Position\tNativeScript - ParserEvent",
			"position"
		],
		[
			"getActualSize(): Size\tNativeScript - Repeater",
			"getActualSize()"
		],
		[
			"bindingContext: any\tNativeScript - WrapLayout",
			"bindingContext"
		],
		[
			"backgroundImage: string\tNativeScript - Border",
			"backgroundImage"
		],
		[
			"_isVisible: boolean\tNativeScript - WrapLayout",
			"_isVisible"
		],
		[
			"className: string\tNativeScript - SegmentedBar",
			"className"
		],
		[
			"backgroundImage: string\tNativeScript - Switch",
			"backgroundImage"
		],
		[
			"translateX: number\tNativeScript - Placeholder",
			"translateX"
		],
		[
			"_context: any\tNativeScript - EditableTextBase",
			"_context"
		],
		[
			"requestLayout(): void\tNativeScript - Repeater",
			"requestLayout()"
		],
		[
			"translateY: number\tNativeScript - Placeholder",
			"translateY"
		],
		[
			"borderWidth: number\tNativeScript - DockLayout",
			"borderWidth"
		],
		[
			"dump( obj: any ): void\tNativeScript - Console",
			"dump(${1:obj: any})"
		],
		[
			"_updateLayout(): void\tNativeScript - TextView",
			"_updateLayout()"
		],
		[
			"visibility: string\tNativeScript - Placeholder",
			"visibility"
		],
		[
			"LOADING: number\tNativeScript - XMLHttpRequest",
			"LOADING"
		],
		[
			"opacity: number\tNativeScript - AbsoluteLayout",
			"opacity"
		],
		[
			"originX: number\tNativeScript - AbsoluteLayout",
			"originX"
		],
		[
			"originY: number\tNativeScript - AbsoluteLayout",
			"originY"
		],
		[
			"onUnloaded(): void\tNativeScript - StackLayout",
			"onUnloaded()"
		],
		[
			"_isVisible: boolean\tNativeScript - ScrollView",
			"_isVisible"
		],
		[
			"target: EventTarget\tNativeScript - ErrorEvent",
			"target"
		],
		[
			"bindingContext: any\tNativeScript - ScrollView",
			"bindingContext"
		],
		[
			"translateY: number\tNativeScript - ContentView",
			"translateY"
		],
		[
			"placeholder: ImageSource\tNativeScript - Cache",
			"placeholder"
		],
		[
			"index: number\tNativeScript - RegExpMatchArray",
			"index"
		],
		[
			"input: string\tNativeScript - RegExpMatchArray",
			"input"
		],
		[
			"prop: string\tNativeScript - AttributeSelector",
			"prop"
		],
		[
			"pop(): string\tNativeScript - RegExpMatchArray",
			"pop()"
		],
		[
			"translateX: number\tNativeScript - ContentView",
			"translateX"
		],
		[
			"borderWidth: number\tNativeScript - ScrollView",
			"borderWidth"
		],
		[
			"bindingContext: any\tNativeScript - DockLayout",
			"bindingContext"
		],
		[
			"padding: string\tNativeScript - AbsoluteLayout",
			"padding"
		],
		[
			"attributes: Object\tNativeScript - ParserEvent",
			"attributes"
		],
		[
			"borderRadius: number\tNativeScript - SearchBar",
			"borderRadius"
		],
		[
			"toString(): string\tNativeScript - Uint32Array",
			"toString()"
		],
		[
			"twoWay: boolean\tNativeScript - BindingOptions",
			"twoWay"
		],
		[
			"marginRight: number\tNativeScript - ScrollView",
			"marginRight"
		],
		[
			"orientation: string\tNativeScript - ScrollView",
			"orientation"
		],
		[
			"byteLength: number\tNativeScript - ArrayBuffer",
			"byteLength"
		],
		[
			"isLayoutValid: boolean\tNativeScript - TabView",
			"isLayoutValid"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - View",
			"isLayoutRequired"
		],
		[
			"cancelable: boolean\tNativeScript - ErrorEvent",
			"cancelable"
		],
		[
			"reverse(): Int8Array\tNativeScript - Int8Array",
			"reverse()"
		],
		[
			"_isVisible: boolean\tNativeScript - DockLayout",
			"_isVisible"
		],
		[
			"position: Position\tNativeScript - Declaration",
			"position"
		],
		[
			"backgroundColor: Color\tNativeScript - TabView",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - TabView",
			"automationText"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Uint8Array",
			"buffer"
		],
		[
			"_gestureObservers: any\tNativeScript - TabView",
			"_gestureObservers"
		],
		[
			"_childrenCount: number\tNativeScript - TabView",
			"_childrenCount"
		],
		[
			"marginRight: number\tNativeScript - GridLayout",
			"marginRight"
		],
		[
			"get( name: string ): any\tNativeScript - Label",
			"get(${1:name: string})"
		],
		[
			"cssClasses: Setstring\tNativeScript - HtmlView",
			"cssClasses"
		],
		[
			"borderRadius: number\tNativeScript - ActionBar",
			"borderRadius"
		],
		[
			"toString(): string\tNativeScript - Array<T, T>",
			"toString()"
		],
		[
			"message: string\tNativeScript - ConfirmOptions",
			"message"
		],
		[
			"affectsStyle: boolean\tNativeScript - Property",
			"affectsStyle"
		],
		[
			"separatorColor: Color\tNativeScript - ListView",
			"separatorColor"
		],
		[
			"backgroundImage: string\tNativeScript - Button",
			"backgroundImage"
		],
		[
			"isLayoutRequired: boolean\tNativeScript - Page",
			"isLayoutRequired"
		],
		[
			"marginBottom: number\tNativeScript - ActionBar",
			"marginBottom"
		],
		[
			"paddingLeft: number\tNativeScript - DockLayout",
			"paddingLeft"
		],
		[
			"paddingLeft: number\tNativeScript - LayoutBase",
			"paddingLeft"
		],
		[
			"_onContextChanged(): void\tNativeScript - View",
			"_onContextChanged()"
		],
		[
			"placeholderColor: Color\tNativeScript - Style",
			"placeholderColor"
		],
		[
			"inheritable: boolean\tNativeScript - Property",
			"inheritable"
		],
		[
			"translateY: number\tNativeScript - DatePicker",
			"translateY"
		],
		[
			"mode: RequestMode\tNativeScript - RequestInit",
			"mode"
		],
		[
			"byteOffset: number\tNativeScript - Uint8Array",
			"byteOffset"
		],
		[
			"_childrenCount: number\tNativeScript - Button",
			"_childrenCount"
		],
		[
			"onUnloaded(): void\tNativeScript - ScrollView",
			"onUnloaded()"
		],
		[
			"path: string\tNativeScript - FileSystemEntity",
			"path"
		],
		[
			"name: string\tNativeScript - FileSystemEntity",
			"name"
		],
		[
			"visibility: string\tNativeScript - DatePicker",
			"visibility"
		],
		[
			"automationText: string\tNativeScript - Layout",
			"automationText"
		],
		[
			"isEnabled: boolean\tNativeScript - ListPicker",
			"isEnabled"
		],
		[
			"automationText: string\tNativeScript - Button",
			"automationText"
		],
		[
			"marginLeft: number\tNativeScript - LayoutBase",
			"marginLeft"
		],
		[
			"backgroundColor: Color\tNativeScript - Button",
			"backgroundColor"
		],
		[
			"mode: RequestMode\tNativeScript - RequestInit",
			"mode"
		],
		[
			"minHeight: number\tNativeScript - StackLayout",
			"minHeight"
		],
		[
			"backgroundColor: Color\tNativeScript - Layout",
			"backgroundColor"
		],
		[
			"backgroundImage: string\tNativeScript - Label",
			"backgroundImage"
		],
		[
			"isEnabled: boolean\tNativeScript - LayoutBase",
			"isEnabled"
		],
		[
			"onUnloaded(): void\tNativeScript - DatePicker",
			"onUnloaded()"
		],
		[
			"message: string\tNativeScript - ActionOptions",
			"message"
		],
		[
			"CAPTURING_PHASE: number\tNativeScript - Event",
			"CAPTURING_PHASE"
		],
		[
			"paddingTop: number\tNativeScript - LayoutBase",
			"paddingTop"
		],
		[
			"backgroundImage: string\tNativeScript - Style",
			"backgroundImage"
		],
		[
			"marginTop: number\tNativeScript - StackLayout",
			"marginTop"
		],
		[
			"message: string\tNativeScript - DialogOptions",
			"message"
		],
		[
			"onUnloaded(): void\tNativeScript - DockLayout",
			"onUnloaded()"
		],
		[
			"cssClasses: Setstring\tNativeScript - WebView",
			"cssClasses"
		],
		[
			"srcElement: any\tNativeScript - ProgressEvent",
			"srcElement"
		],
		[
			"canGoForward: boolean\tNativeScript - WebView",
			"canGoForward"
		],
		[
			"marginLeft: number\tNativeScript - ListPicker",
			"marginLeft"
		],
		[
			"ItemSpec(): ItemSpec\tNativeScript - ItemSpec",
			"ItemSpec()"
		],
		[
			"password: string\tNativeScript - LoginOptions",
			"password"
		],
		[
			"stopPropagation(): void\tNativeScript - Event",
			"stopPropagation()"
		],
		[
			"action: string\tNativeScript - ChangedData<T>",
			"action"
		],
		[
			"userName: string\tNativeScript - LoginOptions",
			"userName"
		],
		[
			"abs( x: number ): number\tNativeScript - Math",
			"abs(${1:x: number})"
		],
		[
			"width: number\tNativeScript - PlatformContext",
			"width"
		],
		[
			"toString(): string\tNativeScript - Transition",
			"toString()"
		],
		[
			"visibility: string\tNativeScript - ScrollView",
			"visibility"
		],
		[
			"translateY: number\tNativeScript - ScrollView",
			"translateY"
		],
		[
			"onUnloaded(): void\tNativeScript - GridLayout",
			"onUnloaded()"
		],
		[
			"byteLength: number\tNativeScript - Uint8Array",
			"byteLength"
		],
		[
			"_updateLayout(): void\tNativeScript - WebView",
			"_updateLayout()"
		],
		[
			"translateX: number\tNativeScript - ScrollView",
			"translateX"
		],
		[
			"stop(): void\tNativeScript - Module fps-meter",
			"stop()"
		],
		[
			"cancelable: boolean\tNativeScript - EventInit",
			"cancelable"
		],
		[
			"onUnloaded(): void\tNativeScript - TimePicker",
			"onUnloaded()"
		],
		[
			"backgroundImage: string\tNativeScript - Image",
			"backgroundImage"
		],
		[
			"headers: Headers\tNativeScript - HttpResponse",
			"headers"
		],
		[
			"status: number\tNativeScript - XMLHttpRequest",
			"status"
		],
		[
			"removeRows(): void\tNativeScript - GridLayout",
			"removeRows()"
		],
		[
			"cssClasses: Setstring\tNativeScript - TabView",
			"cssClasses"
		],
		[
			"scaleY: number\tNativeScript - AbsoluteLayout",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - AbsoluteLayout",
			"scaleX"
		],
		[
			"rotate: number\tNativeScript - AbsoluteLayout",
			"rotate"
		],
		[
			"now(): number\tNativeScript - DateConstructor",
			"now()"
		],
		[
			"inheritable: boolean\tNativeScript - Property",
			"inheritable"
		],
		[
			"actionBarHidden: boolean\tNativeScript - Page",
			"actionBarHidden"
		],
		[
			"placeholderColor: Color\tNativeScript - Style",
			"placeholderColor"
		],
		[
			"paddingTop: number\tNativeScript - DockLayout",
			"paddingTop"
		],
		[
			"getActualSize(): Size\tNativeScript - WebView",
			"getActualSize()"
		],
		[
			"borderColor: Color\tNativeScript - LayoutBase",
			"borderColor"
		],
		[
			"_gestureObservers: any\tNativeScript - Layout",
			"_gestureObservers"
		],
		[
			"selectedIndex: number\tNativeScript - TabView",
			"selectedIndex"
		],
		[
			"eventPhase: number\tNativeScript - ErrorEvent",
			"eventPhase"
		],
		[
			"borderColor: Color\tNativeScript - ListPicker",
			"borderColor"
		],
		[
			"get( name: string ): any\tNativeScript - Page",
			"get(${1:name: string})"
		],
		[
			"isTrusted: boolean\tNativeScript - ErrorEvent",
			"isTrusted"
		],
		[
			"get( key: string ): any\tNativeScript - Cache",
			"get(${1:key: string})"
		],
		[
			"_isVisible: boolean\tNativeScript - SearchBar",
			"_isVisible"
		],
		[
			"Static Add: string\tNativeScript - ChangeType",
			"Static Add"
		],
		[
			"_resetCssValues(): void\tNativeScript - Style",
			"_resetCssValues()"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Int8Array",
			"buffer"
		],
		[
			"disableDownload(): void\tNativeScript - Cache",
			"disableDownload()"
		],
		[
			"marginLeft: number\tNativeScript - ScrollView",
			"marginLeft"
		],
		[
			"bindingContext: any\tNativeScript - SearchBar",
			"bindingContext"
		],
		[
			"NaN: number\tNativeScript - NumberConstructor",
			"NaN"
		],
		[
			"isEnabled: boolean\tNativeScript - ScrollView",
			"isEnabled"
		],
		[
			"localValue: any\tNativeScript - PropertyEntry",
			"localValue"
		],
		[
			"actualLength: number\tNativeScript - ItemSpec",
			"actualLength"
		],
		[
			"Page( json?: any ): Page\tNativeScript - Page",
			"Page(${1:json?: any})"
		],
		[
			"typeName: string\tNativeScript - SegmentedBar",
			"typeName"
		],
		[
			"borderWidth: number\tNativeScript - SearchBar",
			"borderWidth"
		],
		[
			"action: string\tNativeScript - ChangedData<T>",
			"action"
		],
		[
			"dir( obj: any ): void\tNativeScript - Console",
			"dir(${1:obj: any})"
		],
		[
			"borderColor: Color\tNativeScript - ScrollView",
			"borderColor"
		],
		[
			"toString(): string\tNativeScript - Int32Array",
			"toString()"
		],
		[
			"gridUnitType: string\tNativeScript - ItemSpec",
			"gridUnitType"
		],
		[
			"get(): any\tNativeScript - PropertyDescriptor",
			"get()"
		],
		[
			"toLocaleString(): string\tNativeScript - Date",
			"toLocaleString()"
		],
		[
			"isEnabled: boolean\tNativeScript - GridLayout",
			"isEnabled"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - Int8Array",
			"buffer"
		],
		[
			"borderColor: Color\tNativeScript - DockLayout",
			"borderColor"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Switch",
			"isLayoutValid"
		],
		[
			"onUnloaded(): void\tNativeScript - ListPicker",
			"onUnloaded()"
		],
		[
			"value: any\tNativeScript - PropertyDescriptor",
			"value"
		],
		[
			"visibility: string\tNativeScript - GridLayout",
			"visibility"
		],
		[
			"borderColor: Color\tNativeScript - Background",
			"borderColor"
		],
		[
			"context: any\tNativeScript - ShownModallyData",
			"context"
		],
		[
			"message: string\tNativeScript - PromptOptions",
			"message"
		],
		[
			"margin: string\tNativeScript - AbsoluteLayout",
			"margin"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Border",
			"isLayoutValid"
		],
		[
			"_updateLayout(): void\tNativeScript - TabView",
			"_updateLayout()"
		],
		[
			"onUnloaded(): void\tNativeScript - WrapLayout",
			"onUnloaded()"
		],
		[
			"image: ImageSource\tNativeScript - Background",
			"image"
		],
		[
			"getActualSize(): Size\tNativeScript - TabView",
			"getActualSize()"
		],
		[
			"visibility: string\tNativeScript - TimePicker",
			"visibility"
		],
		[
			"translateY: number\tNativeScript - TimePicker",
			"translateY"
		],
		[
			"backgroundColor: Color\tNativeScript - Switch",
			"backgroundColor"
		],
		[
			"toString(): string\tNativeScript - Int32Array",
			"toString()"
		],
		[
			"translateX: number\tNativeScript - TimePicker",
			"translateX"
		],
		[
			"android: any\tNativeScript - EditableTextBase",
			"android"
		],
		[
			"automationText: string\tNativeScript - Switch",
			"automationText"
		],
		[
			"byteOffset: number\tNativeScript - Int32Array",
			"byteOffset"
		],
		[
			"toString(): string\tNativeScript - Uint8Array",
			"toString()"
		],
		[
			"backgroundColor: Color\tNativeScript - Border",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - Border",
			"automationText"
		],
		[
			"requestLayout(): void\tNativeScript - TabView",
			"requestLayout()"
		],
		[
			"_createUI(): void\tNativeScript - StackLayout",
			"_createUI()"
		],
		[
			"shift(): T\tNativeScript - ObservableArray<T>",
			"shift()"
		],
		[
			"getUTCFullYear(): number\tNativeScript - Date",
			"getUTCFullYear()"
		],
		[
			"_gestureObservers: any\tNativeScript - Border",
			"_gestureObservers"
		],
		[
			"translateY: number\tNativeScript - GridLayout",
			"translateY"
		],
		[
			"borderColor: Color\tNativeScript - WrapLayout",
			"borderColor"
		],
		[
			"isTrusted: boolean\tNativeScript - ErrorEvent",
			"isTrusted"
		],
		[
			"_gestureObservers: any\tNativeScript - Switch",
			"_gestureObservers"
		],
		[
			"focus(): boolean\tNativeScript - SegmentedBar",
			"focus()"
		],
		[
			"cos( x: number ): number\tNativeScript - Math",
			"cos(${1:x: number})"
		],
		[
			"_childrenCount: number\tNativeScript - Border",
			"_childrenCount"
		],
		[
			"color: Color\tNativeScript - EditableTextBase",
			"color"
		],
		[
			"color: Color\tNativeScript - CustomLayoutView",
			"color"
		],
		[
			"duration: number\tNativeScript - KeyframeInfo",
			"duration"
		],
		[
			"marginLeft: number\tNativeScript - TimePicker",
			"marginLeft"
		],
		[
			"_childrenCount: number\tNativeScript - Switch",
			"_childrenCount"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Button",
			"isLayoutValid"
		],
		[
			"hint: string\tNativeScript - EditableTextBase",
			"hint"
		],
		[
			"parent: View\tNativeScript - EditableTextBase",
			"parent"
		],
		[
			"requestLayout(): void\tNativeScript - WebView",
			"requestLayout()"
		],
		[
			"isEnabled: boolean\tNativeScript - TimePicker",
			"isEnabled"
		],
		[
			"className: string\tNativeScript - StackLayout",
			"className"
		],
		[
			"style: Style\tNativeScript - EditableTextBase",
			"style"
		],
		[
			"text: string\tNativeScript - EditableTextBase",
			"text"
		],
		[
			"CAPTURING_PHASE: number\tNativeScript - Event",
			"CAPTURING_PHASE"
		],
		[
			"pop(): string\tNativeScript - RegExpExecArray",
			"pop()"
		],
		[
			"changeMap: ChangeMap\tNativeScript - CssState",
			"changeMap"
		],
		[
			"_gestureObservers: any\tNativeScript - Button",
			"_gestureObservers"
		],
		[
			"byteLength: number\tNativeScript - Int32Array",
			"byteLength"
		],
		[
			"isEmpty(): boolean\tNativeScript - Background",
			"isEmpty()"
		],
		[
			"visibility: string\tNativeScript - DockLayout",
			"visibility"
		],
		[
			"exp( x: number ): number\tNativeScript - Math",
			"exp(${1:x: number})"
		],
		[
			"getUTCFullYear(): number\tNativeScript - Date",
			"getUTCFullYear()"
		],
		[
			"borderColor: Color\tNativeScript - TimePicker",
			"borderColor"
		],
		[
			"_createUI(): void\tNativeScript - ContentView",
			"_createUI()"
		],
		[
			"inheritable: boolean\tNativeScript - Property",
			"inheritable"
		],
		[
			"borderRadius: number\tNativeScript - ListView",
			"borderRadius"
		],
		[
			"translateX: number\tNativeScript - GridLayout",
			"translateX"
		],
		[
			"className: string\tNativeScript - Placeholder",
			"className"
		],
		[
			"borderRadius: number\tNativeScript - TextBase",
			"borderRadius"
		],
		[
			"translateY: number\tNativeScript - DockLayout",
			"translateY"
		],
		[
			"minWidth: number\tNativeScript - SegmentedBar",
			"minWidth"
		],
		[
			"input: string\tNativeScript - RegExpExecArray",
			"input"
		],
		[
			"index: number\tNativeScript - RegExpExecArray",
			"index"
		],
		[
			"index: number\tNativeScript - RegExpExecArray",
			"index"
		],
		[
			"translateX: number\tNativeScript - DockLayout",
			"translateX"
		],
		[
			"marginRight: number\tNativeScript - SearchBar",
			"marginRight"
		],
		[
			"dynamic: boolean\tNativeScript - SelectorCore",
			"dynamic"
		],
		[
			"marginBottom: number\tNativeScript - TextBase",
			"marginBottom"
		],
		[
			"isLoaded: boolean\tNativeScript - Placeholder",
			"isLoaded"
		],
		[
			"input: string\tNativeScript - RegExpExecArray",
			"input"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Slider",
			"isLayoutValid"
		],
		[
			"isScrolling: boolean\tNativeScript - ListView",
			"isScrolling"
		],
		[
			"ruleset: RuleSet\tNativeScript - SelectorCore",
			"ruleset"
		],
		[
			"byteOffset: number\tNativeScript - Int32Array",
			"byteOffset"
		],
		[
			"byteLength: number\tNativeScript - Int32Array",
			"byteLength"
		],
		[
			"onUnloaded(): void\tNativeScript - LayoutBase",
			"onUnloaded()"
		],
		[
			"marginTop: number\tNativeScript - Placeholder",
			"marginTop"
		],
		[
			"marginBottom: number\tNativeScript - ListView",
			"marginBottom"
		],
		[
			"minHeight: number\tNativeScript - Placeholder",
			"minHeight"
		],
		[
			"marginBottom: number\tNativeScript - Repeater",
			"marginBottom"
		],
		[
			"isEnabled: boolean\tNativeScript - WrapLayout",
			"isEnabled"
		],
		[
			"Span( json?: any ): Span\tNativeScript - Span",
			"Span(${1:json?: any})"
		],
		[
			"_childrenCount: number\tNativeScript - Layout",
			"_childrenCount"
		],
		[
			"isEnabled: boolean\tNativeScript - DockLayout",
			"isEnabled"
		],
		[
			"Static Add: string\tNativeScript - ChangeType",
			"Static Add"
		],
		[
			"value: any\tNativeScript - PropertyChangeData",
			"value"
		],
		[
			"cssClass: string\tNativeScript - SegmentedBar",
			"cssClass"
		],
		[
			"eventPhase: number\tNativeScript - ErrorEvent",
			"eventPhase"
		],
		[
			"attributes: Setstring\tNativeScript - Changes",
			"attributes"
		],
		[
			"borderColor: Color\tNativeScript - GridLayout",
			"borderColor"
		],
		[
			"toString(): string\tNativeScript - Int16Array",
			"toString()"
		],
		[
			"UNSENT: number\tNativeScript - XMLHttpRequest",
			"UNSENT"
		],
		[
			"get( name: string ): any\tNativeScript - Span",
			"get(${1:name: string})"
		],
		[
			"OPENED: number\tNativeScript - XMLHttpRequest",
			"OPENED"
		],
		[
			"borderRadius: number\tNativeScript - Repeater",
			"borderRadius"
		],
		[
			"pos: number\tNativeScript - AttributeSelector",
			"pos"
		],
		[
			"enabled: boolean\tNativeScript - Module trace",
			"enabled"
		],
		[
			"marginBottom: number\tNativeScript - HtmlView",
			"marginBottom"
		],
		[
			"_isVisible: boolean\tNativeScript - ActionBar",
			"_isVisible"
		],
		[
			"isLoaded: boolean\tNativeScript - StackLayout",
			"isLoaded"
		],
		[
			"byteLength: number\tNativeScript - Uint8Array",
			"byteLength"
		],
		[
			"byteOffset: number\tNativeScript - Uint8Array",
			"byteOffset"
		],
		[
			"comb: \"+\"\"~\"\">\"\" \"\tNativeScript - IdSelector",
			"comb"
		],
		[
			"marginLeft: number\tNativeScript - GridLayout",
			"marginLeft"
		],
		[
			"stopPropagation(): void\tNativeScript - Event",
			"stopPropagation()"
		],
		[
			"_createUI(): void\tNativeScript - Placeholder",
			"_createUI()"
		],
		[
			"NaN: number\tNativeScript - NumberConstructor",
			"NaN"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Layout",
			"isLayoutValid"
		],
		[
			"_nativeView: any\tNativeScript - SegmentedBar",
			"_nativeView"
		],
		[
			"bindingContext: any\tNativeScript - ActionBar",
			"bindingContext"
		],
		[
			"borderWidth: number\tNativeScript - ActionBar",
			"borderWidth"
		],
		[
			"log( x: number ): number\tNativeScript - Math",
			"log(${1:x: number})"
		],
		[
			"borderRadius: number\tNativeScript - HtmlView",
			"borderRadius"
		],
		[
			"backgroundImage: string\tNativeScript - Frame",
			"backgroundImage"
		],
		[
			"itemHeight: number\tNativeScript - WrapLayout",
			"itemHeight"
		],
		[
			"srcElement: any\tNativeScript - ProgressEvent",
			"srcElement"
		],
		[
			"toString(): string\tNativeScript - Int16Array",
			"toString()"
		],
		[
			"cancelable: boolean\tNativeScript - EventInit",
			"cancelable"
		],
		[
			"byteOffset: number\tNativeScript - Int16Array",
			"byteOffset"
		],
		[
			"marginLeft: number\tNativeScript - DatePicker",
			"marginLeft"
		],
		[
			"id: string\tNativeScript - NativeScriptModule",
			"id"
		],
		[
			"marginRight: number\tNativeScript - ActionBar",
			"marginRight"
		],
		[
			"toString(): string\tNativeScript - Uint8Array",
			"toString()"
		],
		[
			"byteLength: number\tNativeScript - Int16Array",
			"byteLength"
		],
		[
			"_cssState: any\tNativeScript - AbsoluteLayout",
			"_cssState"
		],
		[
			"_domId: number\tNativeScript - AbsoluteLayout",
			"_domId"
		],
		[
			"tan( x: number ): number\tNativeScript - Math",
			"tan(${1:x: number})"
		],
		[
			"android: any\tNativeScript - CustomLayoutView",
			"android"
		],
		[
			"isEnabled: boolean\tNativeScript - DatePicker",
			"isEnabled"
		],
		[
			"marginLeft: number\tNativeScript - WrapLayout",
			"marginLeft"
		],
		[
			"pos: number\tNativeScript - UniversalSelector",
			"pos"
		],
		[
			"marginLeft: number\tNativeScript - DockLayout",
			"marginLeft"
		],
		[
			"paddingTop: number\tNativeScript - GridLayout",
			"paddingTop"
		],
		[
			"marginBottom: number\tNativeScript - TextView",
			"marginBottom"
		],
		[
			"keyboardType: string\tNativeScript - TextView",
			"keyboardType"
		],
		[
			"result: any\tNativeScript - NativeValueResult",
			"result"
		],
		[
			"translateX: number\tNativeScript - LayoutBase",
			"translateX"
		],
		[
			"borderColor: Color\tNativeScript - DatePicker",
			"borderColor"
		],
		[
			"className: string\tNativeScript - ContentView",
			"className"
		],
		[
			"toLocaleString(): string\tNativeScript - Date",
			"toLocaleString()"
		],
		[
			"translateY: number\tNativeScript - LayoutBase",
			"translateY"
		],
		[
			"backgroundColor: Color\tNativeScript - Slider",
			"backgroundColor"
		],
		[
			"_isVisible: boolean\tNativeScript - TextField",
			"_isVisible"
		],
		[
			"page: View\tNativeScript - ProxyViewContainer",
			"page"
		],
		[
			"id: string\tNativeScript - ProxyViewContainer",
			"id"
		],
		[
			"bindingContext: any\tNativeScript - TextField",
			"bindingContext"
		],
		[
			"visibility: string\tNativeScript - LayoutBase",
			"visibility"
		],
		[
			"automationText: string\tNativeScript - Slider",
			"automationText"
		],
		[
			"borderWidth: number\tNativeScript - TextField",
			"borderWidth"
		],
		[
			"now(): number\tNativeScript - DateConstructor",
			"now()"
		],
		[
			"borderRadius: number\tNativeScript - TextView",
			"borderRadius"
		],
		[
			"isLoaded: boolean\tNativeScript - ContentView",
			"isLoaded"
		],
		[
			"_resetCssValues(): void\tNativeScript - Style",
			"_resetCssValues()"
		],
		[
			"sin( x: number ): number\tNativeScript - Math",
			"sin(${1:x: number})"
		],
		[
			"autocorrect: boolean\tNativeScript - TextView",
			"autocorrect"
		],
		[
			"removeChildren(): void\tNativeScript - Layout",
			"removeChildren()"
		],
		[
			"height: number\tNativeScript - AbsoluteLayout",
			"height"
		],
		[
			"marginRight: number\tNativeScript - TextField",
			"marginRight"
		],
		[
			"_gestureObservers: any\tNativeScript - Slider",
			"_gestureObservers"
		],
		[
			"dir( obj: any ): void\tNativeScript - Console",
			"dir(${1:obj: any})"
		],
		[
			"marginTop: number\tNativeScript - ContentView",
			"marginTop"
		],
		[
			"OPENED: number\tNativeScript - XMLHttpRequest",
			"OPENED"
		],
		[
			"UNSENT: number\tNativeScript - XMLHttpRequest",
			"UNSENT"
		],
		[
			"view: any\tNativeScript - CreateViewEventData",
			"view"
		],
		[
			"visibility: string\tNativeScript - ListPicker",
			"visibility"
		],
		[
			"get( name: string ): any\tNativeScript - View",
			"get(${1:name: string})"
		],
		[
			"sin( x: number ): number\tNativeScript - Math",
			"sin(${1:x: number})"
		],
		[
			"pop(): string\tNativeScript - RegExpExecArray",
			"pop()"
		],
		[
			"_childrenCount: number\tNativeScript - Slider",
			"_childrenCount"
		],
		[
			"minHeight: number\tNativeScript - ContentView",
			"minHeight"
		],
		[
			"paddingTop: number\tNativeScript - WrapLayout",
			"paddingTop"
		],
		[
			"abs( x: number ): number\tNativeScript - Math",
			"abs(${1:x: number})"
		],
		[
			"typeName: string\tNativeScript - AndroidFrame",
			"typeName"
		],
		[
			"text: string\tNativeScript - NavigationButton",
			"text"
		],
		[
			"visibility: string\tNativeScript - WrapLayout",
			"visibility"
		],
		[
			"icon: string\tNativeScript - NavigationButton",
			"icon"
		],
		[
			"View( json?: any ): View\tNativeScript - View",
			"View(${1:json?: any})"
		],
		[
			"dir( obj: any ): void\tNativeScript - Console",
			"dir(${1:obj: any})"
		],
		[
			"translateX: number\tNativeScript - DatePicker",
			"translateX"
		],
		[
			"goBack(): any\tNativeScript - Module ui/frame",
			"goBack()"
		],
		[
			"context: any\tNativeScript - GesturesObserver",
			"context"
		],
		[
			"android: any\tNativeScript - GestureEventData",
			"android"
		],
		[
			"translateY: number\tNativeScript - WrapLayout",
			"translateY"
		],
		[
			"translateX: number\tNativeScript - WrapLayout",
			"translateX"
		],
		[
			"backgroundImage: string\tNativeScript - Style",
			"backgroundImage"
		],
		[
			"namespace: string\tNativeScript - ParserEvent",
			"namespace"
		],
		[
			"visibility: string\tNativeScript - ActionItem",
			"visibility"
		],
		[
			"byteOffset: number\tNativeScript - Int16Array",
			"byteOffset"
		],
		[
			"byteLength: number\tNativeScript - Int16Array",
			"byteLength"
		],
		[
			"eventType: string\tNativeScript - ParserEvent",
			"eventType"
		],
		[
			"cos( x: number ): number\tNativeScript - Math",
			"cos(${1:x: number})"
		],
		[
			"value: any\tNativeScript - PropertyDescriptor",
			"value"
		],
		[
			"exp( x: number ): number\tNativeScript - Math",
			"exp(${1:x: number})"
		],
		[
			"borderRadius: number\tNativeScript - Progress",
			"borderRadius"
		],
		[
			"translateY: number\tNativeScript - ListPicker",
			"translateY"
		],
		[
			"get(): any\tNativeScript - PropertyDescriptor",
			"get()"
		],
		[
			"translateX: number\tNativeScript - ListPicker",
			"translateX"
		],
		[
			"id: string\tNativeScript - NativeScriptModule",
			"id"
		],
		[
			"onLoaded(): void\tNativeScript - SegmentedBar",
			"onLoaded()"
		],
		[
			"_isEmpty(): boolean\tNativeScript - ActionBar",
			"_isEmpty()"
		],
		[
			"marginBottom: number\tNativeScript - Progress",
			"marginBottom"
		],
		[
			"style: Style\tNativeScript - CustomLayoutView",
			"style"
		],
		[
			"parent: View\tNativeScript - CustomLayoutView",
			"parent"
		],
		[
			"tan( x: number ): number\tNativeScript - Math",
			"tan(${1:x: number})"
		],
		[
			"log( x: number ): number\tNativeScript - Math",
			"log(${1:x: number})"
		],
		[
			"status: number\tNativeScript - XMLHttpRequest",
			"status"
		],
		[
			"originX: number\tNativeScript - SegmentedBar",
			"originX"
		],
		[
			"typeName: string\tNativeScript - StackLayout",
			"typeName"
		],
		[
			"declarations: Node\tNativeScript - Keyframes",
			"declarations"
		],
		[
			"property: string\tNativeScript - Declaration",
			"property"
		],
		[
			"backgroundSize: string\tNativeScript - Style",
			"backgroundSize"
		],
		[
			"marginRight: number\tNativeScript - Progress",
			"marginRight"
		],
		[
			"borderWidth: number\tNativeScript - Progress",
			"borderWidth"
		],
		[
			"position: Position\tNativeScript - Keyframes",
			"position"
		],
		[
			"onUnloaded(): void\tNativeScript - ActionBar",
			"onUnloaded()"
		],
		[
			"response: any\tNativeScript - XMLHttpRequest",
			"response"
		],
		[
			"bindingContext: any\tNativeScript - Progress",
			"bindingContext"
		],
		[
			"_raiseTap(): void\tNativeScript - ActionItem",
			"_raiseTap()"
		],
		[
			"backgroundColor: Color\tNativeScript - Style",
			"backgroundColor"
		],
		[
			"_isVisible: boolean\tNativeScript - Progress",
			"_isVisible"
		],
		[
			"ios: any\tNativeScript - PanGestureEventData",
			"ios"
		],
		[
			"typeName: string\tNativeScript - ProxyObject",
			"typeName"
		],
		[
			"abort(): void\tNativeScript - XMLHttpRequest",
			"abort()"
		],
		[
			"visibility: string\tNativeScript - ActionBar",
			"visibility"
		],
		[
			"_updateLayout(): void\tNativeScript - Slider",
			"_updateLayout()"
		],
		[
			"translateY: number\tNativeScript - ActionBar",
			"translateY"
		],
		[
			"translateX: number\tNativeScript - ActionBar",
			"translateX"
		],
		[
			"context: any\tNativeScript - NavigationEntry",
			"context"
		],
		[
			"onUnloaded(): void\tNativeScript - TextField",
			"onUnloaded()"
		],
		[
			"textDecoration: string\tNativeScript - Style",
			"textDecoration"
		],
		[
			"visibility: string\tNativeScript - TextField",
			"visibility"
		],
		[
			"translateY: number\tNativeScript - TextField",
			"translateY"
		],
		[
			"translateX: number\tNativeScript - TextField",
			"translateX"
		],
		[
			"GC(): any\tNativeScript - Module utils/utils",
			"GC()"
		],
		[
			"_boundsChanged(): void\tNativeScript - Style",
			"_boundsChanged()"
		],
		[
			"marginLeft: number\tNativeScript - TextField",
			"marginLeft"
		],
		[
			"onUnloaded(): void\tNativeScript - SearchBar",
			"onUnloaded()"
		],
		[
			"_isVisible: boolean\tNativeScript - TextView",
			"_isVisible"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - DataView",
			"buffer"
		],
		[
			"layoutView: View\tNativeScript - ContentView",
			"layoutView"
		],
		[
			"isEnabled: boolean\tNativeScript - TextField",
			"isEnabled"
		],
		[
			"minWidth: number\tNativeScript - ContentView",
			"minWidth"
		],
		[
			"bindingContext: any\tNativeScript - TextView",
			"bindingContext"
		],
		[
			"loaded: number\tNativeScript - ProgressEvent",
			"loaded"
		],
		[
			"borderWidth: number\tNativeScript - TextView",
			"borderWidth"
		],
		[
			"minHeight: number\tNativeScript - DockLayout",
			"minHeight"
		],
		[
			"onLoaded(): void\tNativeScript - Placeholder",
			"onLoaded()"
		],
		[
			"borderColor: Color\tNativeScript - TextField",
			"borderColor"
		],
		[
			"cssClass: string\tNativeScript - ContentView",
			"cssClass"
		],
		[
			"requestLayout(): void\tNativeScript - Layout",
			"requestLayout()"
		],
		[
			"className: string\tNativeScript - DatePicker",
			"className"
		],
		[
			"minHeight: number\tNativeScript - WrapLayout",
			"minHeight"
		],
		[
			"className: string\tNativeScript - GridLayout",
			"className"
		],
		[
			"_nativeView: any\tNativeScript - ContentView",
			"_nativeView"
		],
		[
			"marginRight: number\tNativeScript - TextView",
			"marginRight"
		],
		[
			"AT_TARGET: number\tNativeScript - ErrorEvent",
			"AT_TARGET"
		],
		[
			"_createUI(): void\tNativeScript - WrapLayout",
			"_createUI()"
		],
		[
			"minHeight: number\tNativeScript - GridLayout",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - WrapLayout",
			"marginTop"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Label",
			"isLayoutValid"
		],
		[
			"isLoaded: boolean\tNativeScript - DatePicker",
			"isLoaded"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Frame",
			"isLayoutValid"
		],
		[
			"_context: any\tNativeScript - AbsoluteLayout",
			"_context"
		],
		[
			"requestLayout(): void\tNativeScript - Button",
			"requestLayout()"
		],
		[
			"marginTop: number\tNativeScript - GridLayout",
			"marginTop"
		],
		[
			"focus(): boolean\tNativeScript - Placeholder",
			"focus()"
		],
		[
			"$7: string\tNativeScript - RegExpConstructor",
			"$7"
		],
		[
			"marginLeft: number\tNativeScript - ActionBar",
			"marginLeft"
		],
		[
			"id: string\tNativeScript - ActivityIndicator",
			"id"
		],
		[
			"height: number\tNativeScript - CameraOptions",
			"height"
		],
		[
			"_isVisible: boolean\tNativeScript - HtmlView",
			"_isVisible"
		],
		[
			"itemWidth: number\tNativeScript - WrapLayout",
			"itemWidth"
		],
		[
			"$6: string\tNativeScript - RegExpConstructor",
			"$6"
		],
		[
			"bindingContext: any\tNativeScript - HtmlView",
			"bindingContext"
		],
		[
			"isEnabled: boolean\tNativeScript - ActionBar",
			"isEnabled"
		],
		[
			"backgroundColor: Color\tNativeScript - Frame",
			"backgroundColor"
		],
		[
			"automationText: string\tNativeScript - Frame",
			"automationText"
		],
		[
			"object: Observable\tNativeScript - EventData",
			"object"
		],
		[
			"borderWidth: number\tNativeScript - HtmlView",
			"borderWidth"
		],
		[
			"page: View\tNativeScript - ActivityIndicator",
			"page"
		],
		[
			"ident: string\tNativeScript - PseudoSelector",
			"ident"
		],
		[
			"borderColor: Color\tNativeScript - ActionBar",
			"borderColor"
		],
		[
			"marginTop: number\tNativeScript - DatePicker",
			"marginTop"
		],
		[
			"_gestureObservers: any\tNativeScript - Frame",
			"_gestureObservers"
		],
		[
			"getActualSize(): Size\tNativeScript - Button",
			"getActualSize()"
		],
		[
			"cssClass: string\tNativeScript - StackLayout",
			"cssClass"
		],
		[
			"$5: string\tNativeScript - RegExpConstructor",
			"$5"
		],
		[
			"_childrenCount: number\tNativeScript - Frame",
			"_childrenCount"
		],
		[
			"minHeight: number\tNativeScript - DatePicker",
			"minHeight"
		],
		[
			"_updateLayout(): void\tNativeScript - Button",
			"_updateLayout()"
		],
		[
			"_isVisible: boolean\tNativeScript - Repeater",
			"_isVisible"
		],
		[
			"type: \"[]\"\tNativeScript - AttributeSelector",
			"type"
		],
		[
			"disable(): void\tNativeScript - Module trace",
			"disable()"
		],
		[
			"isLoaded: boolean\tNativeScript - DockLayout",
			"isLoaded"
		],
		[
			"visibility: string\tNativeScript - SearchBar",
			"visibility"
		],
		[
			"filter: string\tNativeScript - EventListener",
			"filter"
		],
		[
			"marginRight: number\tNativeScript - HtmlView",
			"marginRight"
		],
		[
			"bindingContext: any\tNativeScript - Repeater",
			"bindingContext"
		],
		[
			"minHeight: number\tNativeScript - ListPicker",
			"minHeight"
		],
		[
			"_createUI(): void\tNativeScript - ListPicker",
			"_createUI()"
		],
		[
			"borderWidth: number\tNativeScript - Repeater",
			"borderWidth"
		],
		[
			"cssClasses: Setstring\tNativeScript - Slider",
			"cssClasses"
		],
		[
			"typeName: string\tNativeScript - Placeholder",
			"typeName"
		],
		[
			"getActualSize(): Size\tNativeScript - Slider",
			"getActualSize()"
		],
		[
			"property: string\tNativeScript - Declaration",
			"property"
		],
		[
			"preventDefault(): void\tNativeScript - Event",
			"preventDefault()"
		],
		[
			"translateY: number\tNativeScript - SearchBar",
			"translateY"
		],
		[
			"isPlaying: boolean\tNativeScript - Animation",
			"isPlaying"
		],
		[
			"translateX: number\tNativeScript - SearchBar",
			"translateX"
		],
		[
			"isLoaded: boolean\tNativeScript - GridLayout",
			"isLoaded"
		],
		[
			"isLoaded: boolean\tNativeScript - WrapLayout",
			"isLoaded"
		],
		[
			"$8: string\tNativeScript - RegExpConstructor",
			"$8"
		],
		[
			"spanModifiers: Arrayany\tNativeScript - Span",
			"spanModifiers"
		],
		[
			"typeName: string\tNativeScript - ContentView",
			"typeName"
		],
		[
			"minWidth: number\tNativeScript - Placeholder",
			"minWidth"
		],
		[
			"marginRight: number\tNativeScript - ListView",
			"marginRight"
		],
		[
			"marginRight: number\tNativeScript - Repeater",
			"marginRight"
		],
		[
			"$9: string\tNativeScript - RegExpConstructor",
			"$9"
		],
		[
			"cssType: string\tNativeScript - SegmentedBar",
			"cssType"
		],
		[
			"constructor: Function\tNativeScript - Object",
			"constructor"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Image",
			"isLayoutValid"
		],
		[
			"marginRight: number\tNativeScript - TextBase",
			"marginRight"
		],
		[
			"getUTCSeconds(): number\tNativeScript - Date",
			"getUTCSeconds()"
		],
		[
			"parent: View\tNativeScript - FormattedString",
			"parent"
		],
		[
			"$4: string\tNativeScript - RegExpConstructor",
			"$4"
		],
		[
			"marginLeft: number\tNativeScript - SearchBar",
			"marginLeft"
		],
		[
			"cssClass: string\tNativeScript - Placeholder",
			"cssClass"
		],
		[
			"borderWidth: number\tNativeScript - ListView",
			"borderWidth"
		],
		[
			"borderWidth: number\tNativeScript - TextBase",
			"borderWidth"
		],
		[
			"bindingContext: any\tNativeScript - TextBase",
			"bindingContext"
		],
		[
			"opacity: number\tNativeScript - SegmentedBar",
			"opacity"
		],
		[
			"_isVisible: boolean\tNativeScript - TextBase",
			"_isVisible"
		],
		[
			"type: string\tNativeScript - BlobPropertyBag",
			"type"
		],
		[
			"isEnabled: boolean\tNativeScript - SearchBar",
			"isEnabled"
		],
		[
			"originY: number\tNativeScript - SegmentedBar",
			"originY"
		],
		[
			"className: string\tNativeScript - WrapLayout",
			"className"
		],
		[
			"className: string\tNativeScript - TimePicker",
			"className"
		],
		[
			"paddingBottom: number\tNativeScript - Layout",
			"paddingBottom"
		],
		[
			"_nativeView: any\tNativeScript - Placeholder",
			"_nativeView"
		],
		[
			"bindingContext: any\tNativeScript - ListView",
			"bindingContext"
		],
		[
			"loaded: number\tNativeScript - ProgressEvent",
			"loaded"
		],
		[
			"_createUI(): void\tNativeScript - LayoutBase",
			"_createUI()"
		],
		[
			"isLoaded: boolean\tNativeScript - TimePicker",
			"isLoaded"
		],
		[
			"_isVisible: boolean\tNativeScript - ListView",
			"_isVisible"
		],
		[
			"getUTCMinutes(): number\tNativeScript - Date",
			"getUTCMinutes()"
		],
		[
			"$3: string\tNativeScript - RegExpConstructor",
			"$3"
		],
		[
			"marginTop: number\tNativeScript - TimePicker",
			"marginTop"
		],
		[
			"typeName: string\tNativeScript - TabViewItem",
			"typeName"
		],
		[
			"maxMinute: number\tNativeScript - TimePicker",
			"maxMinute"
		],
		[
			"minHeight: number\tNativeScript - TimePicker",
			"minHeight"
		],
		[
			"getUTCSeconds(): number\tNativeScript - Date",
			"getUTCSeconds()"
		],
		[
			"minMinute: number\tNativeScript - TimePicker",
			"minMinute"
		],
		[
			"BUBBLING_PHASE: number\tNativeScript - Event",
			"BUBBLING_PHASE"
		],
		[
			"_nativeView: any\tNativeScript - StackLayout",
			"_nativeView"
		],
		[
			"$9: string\tNativeScript - RegExpConstructor",
			"$9"
		],
		[
			"getActualSize(): Size\tNativeScript - Layout",
			"getActualSize()"
		],
		[
			"$8: string\tNativeScript - RegExpConstructor",
			"$8"
		],
		[
			"cssClasses: Setstring\tNativeScript - Border",
			"cssClasses"
		],
		[
			"className: string\tNativeScript - DockLayout",
			"className"
		],
		[
			"result: boolean\tNativeScript - PromptResult",
			"result"
		],
		[
			"$2: string\tNativeScript - RegExpConstructor",
			"$2"
		],
		[
			"cssClasses: Setstring\tNativeScript - Switch",
			"cssClasses"
		],
		[
			"isAbsolute: boolean\tNativeScript - ItemSpec",
			"isAbsolute"
		],
		[
			"type: string\tNativeScript - BlobPropertyBag",
			"type"
		],
		[
			"timeStamp: number\tNativeScript - ErrorEvent",
			"timeStamp"
		],
		[
			"byteLength: number\tNativeScript - Int8Array",
			"byteLength"
		],
		[
			"focus(): boolean\tNativeScript - ContentView",
			"focus()"
		],
		[
			"byteOffset: number\tNativeScript - Int8Array",
			"byteOffset"
		],
		[
			"_createUI(): void\tNativeScript - DockLayout",
			"_createUI()"
		],
		[
			"_createUI(): void\tNativeScript - TimePicker",
			"_createUI()"
		],
		[
			"className: string\tNativeScript - ScrollView",
			"className"
		],
		[
			"borderColor: Color\tNativeScript - SearchBar",
			"borderColor"
		],
		[
			"onLoaded(): void\tNativeScript - StackLayout",
			"onLoaded()"
		],
		[
			"index: number\tNativeScript - ChangedData<T>",
			"index"
		],
		[
			"backgroundImage: string\tNativeScript - View",
			"backgroundImage"
		],
		[
			"$7: string\tNativeScript - RegExpConstructor",
			"$7"
		],
		[
			"isLoaded: boolean\tNativeScript - ScrollView",
			"isLoaded"
		],
		[
			"marginTop: number\tNativeScript - ScrollView",
			"marginTop"
		],
		[
			"onLoaded(): void\tNativeScript - ContentView",
			"onLoaded()"
		],
		[
			"minHeight: number\tNativeScript - ScrollView",
			"minHeight"
		],
		[
			"cssClasses: Setstring\tNativeScript - Layout",
			"cssClasses"
		],
		[
			"enableDownload(): void\tNativeScript - Cache",
			"enableDownload()"
		],
		[
			"byteLength: number\tNativeScript - Int8Array",
			"byteLength"
		],
		[
			"$6: string\tNativeScript - RegExpConstructor",
			"$6"
		],
		[
			"byteOffset: number\tNativeScript - Int8Array",
			"byteOffset"
		],
		[
			"buffer: ArrayBuffer\tNativeScript - DataView",
			"buffer"
		],
		[
			"constructor: Function\tNativeScript - Object",
			"constructor"
		],
		[
			"response: any\tNativeScript - XMLHttpRequest",
			"response"
		],
		[
			"bindingContext: any\tNativeScript - Bindable",
			"bindingContext"
		],
		[
			"selectedColor: Color\tNativeScript - TabView",
			"selectedColor"
		],
		[
			"_updateLayout(): void\tNativeScript - Layout",
			"_updateLayout()"
		],
		[
			"clipToBounds: boolean\tNativeScript - Layout",
			"clipToBounds"
		],
		[
			"toString(): string\tNativeScript - Int8Array",
			"toString()"
		],
		[
			"_createUI(): void\tNativeScript - GridLayout",
			"_createUI()"
		],
		[
			"$1: string\tNativeScript - RegExpConstructor",
			"$1"
		],
		[
			"_childrenCount: number\tNativeScript - Image",
			"_childrenCount"
		],
		[
			"textDecoration: string\tNativeScript - Style",
			"textDecoration"
		],
		[
			"className: string\tNativeScript - LayoutBase",
			"className"
		],
		[
			"toUpperCase(): string\tNativeScript - String",
			"toUpperCase()"
		],
		[
			"toLowerCase(): string\tNativeScript - String",
			"toLowerCase()"
		],
		[
			"_gestureObservers: any\tNativeScript - Image",
			"_gestureObservers"
		],
		[
			"marginBottom: number\tNativeScript - TabView",
			"marginBottom"
		],
		[
			"className: string\tNativeScript - ListPicker",
			"className"
		],
		[
			"borderRadius: number\tNativeScript - TabView",
			"borderRadius"
		],
		[
			"_childrenCount: number\tNativeScript - Label",
			"_childrenCount"
		],
		[
			"automationText: string\tNativeScript - Image",
			"automationText"
		],
		[
			"backgroundColor: Color\tNativeScript - Image",
			"backgroundColor"
		],
		[
			"AT_TARGET: number\tNativeScript - ErrorEvent",
			"AT_TARGET"
		],
		[
			"$5: string\tNativeScript - RegExpConstructor",
			"$5"
		],
		[
			"backgroundImage: string\tNativeScript - Page",
			"backgroundImage"
		],
		[
			"$4: string\tNativeScript - RegExpConstructor",
			"$4"
		],
		[
			"running: boolean\tNativeScript - FPSCallback",
			"running"
		],
		[
			"cssClasses: Setstring\tNativeScript - Button",
			"cssClasses"
		],
		[
			"timeStamp: number\tNativeScript - ErrorEvent",
			"timeStamp"
		],
		[
			"$3: string\tNativeScript - RegExpConstructor",
			"$3"
		],
		[
			"_gestureObservers: any\tNativeScript - Label",
			"_gestureObservers"
		],
		[
			"userName: string\tNativeScript - LoginResult",
			"userName"
		],
		[
			"marginTop: number\tNativeScript - ListPicker",
			"marginTop"
		],
		[
			"marginTop: number\tNativeScript - DockLayout",
			"marginTop"
		],
		[
			"password: string\tNativeScript - LoginResult",
			"password"
		],
		[
			"$2: string\tNativeScript - RegExpConstructor",
			"$2"
		],
		[
			"requestLayout(): void\tNativeScript - Switch",
			"requestLayout()"
		],
		[
			"index: number\tNativeScript - ChangedData<T>",
			"index"
		],
		[
			"requestLayout(): void\tNativeScript - Slider",
			"requestLayout()"
		],
		[
			"preventDefault(): void\tNativeScript - Event",
			"preventDefault()"
		],
		[
			"abort(): void\tNativeScript - XMLHttpRequest",
			"abort()"
		],
		[
			"message: string\tNativeScript - LoginOptions",
			"message"
		],
		[
			"backgroundSize: string\tNativeScript - Style",
			"backgroundSize"
		],
		[
			"borderRadius: number\tNativeScript - WebView",
			"borderRadius"
		],
		[
			"width: number\tNativeScript - AbsoluteLayout",
			"width"
		],
		[
			"_updateLayout(): void\tNativeScript - Border",
			"_updateLayout()"
		],
		[
			"automationText: string\tNativeScript - Label",
			"automationText"
		],
		[
			"getActualSize(): Size\tNativeScript - Border",
			"getActualSize()"
		],
		[
			"toUpperCase(): string\tNativeScript - String",
			"toUpperCase()"
		],
		[
			"title: string\tNativeScript - ConfirmOptions",
			"title"
		],
		[
			"_createUI(): void\tNativeScript - ScrollView",
			"_createUI()"
		],
		[
			"toLowerCase(): string\tNativeScript - String",
			"toLowerCase()"
		],
		[
			"marginBottom: number\tNativeScript - WebView",
			"marginBottom"
		],
		[
			"backgroundColor: Color\tNativeScript - Label",
			"backgroundColor"
		],
		[
			"backgroundColor: Color\tNativeScript - Style",
			"backgroundColor"
		],
		[
			"message: string\tNativeScript - AlertOptions",
			"message"
		],
		[
			"getActualSize(): Size\tNativeScript - Switch",
			"getActualSize()"
		],
		[
			"isLoaded: boolean\tNativeScript - LayoutBase",
			"isLoaded"
		],
		[
			"focus(): boolean\tNativeScript - StackLayout",
			"focus()"
		],
		[
			"requestLayout(): void\tNativeScript - Border",
			"requestLayout()"
		],
		[
			"_createUI(): void\tNativeScript - DatePicker",
			"_createUI()"
		],
		[
			"BUBBLING_PHASE: number\tNativeScript - Event",
			"BUBBLING_PHASE"
		],
		[
			"toString(): string\tNativeScript - Int8Array",
			"toString()"
		],
		[
			"marginTop: number\tNativeScript - LayoutBase",
			"marginTop"
		],
		[
			"minHeight: number\tNativeScript - LayoutBase",
			"minHeight"
		],
		[
			"add( value: T ): SetT\tNativeScript - Set<T>",
			"add(${1:value: T})"
		],
		[
			"_updateLayout(): void\tNativeScript - Switch",
			"_updateLayout()"
		],
		[
			"add( value: T ): SetT\tNativeScript - Set<T>",
			"add(${1:value: T})"
		],
		[
			"$1: string\tNativeScript - RegExpConstructor",
			"$1"
		],
		[
			"minWidth: number\tNativeScript - StackLayout",
			"minWidth"
		],
		[
			"exports: any\tNativeScript - ComponentModule",
			"exports"
		],
		[
			"isLoaded: boolean\tNativeScript - ListPicker",
			"isLoaded"
		],
		[
			"getUTCMinutes(): number\tNativeScript - Date",
			"getUTCMinutes()"
		],
		[
			"borderWidth: number\tNativeScript - TabView",
			"borderWidth"
		],
		[
			"onUnloaded(): void\tNativeScript - ListView",
			"onUnloaded()"
		],
		[
			"focus(): boolean\tNativeScript - ListPicker",
			"focus()"
		],
		[
			"marginBottom: number\tNativeScript - Border",
			"marginBottom"
		],
		[
			"isEnabled: boolean\tNativeScript - Repeater",
			"isEnabled"
		],
		[
			"focus(): boolean\tNativeScript - GridLayout",
			"focus()"
		],
		[
			"onLoaded(): void\tNativeScript - DatePicker",
			"onLoaded()"
		],
		[
			"id: string\tNativeScript - EditableTextBase",
			"id"
		],
		[
			"cssClass: string\tNativeScript - DockLayout",
			"cssClass"
		],
		[
			"_updateLayout(): void\tNativeScript - Label",
			"_updateLayout()"
		],
		[
			"page: View\tNativeScript - EditableTextBase",
			"page"
		],
		[
			"onLoaded(): void\tNativeScript - ScrollView",
			"onLoaded()"
		],
		[
			"typeName: string\tNativeScript - ListPicker",
			"typeName"
		],
		[
			"toDateString(): string\tNativeScript - Date",
			"toDateString()"
		],
		[
			"marginBottom: number\tNativeScript - Button",
			"marginBottom"
		],
		[
			"isEnabled: boolean\tNativeScript - HtmlView",
			"isEnabled"
		],
		[
			"DONE: number\tNativeScript - XMLHttpRequest",
			"DONE"
		],
		[
			"comb: \"+\"\"~\"\">\"\" \"\tNativeScript - Selector",
			"comb"
		],
		[
			"minWidth: number\tNativeScript - ListPicker",
			"minWidth"
		],
		[
			"length: number\tNativeScript - Float64Array",
			"length"
		],
		[
			"paddingRight: number\tNativeScript - Layout",
			"paddingRight"
		],
		[
			"enable(): void\tNativeScript - Module trace",
			"enable()"
		],
		[
			"onUnloaded(): void\tNativeScript - Progress",
			"onUnloaded()"
		],
		[
			"minWidth: number\tNativeScript - ScrollView",
			"minWidth"
		],
		[
			"title: string\tNativeScript - PromptOptions",
			"title"
		],
		[
			"borderColor: Color\tNativeScript - Repeater",
			"borderColor"
		],
		[
			"marginLeft: number\tNativeScript - HtmlView",
			"marginLeft"
		],
		[
			"textTransform: string\tNativeScript - Style",
			"textTransform"
		],
		[
			"typeName: string\tNativeScript - ScrollView",
			"typeName"
		],
		[
			"page: Page\tNativeScript - NavigationButton",
			"page"
		],
		[
			"textAlignment: string\tNativeScript - Style",
			"textAlignment"
		],
		[
			"title: string\tNativeScript - DialogOptions",
			"title"
		],
		[
			"_nativeView: any\tNativeScript - DockLayout",
			"_nativeView"
		],
		[
			"minWidth: number\tNativeScript - DatePicker",
			"minWidth"
		],
		[
			"typeName: string\tNativeScript - DatePicker",
			"typeName"
		],
		[
			"typeName: string\tNativeScript - GridLayout",
			"typeName"
		],
		[
			"visibility: string\tNativeScript - Repeater",
			"visibility"
		],
		[
			"translateY: number\tNativeScript - Repeater",
			"translateY"
		],
		[
			"view: View\tNativeScript - GestureEventData",
			"view"
		],
		[
			"url: string\tNativeScript - DownloadRequest",
			"url"
		],
		[
			"cancelBubble: boolean\tNativeScript - Event",
			"cancelBubble"
		],
		[
			"error: string\tNativeScript - LoadEventData",
			"error"
		],
		[
			"requestLayout(): void\tNativeScript - Image",
			"requestLayout()"
		],
		[
			"layoutView: View\tNativeScript - ScrollView",
			"layoutView"
		],
		[
			"focus(): boolean\tNativeScript - WrapLayout",
			"focus()"
		],
		[
			"originY: number\tNativeScript - Placeholder",
			"originY"
		],
		[
			"visibility: string\tNativeScript - Progress",
			"visibility"
		],
		[
			"originX: number\tNativeScript - Placeholder",
			"originX"
		],
		[
			"foregroundColor: Color\tNativeScript - Span",
			"foregroundColor"
		],
		[
			"opacity: number\tNativeScript - Placeholder",
			"opacity"
		],
		[
			"fontAttributes: number\tNativeScript - Span",
			"fontAttributes"
		],
		[
			"_createUI(): void\tNativeScript - TextField",
			"_createUI()"
		],
		[
			"backgroundColor: Color\tNativeScript - Span",
			"backgroundColor"
		],
		[
			"borderColor: Color\tNativeScript - ListView",
			"borderColor"
		],
		[
			"typeName: string\tNativeScript - ActionItem",
			"typeName"
		],
		[
			"onUnloaded(): void\tNativeScript - Repeater",
			"onUnloaded()"
		],
		[
			"translateY: number\tNativeScript - Progress",
			"translateY"
		],
		[
			"onUnloaded(): void\tNativeScript - TextView",
			"onUnloaded()"
		],
		[
			"translateX: number\tNativeScript - Progress",
			"translateX"
		],
		[
			"height: number\tNativeScript - SegmentedBar",
			"height"
		],
		[
			"borderRadius: number\tNativeScript - Switch",
			"borderRadius"
		],
		[
			"paddingBottom: number\tNativeScript - Style",
			"paddingBottom"
		],
		[
			"stopLoading(): void\tNativeScript - WebView",
			"stopLoading()"
		],
		[
			"value: V\tNativeScript - KeyValuePair<K, V>",
			"value"
		],
		[
			"actionView: View\tNativeScript - ActionItem",
			"actionView"
		],
		[
			"onLoaded(): void\tNativeScript - LayoutBase",
			"onLoaded()"
		],
		[
			"byteOffset: number\tNativeScript - DataView",
			"byteOffset"
		],
		[
			"filename: string\tNativeScript - ErrorEvent",
			"filename"
		],
		[
			"cssType: string\tNativeScript - Placeholder",
			"cssType"
		],
		[
			"callee: Function\tNativeScript - IArguments",
			"callee"
		],
		[
			"android: AndroidFrame\tNativeScript - Frame",
			"android"
		],
		[
			"margin: string\tNativeScript - SegmentedBar",
			"margin"
		],
		[
			"title: string\tNativeScript - ActionOptions",
			"title"
		],
		[
			"_nativeView: any\tNativeScript - TimePicker",
			"_nativeView"
		],
		[
			"bubbles: boolean\tNativeScript - ErrorEvent",
			"bubbles"
		],
		[
			"id: string\tNativeScript - CustomLayoutView",
			"id"
		],
		[
			"byteLength: number\tNativeScript - DataView",
			"byteLength"
		],
		[
			"cornerRadius: number\tNativeScript - Border",
			"cornerRadius"
		],
		[
			"cssClass: string\tNativeScript - ScrollView",
			"cssClass"
		],
		[
			"marginRight: number\tNativeScript - TabView",
			"marginRight"
		],
		[
			"page: View\tNativeScript - CustomLayoutView",
			"page"
		],
		[
			"cssClasses: Setstring\tNativeScript - Frame",
			"cssClasses"
		],
		[
			"borderColor: Color\tNativeScript - TextBase",
			"borderColor"
		],
		[
			"typeName: string\tNativeScript - DockLayout",
			"typeName"
		],
		[
			"cssClass: string\tNativeScript - TimePicker",
			"cssClass"
		],
		[
			"rotate: number\tNativeScript - SegmentedBar",
			"rotate"
		],
		[
			"letterSpacing: number\tNativeScript - Style",
			"letterSpacing"
		],
		[
			"automationText: string\tNativeScript - View",
			"automationText"
		],
		[
			"marginLeft: number\tNativeScript - Progress",
			"marginLeft"
		],
		[
			"translateX: number\tNativeScript - Repeater",
			"translateX"
		],
		[
			"_isVisible: boolean\tNativeScript - TabView",
			"_isVisible"
		],
		[
			"cssType: string\tNativeScript - StackLayout",
			"cssType"
		],
		[
			"scaleX: number\tNativeScript - SegmentedBar",
			"scaleX"
		],
		[
			"isEnabled: boolean\tNativeScript - Progress",
			"isEnabled"
		],
		[
			"borderRadius: number\tNativeScript - Border",
			"borderRadius"
		],
		[
			"scaleY: number\tNativeScript - SegmentedBar",
			"scaleY"
		],
		[
			"_nativeView: any\tNativeScript - GridLayout",
			"_nativeView"
		],
		[
			"message: string\tNativeScript - SyntaxError",
			"message"
		],
		[
			"isLoaded: boolean\tNativeScript - SearchBar",
			"isLoaded"
		],
		[
			"marginBottom: number\tNativeScript - Slider",
			"marginBottom"
		],
		[
			"cssClass: string\tNativeScript - WrapLayout",
			"cssClass"
		],
		[
			"total: number\tNativeScript - ProgressEvent",
			"total"
		],
		[
			"total: number\tNativeScript - ProgressEvent",
			"total"
		],
		[
			"_nativeView: any\tNativeScript - WrapLayout",
			"_nativeView"
		],
		[
			"minWidth: number\tNativeScript - TimePicker",
			"minWidth"
		],
		[
			"status: number\tNativeScript - ResponseInit",
			"status"
		],
		[
			"pop(): T\tNativeScript - ObservableArray<T>",
			"pop()"
		],
		[
			"backgroundColor: Color\tNativeScript - View",
			"backgroundColor"
		],
		[
			"style: Style\tNativeScript - AbsoluteLayout",
			"style"
		],
		[
			"position: string\tNativeScript - Background",
			"position"
		],
		[
			"onLoaded(): void\tNativeScript - WrapLayout",
			"onLoaded()"
		],
		[
			"borderRadius: number\tNativeScript - Slider",
			"borderRadius"
		],
		[
			"isEnabled: boolean\tNativeScript - TextBase",
			"isEnabled"
		],
		[
			"_createUI(): void\tNativeScript - ActionBar",
			"_createUI()"
		],
		[
			"typeName: string\tNativeScript - TimePicker",
			"typeName"
		],
		[
			"borderColor: Color\tNativeScript - Progress",
			"borderColor"
		],
		[
			"length: number\tNativeScript - ArrayLike<T>",
			"length"
		],
		[
			"length: number\tNativeScript - Float32Array",
			"length"
		],
		[
			"marginTop: number\tNativeScript - SearchBar",
			"marginTop"
		],
		[
			"textAlignment: string\tNativeScript - Label",
			"textAlignment"
		],
		[
			"selectors: string\tNativeScript - Keyframes",
			"selectors"
		],
		[
			"clipPath: string\tNativeScript - Background",
			"clipPath"
		],
		[
			"_createUI(): void\tNativeScript - SearchBar",
			"_createUI()"
		],
		[
			"scale: number\tNativeScript - ScreenMetrics",
			"scale"
		],
		[
			"index: number\tNativeScript - ItemEventData",
			"index"
		],
		[
			"length: number\tNativeScript - ArrayLike<T>",
			"length"
		],
		[
			"onLoaded(): void\tNativeScript - GridLayout",
			"onLoaded()"
		],
		[
			"translateX: number\tNativeScript - ListView",
			"translateX"
		],
		[
			"json(): Promiseany\tNativeScript - Response",
			"json()"
		],
		[
			"translateY: number\tNativeScript - ListView",
			"translateY"
		],
		[
			"minHeight: number\tNativeScript - SearchBar",
			"minHeight"
		],
		[
			"_nativeView: any\tNativeScript - LayoutBase",
			"_nativeView"
		],
		[
			"focus(): boolean\tNativeScript - LayoutBase",
			"focus()"
		],
		[
			"cssClass: string\tNativeScript - DatePicker",
			"cssClass"
		],
		[
			"manufacturer: string\tNativeScript - Device",
			"manufacturer"
		],
		[
			"length: number\tNativeScript - Float64Array",
			"length"
		],
		[
			"typeName: string\tNativeScript - WrapLayout",
			"typeName"
		],
		[
			"toTimeString(): string\tNativeScript - Date",
			"toTimeString()"
		],
		[
			"_childrenCount: number\tNativeScript - Page",
			"_childrenCount"
		],
		[
			"onUnloaded(): void\tNativeScript - TextBase",
			"onUnloaded()"
		],
		[
			"minWidth: number\tNativeScript - WrapLayout",
			"minWidth"
		],
		[
			"type: ResponseType\tNativeScript - Response",
			"type"
		],
		[
			"marginLeft: number\tNativeScript - TextBase",
			"marginLeft"
		],
		[
			"_nativeView: any\tNativeScript - ListPicker",
			"_nativeView"
		],
		[
			"translateX: number\tNativeScript - HtmlView",
			"translateX"
		],
		[
			"translateY: number\tNativeScript - HtmlView",
			"translateY"
		],
		[
			"visibility: string\tNativeScript - HtmlView",
			"visibility"
		],
		[
			"attributes: any\tNativeScript - LoadOptions",
			"attributes"
		],
		[
			"json(): Promiseany\tNativeScript - Response",
			"json()"
		],
		[
			"statusText: string\tNativeScript - Response",
			"statusText"
		],
		[
			"visibility: string\tNativeScript - ListView",
			"visibility"
		],
		[
			"marginBottom: number\tNativeScript - Layout",
			"marginBottom"
		],
		[
			"cssValue: any\tNativeScript - PropertyEntry",
			"cssValue"
		],
		[
			"focus(): boolean\tNativeScript - ScrollView",
			"focus()"
		],
		[
			"toDateString(): string\tNativeScript - Date",
			"toDateString()"
		],
		[
			"_childrenCount: number\tNativeScript - View",
			"_childrenCount"
		],
		[
			"_gestureObservers: any\tNativeScript - Page",
			"_gestureObservers"
		],
		[
			"_updateLayout(): void\tNativeScript - Frame",
			"_updateLayout()"
		],
		[
			"isEnabled: boolean\tNativeScript - ListView",
			"isEnabled"
		],
		[
			"length: number\tNativeScript - Float32Array",
			"length"
		],
		[
			"clear(): void\tNativeScript - WeakMap<K, V>",
			"clear()"
		],
		[
			"focus(): boolean\tNativeScript - DatePicker",
			"focus()"
		],
		[
			"marginBottom: number\tNativeScript - Switch",
			"marginBottom"
		],
		[
			"clear(): void\tNativeScript - WeakMap<K, V>",
			"clear()"
		],
		[
			"opacity: number\tNativeScript - ContentView",
			"opacity"
		],
		[
			"onUnloaded(): void\tNativeScript - HtmlView",
			"onUnloaded()"
		],
		[
			"cache: RequestCache\tNativeScript - Request",
			"cache"
		],
		[
			"padding: string\tNativeScript - StackLayout",
			"padding"
		],
		[
			"borderColor: Color\tNativeScript - TextView",
			"borderColor"
		],
		[
			"getActualSize(): Size\tNativeScript - Frame",
			"getActualSize()"
		],
		[
			"minWidth: number\tNativeScript - DockLayout",
			"minWidth"
		],
		[
			"focus(): boolean\tNativeScript - TimePicker",
			"focus()"
		],
		[
			"textTransform: string\tNativeScript - Style",
			"textTransform"
		],
		[
			"cache: RequestCache\tNativeScript - Request",
			"cache"
		],
		[
			"callee: Function\tNativeScript - IArguments",
			"callee"
		],
		[
			"textAlignment: string\tNativeScript - Style",
			"textAlignment"
		],
		[
			"originX: number\tNativeScript - ContentView",
			"originX"
		],
		[
			"getActualSize(): Size\tNativeScript - Image",
			"getActualSize()"
		],
		[
			"originY: number\tNativeScript - ContentView",
			"originY"
		],
		[
			"_nativeView: any\tNativeScript - DatePicker",
			"_nativeView"
		],
		[
			"typeName: string\tNativeScript - LayoutBase",
			"typeName"
		],
		[
			"automationText: string\tNativeScript - Page",
			"automationText"
		],
		[
			"paddingBottom: number\tNativeScript - Style",
			"paddingBottom"
		],
		[
			"color: Color\tNativeScript - AbsoluteLayout",
			"color"
		],
		[
			"cssType: string\tNativeScript - ContentView",
			"cssType"
		],
		[
			"bindingContext: any\tNativeScript - TabView",
			"bindingContext"
		],
		[
			"minWidth: number\tNativeScript - GridLayout",
			"minWidth"
		],
		[
			"borderRadius: number\tNativeScript - Layout",
			"borderRadius"
		],
		[
			"isEnabled: boolean\tNativeScript - TextView",
			"isEnabled"
		],
		[
			"ios: any\tNativeScript - ProxyViewContainer",
			"ios"
		],
		[
			"onLoaded(): void\tNativeScript - TimePicker",
			"onLoaded()"
		],
		[
			"originY: number\tNativeScript - StackLayout",
			"originY"
		],
		[
			"onLoaded(): void\tNativeScript - ListPicker",
			"onLoaded()"
		],
		[
			"cssClass: string\tNativeScript - ListPicker",
			"cssClass"
		],
		[
			"backgroundColor: Color\tNativeScript - Page",
			"backgroundColor"
		],
		[
			"_nativeView: any\tNativeScript - ScrollView",
			"_nativeView"
		],
		[
			"typeName: string\tNativeScript - Observable",
			"typeName"
		],
		[
			"cssClasses: Setstring\tNativeScript - Label",
			"cssClasses"
		],
		[
			"marginLeft: number\tNativeScript - TextView",
			"marginLeft"
		],
		[
			"originX: number\tNativeScript - StackLayout",
			"originX"
		],
		[
			"parent: View\tNativeScript - AbsoluteLayout",
			"parent"
		],
		[
			"message: string\tNativeScript - SyntaxError",
			"message"
		],
		[
			"className: string\tNativeScript - SearchBar",
			"className"
		],
		[
			"message: string\tNativeScript - SourceError",
			"message"
		],
		[
			"className: string\tNativeScript - TextField",
			"className"
		],
		[
			"android: any\tNativeScript - AbsoluteLayout",
			"android"
		],
		[
			"type: \"*\"\tNativeScript - UniversalSelector",
			"type"
		],
		[
			"cssClasses: Setstring\tNativeScript - Image",
			"cssClasses"
		],
		[
			"_updateLayout(): void\tNativeScript - Image",
			"_updateLayout()"
		],
		[
			"cssClass: string\tNativeScript - LayoutBase",
			"cssClass"
		],
		[
			"translateX: number\tNativeScript - TextBase",
			"translateX"
		],
		[
			"remove(): Promiseany\tNativeScript - Folder",
			"remove()"
		],
		[
			"byteOffset: number\tNativeScript - DataView",
			"byteOffset"
		],
		[
			"letterSpacing: number\tNativeScript - Style",
			"letterSpacing"
		],
		[
			"editable: boolean\tNativeScript - TextField",
			"editable"
		],
		[
			"translateY: number\tNativeScript - TextBase",
			"translateY"
		],
		[
			"_isVisible: boolean\tNativeScript - WebView",
			"_isVisible"
		],
		[
			"byteLength: number\tNativeScript - DataView",
			"byteLength"
		],
		[
			"result: boolean\tNativeScript - LoginResult",
			"result"
		],
		[
			"toTimeString(): string\tNativeScript - Date",
			"toTimeString()"
		],
		[
			"name: string\tNativeScript - ReferenceError",
			"name"
		],
		[
			"bubbles: boolean\tNativeScript - ErrorEvent",
			"bubbles"
		],
		[
			"bindingContext: any\tNativeScript - WebView",
			"bindingContext"
		],
		[
			"status: number\tNativeScript - ResponseInit",
			"status"
		],
		[
			"translateX: number\tNativeScript - TextView",
			"translateX"
		],
		[
			"borderWidth: number\tNativeScript - WebView",
			"borderWidth"
		],
		[
			"translateY: number\tNativeScript - TextView",
			"translateY"
		],
		[
			"visibility: string\tNativeScript - TextBase",
			"visibility"
		],
		[
			"focus(): boolean\tNativeScript - DockLayout",
			"focus()"
		],
		[
			"statusText: string\tNativeScript - Response",
			"statusText"
		],
		[
			"onLoaded(): void\tNativeScript - DockLayout",
			"onLoaded()"
		],
		[
			"visibility: string\tNativeScript - TextView",
			"visibility"
		],
		[
			"minHeight: number\tNativeScript - ActionBar",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - ActionBar",
			"marginTop"
		],
		[
			"isLayoutValid: boolean\tNativeScript - View",
			"isLayoutValid"
		],
		[
			"marginLeft: number\tNativeScript - ListView",
			"marginLeft"
		],
		[
			"DONE: number\tNativeScript - XMLHttpRequest",
			"DONE"
		],
		[
			"eventName: string\tNativeScript - EventData",
			"eventName"
		],
		[
			"requestLayout(): void\tNativeScript - Frame",
			"requestLayout()"
		],
		[
			"marginRight: number\tNativeScript - WebView",
			"marginRight"
		],
		[
			"type: ResponseType\tNativeScript - Response",
			"type"
		],
		[
			"cancelBubble: boolean\tNativeScript - Event",
			"cancelBubble"
		],
		[
			"isLoaded: boolean\tNativeScript - TextField",
			"isLoaded"
		],
		[
			"requestLayout(): void\tNativeScript - Label",
			"requestLayout()"
		],
		[
			"width: number\tNativeScript - CameraOptions",
			"width"
		],
		[
			"_cssState: any\tNativeScript - SegmentedBar",
			"_cssState"
		],
		[
			"actionBar: any\tNativeScript - AndroidFrame",
			"actionBar"
		],
		[
			"isLoaded: boolean\tNativeScript - ActionBar",
			"isLoaded"
		],
		[
			"key: string\tNativeScript - DownloadRequest",
			"key"
		],
		[
			"_domId: number\tNativeScript - SegmentedBar",
			"_domId"
		],
		[
			"opacity: number\tNativeScript - StackLayout",
			"opacity"
		],
		[
			"isLayoutValid: boolean\tNativeScript - Page",
			"isLayoutValid"
		],
		[
			"cssClass: string\tNativeScript - GridLayout",
			"cssClass"
		],
		[
			"marginLeft: number\tNativeScript - Repeater",
			"marginLeft"
		],
		[
			"filename: string\tNativeScript - ErrorEvent",
			"filename"
		],
		[
			"minWidth: number\tNativeScript - LayoutBase",
			"minWidth"
		],
		[
			"borderColor: Color\tNativeScript - HtmlView",
			"borderColor"
		],
		[
			"getActualSize(): Size\tNativeScript - Label",
			"getActualSize()"
		],
		[
			"borderRadius: number\tNativeScript - Button",
			"borderRadius"
		],
		[
			"marginTop: number\tNativeScript - TextField",
			"marginTop"
		],
		[
			"navigationContext: any\tNativeScript - Page",
			"navigationContext"
		],
		[
			"_gestureObservers: any\tNativeScript - View",
			"_gestureObservers"
		],
		[
			"name: string\tNativeScript - ReferenceError",
			"name"
		],
		[
			"minHeight: number\tNativeScript - TextField",
			"minHeight"
		],
		[
			"className: string\tNativeScript - ActionBar",
			"className"
		],
		[
			"prefix: string\tNativeScript - ParserEvent",
			"prefix"
		],
		[
			"length: number\tNativeScript - Array<T, T>",
			"length"
		],
		[
			"originY: number\tNativeScript - LayoutBase",
			"originY"
		],
		[
			"originX: number\tNativeScript - LayoutBase",
			"originX"
		],
		[
			"get( key: K ): V\tNativeScript - Map<K, V>",
			"get(${1:key: K})"
		],
		[
			"clear(): Promiseany\tNativeScript - Folder",
			"clear()"
		],
		[
			"opacity: number\tNativeScript - LayoutBase",
			"opacity"
		],
		[
			"toString(): string\tNativeScript - List<T>",
			"toString()"
		],
		[
			"visibility: string\tNativeScript - WebView",
			"visibility"
		],
		[
			"defaultValue: any\tNativeScript - Property",
			"defaultValue"
		],
		[
			"translateY: number\tNativeScript - WebView",
			"translateY"
		],
		[
			"method: string\tNativeScript - RequestInit",
			"method"
		],
		[
			"translateX: number\tNativeScript - WebView",
			"translateX"
		],
		[
			"marginLeft: number\tNativeScript - WebView",
			"marginLeft"
		],
		[
			"returnValue: boolean\tNativeScript - Event",
			"returnValue"
		],
		[
			"body: BodyInit\tNativeScript - RequestInit",
			"body"
		],
		[
			"isEnabled: boolean\tNativeScript - WebView",
			"isEnabled"
		],
		[
			"canGoBack: boolean\tNativeScript - WebView",
			"canGoBack"
		],
		[
			"borderColor: Color\tNativeScript - WebView",
			"borderColor"
		],
		[
			"index: number\tNativeScript - ItemsLoading",
			"index"
		],
		[
			"borderRadius: number\tNativeScript - Style",
			"borderRadius"
		],
		[
			"cssClasses: Setstring\tNativeScript - Page",
			"cssClasses"
		],
		[
			"count: number\tNativeScript - ItemsLoading",
			"count"
		],
		[
			"ignoreCase: boolean\tNativeScript - RegExp",
			"ignoreCase"
		],
		[
			"values(): ArrayV\tNativeScript - Map<K, V>",
			"values()"
		],
		[
			"bindingContext: any\tNativeScript - Layout",
			"bindingContext"
		],
		[
			"cssType: string\tNativeScript - LayoutBase",
			"cssType"
		],
		[
			"marginBottom: number\tNativeScript - Style",
			"marginBottom"
		],
		[
			"defaultValue: any\tNativeScript - Property",
			"defaultValue"
		],
		[
			"os: string\tNativeScript - PlatformContext",
			"os"
		],
		[
			"getCurve(): any\tNativeScript - Transition",
			"getCurve()"
		],
		[
			"bubbles: boolean\tNativeScript - EventInit",
			"bubbles"
		],
		[
			"cssType: string\tNativeScript - ListPicker",
			"cssType"
		],
		[
			"borderRadius: number\tNativeScript - Image",
			"borderRadius"
		],
		[
			"height: number\tNativeScript - ImageSource",
			"height"
		],
		[
			"_isVisible: boolean\tNativeScript - Layout",
			"_isVisible"
		],
		[
			"value: T\tNativeScript - IteratorResult<T>",
			"value"
		],
		[
			"paddingRight: number\tNativeScript - Style",
			"paddingRight"
		],
		[
			"cssClasses: Setstring\tNativeScript - View",
			"cssClasses"
		],
		[
			"borderWidth: number\tNativeScript - Layout",
			"borderWidth"
		],
		[
			"_updateLayout(): void\tNativeScript - Page",
			"_updateLayout()"
		],
		[
			"srcElement: any\tNativeScript - ErrorEvent",
			"srcElement"
		],
		[
			"direction: number\tNativeScript - Location",
			"direction"
		],
		[
			"longitude: number\tNativeScript - Location",
			"longitude"
		],
		[
			"getActualSize(): Size\tNativeScript - Page",
			"getActualSize()"
		],
		[
			"_createUI(): void\tNativeScript - HtmlView",
			"_createUI()"
		],
		[
			"rotate: number\tNativeScript - StackLayout",
			"rotate"
		],
		[
			"message: string\tNativeScript - ErrorEvent",
			"message"
		],
		[
			"margin: string\tNativeScript - StackLayout",
			"margin"
		],
		[
			"maximumAge: number\tNativeScript - Options",
			"maximumAge"
		],
		[
			"requestLayout(): void\tNativeScript - Page",
			"requestLayout()"
		],
		[
			"scaleX: number\tNativeScript - StackLayout",
			"scaleX"
		],
		[
			"width: number\tNativeScript - SegmentedBar",
			"width"
		],
		[
			"message: string\tNativeScript - RangeError",
			"message"
		],
		[
			"context: any\tNativeScript - NavigatedData",
			"context"
		],
		[
			"originY: number\tNativeScript - TimePicker",
			"originY"
		],
		[
			"originX: number\tNativeScript - TimePicker",
			"originX"
		],
		[
			"opacity: number\tNativeScript - TimePicker",
			"opacity"
		],
		[
			"_cssState: any\tNativeScript - Placeholder",
			"_cssState"
		],
		[
			"minHour: number\tNativeScript - TimePicker",
			"minHour"
		],
		[
			"onUnloaded(): void\tNativeScript - WebView",
			"onUnloaded()"
		],
		[
			"maxHour: number\tNativeScript - TimePicker",
			"maxHour"
		],
		[
			"android: any\tNativeScript - ItemEventData",
			"android"
		],
		[
			"_domId: number\tNativeScript - Placeholder",
			"_domId"
		],
		[
			"cssType: string\tNativeScript - TimePicker",
			"cssType"
		],
		[
			"scaleY: number\tNativeScript - StackLayout",
			"scaleY"
		],
		[
			"height: number\tNativeScript - Placeholder",
			"height"
		],
		[
			"minHeight: number\tNativeScript - HtmlView",
			"minHeight"
		],
		[
			"error(): Response\tNativeScript - Response",
			"error()"
		],
		[
			"margin: string\tNativeScript - Placeholder",
			"margin"
		],
		[
			"strikethrough: number\tNativeScript - Span",
			"strikethrough"
		],
		[
			"rotate: number\tNativeScript - Placeholder",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - Placeholder",
			"scaleX"
		],
		[
			"clone(): Response\tNativeScript - Response",
			"clone()"
		],
		[
			"scaleY: number\tNativeScript - Placeholder",
			"scaleY"
		],
		[
			"cssClasses: Setstring\tNativeScript - Node",
			"cssClasses"
		],
		[
			"marginTop: number\tNativeScript - HtmlView",
			"marginTop"
		],
		[
			"isLoaded: boolean\tNativeScript - HtmlView",
			"isLoaded"
		],
		[
			"message: string\tNativeScript - ScopeError",
			"message"
		],
		[
			"_nativeView: any\tNativeScript - ActionBar",
			"_nativeView"
		],
		[
			"opacity: number\tNativeScript - ListPicker",
			"opacity"
		],
		[
			"className: string\tNativeScript - HtmlView",
			"className"
		],
		[
			"cssClass: string\tNativeScript - ActionBar",
			"cssClass"
		],
		[
			"pos: number\tNativeScript - PseudoSelector",
			"pos"
		],
		[
			"_createUI(): void\tNativeScript - TextView",
			"_createUI()"
		],
		[
			"_context: any\tNativeScript - SegmentedBar",
			"_context"
		],
		[
			"pos: number\tNativeScript - SimpleSelector",
			"pos"
		],
		[
			"_updateLayout(): void\tNativeScript - View",
			"_updateLayout()"
		],
		[
			"ident: string\tNativeScript - TypeSelector",
			"ident"
		],
		[
			"minHeight: number\tNativeScript - TextView",
			"minHeight"
		],
		[
			"originX: number\tNativeScript - ListPicker",
			"originX"
		],
		[
			"source: Source\tNativeScript - SourceError",
			"source"
		],
		[
			"marginBottom: number\tNativeScript - Image",
			"marginBottom"
		],
		[
			"originY: number\tNativeScript - ListPicker",
			"originY"
		],
		[
			"marginTop: number\tNativeScript - TextView",
			"marginTop"
		],
		[
			"scaleY: number\tNativeScript - ContentView",
			"scaleY"
		],
		[
			"isLoaded: boolean\tNativeScript - TextView",
			"isLoaded"
		],
		[
			"scaleX: number\tNativeScript - ContentView",
			"scaleX"
		],
		[
			"opacity: number\tNativeScript - GridLayout",
			"opacity"
		],
		[
			"rotate: number\tNativeScript - ContentView",
			"rotate"
		],
		[
			"editable: boolean\tNativeScript - TextView",
			"editable"
		],
		[
			"className: string\tNativeScript - TextView",
			"className"
		],
		[
			"minWidth: number\tNativeScript - ActionBar",
			"minWidth"
		],
		[
			"onLoaded(): void\tNativeScript - SearchBar",
			"onLoaded()"
		],
		[
			"getActualSize(): Size\tNativeScript - View",
			"getActualSize()"
		],
		[
			"onLoaded(): void\tNativeScript - TextField",
			"onLoaded()"
		],
		[
			"typeName: string\tNativeScript - ActionBar",
			"typeName"
		],
		[
			"originX: number\tNativeScript - GridLayout",
			"originX"
		],
		[
			"focus(): boolean\tNativeScript - TextField",
			"focus()"
		],
		[
			"className: string\tNativeScript - Progress",
			"className"
		],
		[
			"borderRadius: number\tNativeScript - Style",
			"borderRadius"
		],
		[
			"msDetachStream(): any\tNativeScript - Blob",
			"msDetachStream()"
		],
		[
			"requestLayout(): void\tNativeScript - View",
			"requestLayout()"
		],
		[
			"isLoaded: boolean\tNativeScript - Progress",
			"isLoaded"
		],
		[
			"focus(): boolean\tNativeScript - ActionBar",
			"focus()"
		],
		[
			"valueOf(): boolean\tNativeScript - Boolean",
			"valueOf()"
		],
		[
			"cssType: string\tNativeScript - GridLayout",
			"cssType"
		],
		[
			"marginTop: number\tNativeScript - Progress",
			"marginTop"
		],
		[
			"minHeight: number\tNativeScript - Progress",
			"minHeight"
		],
		[
			"marginBottom: number\tNativeScript - Style",
			"marginBottom"
		],
		[
			"length: number\tNativeScript - Uint16Array",
			"length"
		],
		[
			"onLoaded(): void\tNativeScript - ActionBar",
			"onLoaded()"
		],
		[
			"marginRight: number\tNativeScript - Layout",
			"marginRight"
		],
		[
			"paddingRight: number\tNativeScript - Style",
			"paddingRight"
		],
		[
			"_createUI(): void\tNativeScript - Progress",
			"_createUI()"
		],
		[
			"padding: string\tNativeScript - LayoutBase",
			"padding"
		],
		[
			"_domId: number\tNativeScript - StackLayout",
			"_domId"
		],
		[
			"activity: any\tNativeScript - AndroidFrame",
			"activity"
		],
		[
			"typeName: string\tNativeScript - TextField",
			"typeName"
		],
		[
			"_cssState: any\tNativeScript - StackLayout",
			"_cssState"
		],
		[
			"ignoreCase: boolean\tNativeScript - RegExp",
			"ignoreCase"
		],
		[
			"text(): Promisestring\tNativeScript - Body",
			"text()"
		],
		[
			"bodyUsed: boolean\tNativeScript - Response",
			"bodyUsed"
		],
		[
			"focus(): boolean\tNativeScript - SearchBar",
			"focus()"
		],
		[
			"height: number\tNativeScript - StackLayout",
			"height"
		],
		[
			"minWidth: number\tNativeScript - TextField",
			"minWidth"
		],
		[
			"_isVisible: boolean\tNativeScript - Slider",
			"_isVisible"
		],
		[
			"toUTCString(): string\tNativeScript - Date",
			"toUTCString()"
		],
		[
			"margin: string\tNativeScript - ContentView",
			"margin"
		],
		[
			"padding: string\tNativeScript - WrapLayout",
			"padding"
		],
		[
			"fontSize: number\tNativeScript - TextField",
			"fontSize"
		],
		[
			"_createUI(): void\tNativeScript - ListView",
			"_createUI()"
		],
		[
			"cssClass: string\tNativeScript - TextField",
			"cssClass"
		],
		[
			"height: number\tNativeScript - ContentView",
			"height"
		],
		[
			"_nativeView: any\tNativeScript - TextField",
			"_nativeView"
		],
		[
			"originY: number\tNativeScript - WrapLayout",
			"originY"
		],
		[
			"originX: number\tNativeScript - WrapLayout",
			"originX"
		],
		[
			"canGoBack(): boolean\tNativeScript - Frame",
			"canGoBack()"
		],
		[
			"toISOString(): string\tNativeScript - Date",
			"toISOString()"
		],
		[
			"opacity: number\tNativeScript - DockLayout",
			"opacity"
		],
		[
			"originY: number\tNativeScript - GridLayout",
			"originY"
		],
		[
			"bodyUsed: boolean\tNativeScript - Response",
			"bodyUsed"
		],
		[
			"marginBottom: number\tNativeScript - Label",
			"marginBottom"
		],
		[
			"opacity: number\tNativeScript - WrapLayout",
			"opacity"
		],
		[
			"originX: number\tNativeScript - DockLayout",
			"originX"
		],
		[
			"cssType: string\tNativeScript - DatePicker",
			"cssType"
		],
		[
			"clone(): Response\tNativeScript - Response",
			"clone()"
		],
		[
			"error(): Response\tNativeScript - Response",
			"error()"
		],
		[
			"getFullYear(): number\tNativeScript - Date",
			"getFullYear()"
		],
		[
			"padding: string\tNativeScript - GridLayout",
			"padding"
		],
		[
			"values(): ArrayV\tNativeScript - Map<K, V>",
			"values()"
		],
		[
			"bindingContext: any\tNativeScript - Slider",
			"bindingContext"
		],
		[
			"get( key: K ): V\tNativeScript - Map<K, V>",
			"get(${1:key: K})"
		],
		[
			"marginBottom: number\tNativeScript - Frame",
			"marginBottom"
		],
		[
			"borderWidth: number\tNativeScript - Slider",
			"borderWidth"
		],
		[
			"_domId: number\tNativeScript - ContentView",
			"_domId"
		],
		[
			"_cssState: any\tNativeScript - ContentView",
			"_cssState"
		],
		[
			"rowHeight: number\tNativeScript - ListView",
			"rowHeight"
		],
		[
			"ios: any\tNativeScript - ActivityIndicator",
			"ios"
		],
		[
			"borderRadius: number\tNativeScript - Frame",
			"borderRadius"
		],
		[
			"bubbles: boolean\tNativeScript - EventInit",
			"bubbles"
		],
		[
			"toString(): string\tNativeScript - List<T>",
			"toString()"
		],
		[
			"_createUI(): void\tNativeScript - TextBase",
			"_createUI()"
		],
		[
			"className: string\tNativeScript - Repeater",
			"className"
		],
		[
			"typeName: string\tNativeScript - SearchBar",
			"typeName"
		],
		[
			"length: number\tNativeScript - Array<T, T>",
			"length"
		],
		[
			"isLoaded: boolean\tNativeScript - Repeater",
			"isLoaded"
		],
		[
			"minHeight: number\tNativeScript - ListView",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - ListView",
			"marginTop"
		],
		[
			"returnValue: boolean\tNativeScript - Event",
			"returnValue"
		],
		[
			"marginTop: number\tNativeScript - Repeater",
			"marginTop"
		],
		[
			"minHeight: number\tNativeScript - Repeater",
			"minHeight"
		],
		[
			"originY: number\tNativeScript - DockLayout",
			"originY"
		],
		[
			"padding: string\tNativeScript - DockLayout",
			"padding"
		],
		[
			"type: string\tNativeScript - ProgressEvent",
			"type"
		],
		[
			"length: number\tNativeScript - Uint32Array",
			"length"
		],
		[
			"isLoaded: boolean\tNativeScript - ListView",
			"isLoaded"
		],
		[
			"minWidth: number\tNativeScript - SearchBar",
			"minWidth"
		],
		[
			"minHeight: number\tNativeScript - TextBase",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - TextBase",
			"marginTop"
		],
		[
			"isLoaded: boolean\tNativeScript - TextBase",
			"isLoaded"
		],
		[
			"length: number\tNativeScript - Uint32Array",
			"length"
		],
		[
			"getUTCMonth(): number\tNativeScript - Date",
			"getUTCMonth()"
		],
		[
			"text(): Promisestring\tNativeScript - Body",
			"text()"
		],
		[
			"cssType: string\tNativeScript - WrapLayout",
			"cssType"
		],
		[
			"length: number\tNativeScript - Uint16Array",
			"length"
		],
		[
			"marginRight: number\tNativeScript - Slider",
			"marginRight"
		],
		[
			"className: string\tNativeScript - ListView",
			"className"
		],
		[
			"type: string\tNativeScript - ProgressEvent",
			"type"
		],
		[
			"className: string\tNativeScript - TextBase",
			"className"
		],
		[
			"defaultValue: any\tNativeScript - Property",
			"defaultValue"
		],
		[
			"paddingLeft: number\tNativeScript - Layout",
			"paddingLeft"
		],
		[
			"cssType: string\tNativeScript - DockLayout",
			"cssType"
		],
		[
			"message: string\tNativeScript - RangeError",
			"message"
		],
		[
			"_createUI(): void\tNativeScript - Repeater",
			"_createUI()"
		],
		[
			"marginRight: number\tNativeScript - Button",
			"marginRight"
		],
		[
			"getUTCHours(): number\tNativeScript - Date",
			"getUTCHours()"
		],
		[
			"getUTCMonth(): number\tNativeScript - Date",
			"getUTCMonth()"
		],
		[
			"getUTCHours(): number\tNativeScript - Date",
			"getUTCHours()"
		],
		[
			"_isVisible: boolean\tNativeScript - Switch",
			"_isVisible"
		],
		[
			"_isVisible: boolean\tNativeScript - Border",
			"_isVisible"
		],
		[
			"onUnloaded(): void\tNativeScript - TabView",
			"onUnloaded()"
		],
		[
			"bindingContext: any\tNativeScript - Border",
			"bindingContext"
		],
		[
			"borderWidth: number\tNativeScript - Border",
			"borderWidth"
		],
		[
			"bindingContext: any\tNativeScript - Switch",
			"bindingContext"
		],
		[
			"msDetachStream(): any\tNativeScript - Blob",
			"msDetachStream()"
		],
		[
			"borderWidth: number\tNativeScript - Switch",
			"borderWidth"
		],
		[
			"toISOString(): string\tNativeScript - Date",
			"toISOString()"
		],
		[
			"marginRight: number\tNativeScript - Border",
			"marginRight"
		],
		[
			"valueOf(): boolean\tNativeScript - Boolean",
			"valueOf()"
		],
		[
			"cssClass: string\tNativeScript - SearchBar",
			"cssClass"
		],
		[
			"srcElement: any\tNativeScript - ErrorEvent",
			"srcElement"
		],
		[
			"marginRight: number\tNativeScript - Switch",
			"marginRight"
		],
		[
			"toUTCString(): string\tNativeScript - Date",
			"toUTCString()"
		],
		[
			"cssType: string\tNativeScript - ScrollView",
			"cssType"
		],
		[
			"message: string\tNativeScript - ErrorEvent",
			"message"
		],
		[
			"_nativeView: any\tNativeScript - SearchBar",
			"_nativeView"
		],
		[
			"opacity: number\tNativeScript - ScrollView",
			"opacity"
		],
		[
			"originX: number\tNativeScript - ScrollView",
			"originX"
		],
		[
			"originY: number\tNativeScript - ScrollView",
			"originY"
		],
		[
			"visibility: string\tNativeScript - TabView",
			"visibility"
		],
		[
			"translateY: number\tNativeScript - TabView",
			"translateY"
		],
		[
			"translateX: number\tNativeScript - TabView",
			"translateX"
		],
		[
			"marginLeft: number\tNativeScript - TabView",
			"marginLeft"
		],
		[
			"value: T\tNativeScript - IteratorResult<T>",
			"value"
		],
		[
			"isEnabled: boolean\tNativeScript - TabView",
			"isEnabled"
		],
		[
			"key: string\tNativeScript - DownloadedData",
			"key"
		],
		[
			"borderColor: Color\tNativeScript - TabView",
			"borderColor"
		],
		[
			"opacity: number\tNativeScript - DatePicker",
			"opacity"
		],
		[
			"originX: number\tNativeScript - DatePicker",
			"originX"
		],
		[
			"body: BodyInit\tNativeScript - RequestInit",
			"body"
		],
		[
			"borderWidth: number\tNativeScript - Button",
			"borderWidth"
		],
		[
			"title: string\tNativeScript - LoginOptions",
			"title"
		],
		[
			"originY: number\tNativeScript - DatePicker",
			"originY"
		],
		[
			"title: string\tNativeScript - AlertOptions",
			"title"
		],
		[
			"bindingContext: any\tNativeScript - Button",
			"bindingContext"
		],
		[
			"borderRadius: number\tNativeScript - Label",
			"borderRadius"
		],
		[
			"_isVisible: boolean\tNativeScript - Button",
			"_isVisible"
		],
		[
			"getFullYear(): number\tNativeScript - Date",
			"getFullYear()"
		],
		[
			"method: string\tNativeScript - RequestInit",
			"method"
		],
		[
			"width: number\tNativeScript - ContentView",
			"width"
		],
		[
			"_domId: number\tNativeScript - LayoutBase",
			"_domId"
		],
		[
			"onLoaded(): void\tNativeScript - Repeater",
			"onLoaded()"
		],
		[
			"borderRadius: number\tNativeScript - Page",
			"borderRadius"
		],
		[
			"rotate: number\tNativeScript - TimePicker",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - TimePicker",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - TimePicker",
			"scaleY"
		],
		[
			"scaleY: number\tNativeScript - ScrollView",
			"scaleY"
		],
		[
			"borderColor: Color\tNativeScript - Switch",
			"borderColor"
		],
		[
			"originY: number\tNativeScript - SearchBar",
			"originY"
		],
		[
			"_context: any\tNativeScript - StackLayout",
			"_context"
		],
		[
			"scaleX: number\tNativeScript - ScrollView",
			"scaleX"
		],
		[
			"_context: any\tNativeScript - Placeholder",
			"_context"
		],
		[
			"message: string\tNativeScript - EvalError",
			"message"
		],
		[
			"actionBar: ActionBar\tNativeScript - Page",
			"actionBar"
		],
		[
			"opacity: number\tNativeScript - TextField",
			"opacity"
		],
		[
			"originX: number\tNativeScript - TextField",
			"originX"
		],
		[
			"originY: number\tNativeScript - TextField",
			"originY"
		],
		[
			"opacity: number\tNativeScript - SearchBar",
			"opacity"
		],
		[
			"minWidth: number\tNativeScript - TextView",
			"minWidth"
		],
		[
			"_fragmentTag: string\tNativeScript - Page",
			"_fragmentTag"
		],
		[
			"target: EventTarget\tNativeScript - Event",
			"target"
		],
		[
			"isLoaded: boolean\tNativeScript - TabView",
			"isLoaded"
		],
		[
			"rotate: number\tNativeScript - ScrollView",
			"rotate"
		],
		[
			"length: number\tNativeScript - Uint8Array",
			"length"
		],
		[
			"secure: boolean\tNativeScript - TextField",
			"secure"
		],
		[
			"length: number\tNativeScript - Int32Array",
			"length"
		],
		[
			"borderColor: Color\tNativeScript - Border",
			"borderColor"
		],
		[
			"borderWidth: number\tNativeScript - Style",
			"borderWidth"
		],
		[
			"_beginUpdate(): any\tNativeScript - Style",
			"_beginUpdate()"
		],
		[
			"lineno: number\tNativeScript - ErrorEvent",
			"lineno"
		],
		[
			"sdkVersion: string\tNativeScript - Device",
			"sdkVersion"
		],
		[
			"cssClass: string\tNativeScript - Repeater",
			"cssClass"
		],
		[
			"translateX: number\tNativeScript - Slider",
			"translateX"
		],
		[
			"marginTop: number\tNativeScript - TabView",
			"marginTop"
		],
		[
			"minHeight: number\tNativeScript - TabView",
			"minHeight"
		],
		[
			"borderColor: Color\tNativeScript - Slider",
			"borderColor"
		],
		[
			"toString(): string\tNativeScript - String",
			"toString()"
		],
		[
			"typeName: string\tNativeScript - TextView",
			"typeName"
		],
		[
			"deviceType: string\tNativeScript - Device",
			"deviceType"
		],
		[
			"onLoaded(): void\tNativeScript - Progress",
			"onLoaded()"
		],
		[
			"_cssState: any\tNativeScript - ListPicker",
			"_cssState"
		],
		[
			"style: Style\tNativeScript - SegmentedBar",
			"style"
		],
		[
			"_domId: number\tNativeScript - ListPicker",
			"_domId"
		],
		[
			"height: number\tNativeScript - DatePicker",
			"height"
		],
		[
			"width: number\tNativeScript - StackLayout",
			"width"
		],
		[
			"focus(): boolean\tNativeScript - Repeater",
			"focus()"
		],
		[
			"scaleY: number\tNativeScript - GridLayout",
			"scaleY"
		],
		[
			"_nativeView: any\tNativeScript - Repeater",
			"_nativeView"
		],
		[
			"focus(): boolean\tNativeScript - Progress",
			"focus()"
		],
		[
			"translateX: number\tNativeScript - Layout",
			"translateX"
		],
		[
			"translateY: number\tNativeScript - Layout",
			"translateY"
		],
		[
			"typeName: string\tNativeScript - HtmlView",
			"typeName"
		],
		[
			"_cssState: any\tNativeScript - GridLayout",
			"_cssState"
		],
		[
			"url: string\tNativeScript - LoadEventData",
			"url"
		],
		[
			"isEnabled: boolean\tNativeScript - Switch",
			"isEnabled"
		],
		[
			"getSeconds(): number\tNativeScript - Date",
			"getSeconds()"
		],
		[
			"whiteSpace: string\tNativeScript - Button",
			"whiteSpace"
		],
		[
			"length: number\tNativeScript - Int16Array",
			"length"
		],
		[
			"visibility: string\tNativeScript - Button",
			"visibility"
		],
		[
			"_nativeView: any\tNativeScript - HtmlView",
			"_nativeView"
		],
		[
			"title: string\tNativeScript - TabViewItem",
			"title"
		],
		[
			"isEnabled: boolean\tNativeScript - Slider",
			"isEnabled"
		],
		[
			"latitude: number\tNativeScript - Location",
			"latitude"
		],
		[
			"ios: any\tNativeScript - GestureEventData",
			"ios"
		],
		[
			"toString(): string\tNativeScript - Symbol",
			"toString()"
		],
		[
			"onLoaded(): void\tNativeScript - ListView",
			"onLoaded()"
		],
		[
			"height: number\tNativeScript - DockLayout",
			"height"
		],
		[
			"marginLeft: number\tNativeScript - Switch",
			"marginLeft"
		],
		[
			"length: number\tNativeScript - Int16Array",
			"length"
		],
		[
			"translateY: number\tNativeScript - Button",
			"translateY"
		],
		[
			"altitude: number\tNativeScript - Location",
			"altitude"
		],
		[
			"translateX: number\tNativeScript - Button",
			"translateX"
		],
		[
			"stack: string\tNativeScript - SourceError",
			"stack"
		],
		[
			"focus(): boolean\tNativeScript - HtmlView",
			"focus()"
		],
		[
			"wrapped: any\tNativeScript - WrappedValue",
			"wrapped"
		],
		[
			"cssType: string\tNativeScript - ActionBar",
			"cssType"
		],
		[
			"marginRight: number\tNativeScript - Image",
			"marginRight"
		],
		[
			"headers: Headers\tNativeScript - Response",
			"headers"
		],
		[
			"rotate: number\tNativeScript - ListPicker",
			"rotate"
		],
		[
			"_isVisible: boolean\tNativeScript - Frame",
			"_isVisible"
		],
		[
			"onLoaded(): void\tNativeScript - HtmlView",
			"onLoaded()"
		],
		[
			"isEnabled: boolean\tNativeScript - Layout",
			"isEnabled"
		],
		[
			"toString(): string\tNativeScript - Object",
			"toString()"
		],
		[
			"length: number\tNativeScript - Uint8Array",
			"length"
		],
		[
			"tolerant: boolean\tNativeScript - Options",
			"tolerant"
		],
		[
			"onUnloaded(): void\tNativeScript - Border",
			"onUnloaded()"
		],
		[
			"scaleX: number\tNativeScript - ListPicker",
			"scaleX"
		],
		[
			"caller: Function\tNativeScript - Function",
			"caller"
		],
		[
			"typeName: string\tNativeScript - Progress",
			"typeName"
		],
		[
			"message: string\tNativeScript - TypeError",
			"message"
		],
		[
			"scaleY: number\tNativeScript - ListPicker",
			"scaleY"
		],
		[
			"translateY: number\tNativeScript - Slider",
			"translateY"
		],
		[
			"ios: any\tNativeScript - EditableTextBase",
			"ios"
		],
		[
			"height: number\tNativeScript - GridLayout",
			"height"
		],
		[
			"bindingContext: any\tNativeScript - Frame",
			"bindingContext"
		],
		[
			"visibility: string\tNativeScript - Layout",
			"visibility"
		],
		[
			"cssClass: string\tNativeScript - HtmlView",
			"cssClass"
		],
		[
			"paddingLeft: number\tNativeScript - Style",
			"paddingLeft"
		],
		[
			"focus(): boolean\tNativeScript - ListView",
			"focus()"
		],
		[
			"borderWidth: number\tNativeScript - Frame",
			"borderWidth"
		],
		[
			"getMinutes(): number\tNativeScript - Date",
			"getMinutes()"
		],
		[
			"length: number\tNativeScript - IArguments",
			"length"
		],
		[
			"scaleX: number\tNativeScript - GridLayout",
			"scaleX"
		],
		[
			"value: string\tNativeScript - Declaration",
			"value"
		],
		[
			"_isVisible: boolean\tNativeScript - Image",
			"_isVisible"
		],
		[
			"width: number\tNativeScript - ImageSource",
			"width"
		],
		[
			"borderWidth: number\tNativeScript - Style",
			"borderWidth"
		],
		[
			"translateX: number\tNativeScript - Switch",
			"translateX"
		],
		[
			"rotate: number\tNativeScript - WrapLayout",
			"rotate"
		],
		[
			"margin: string\tNativeScript - ScrollView",
			"margin"
		],
		[
			"rotate: number\tNativeScript - GridLayout",
			"rotate"
		],
		[
			"translateY: number\tNativeScript - Switch",
			"translateY"
		],
		[
			"rotate: number\tNativeScript - DockLayout",
			"rotate"
		],
		[
			"margin: string\tNativeScript - WrapLayout",
			"margin"
		],
		[
			"scaleX: number\tNativeScript - WrapLayout",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - WrapLayout",
			"scaleY"
		],
		[
			"page: View\tNativeScript - AbsoluteLayout",
			"page"
		],
		[
			"minWidth: number\tNativeScript - Progress",
			"minWidth"
		],
		[
			"getUTCDate(): number\tNativeScript - Date",
			"getUTCDate()"
		],
		[
			"bindingContext: any\tNativeScript - Image",
			"bindingContext"
		],
		[
			"maxValue: number\tNativeScript - Progress",
			"maxValue"
		],
		[
			"toString(): string\tNativeScript - Object",
			"toString()"
		],
		[
			"lineno: number\tNativeScript - ErrorEvent",
			"lineno"
		],
		[
			"borderWidth: number\tNativeScript - Image",
			"borderWidth"
		],
		[
			"visibility: string\tNativeScript - Switch",
			"visibility"
		],
		[
			"start(): void\tNativeScript - FPSCallback",
			"start()"
		],
		[
			"height: number\tNativeScript - ScrollView",
			"height"
		],
		[
			"focus(): boolean\tNativeScript - TextBase",
			"focus()"
		],
		[
			"marginLeft: number\tNativeScript - Slider",
			"marginLeft"
		],
		[
			"width: number\tNativeScript - Placeholder",
			"width"
		],
		[
			"typeName: string\tNativeScript - Repeater",
			"typeName"
		],
		[
			"caller: Function\tNativeScript - Function",
			"caller"
		],
		[
			"marginRight: number\tNativeScript - Style",
			"marginRight"
		],
		[
			"margin: string\tNativeScript - GridLayout",
			"margin"
		],
		[
			"isEnabled: boolean\tNativeScript - Button",
			"isEnabled"
		],
		[
			"_createUI(): void\tNativeScript - TabView",
			"_createUI()"
		],
		[
			"_context: any\tNativeScript - ContentView",
			"_context"
		],
		[
			"marginRight: number\tNativeScript - Frame",
			"marginRight"
		],
		[
			"mode: RequestMode\tNativeScript - Request",
			"mode"
		],
		[
			"visibility: string\tNativeScript - Border",
			"visibility"
		],
		[
			"focus(): boolean\tNativeScript - TextView",
			"focus()"
		],
		[
			"Static default: Font\tNativeScript - Font",
			"Static default"
		],
		[
			"typeName: string\tNativeScript - ListView",
			"typeName"
		],
		[
			"height: number\tNativeScript - LayoutBase",
			"height"
		],
		[
			"headers: Headers\tNativeScript - Response",
			"headers"
		],
		[
			"marginRight: number\tNativeScript - Label",
			"marginRight"
		],
		[
			"margin: string\tNativeScript - DatePicker",
			"margin"
		],
		[
			"height: number\tNativeScript - ListPicker",
			"height"
		],
		[
			"repeat: string\tNativeScript - Background",
			"repeat"
		],
		[
			"toString(): string\tNativeScript - Symbol",
			"toString()"
		],
		[
			"onUnloaded(): void\tNativeScript - Button",
			"onUnloaded()"
		],
		[
			"cssClass: string\tNativeScript - Progress",
			"cssClass"
		],
		[
			"marginLeft: number\tNativeScript - Layout",
			"marginLeft"
		],
		[
			"marginBottom: number\tNativeScript - View",
			"marginBottom"
		],
		[
			"translateY: number\tNativeScript - Border",
			"translateY"
		],
		[
			"_nativeView: any\tNativeScript - TextBase",
			"_nativeView"
		],
		[
			"cancelable: boolean\tNativeScript - Event",
			"cancelable"
		],
		[
			"translateX: number\tNativeScript - Border",
			"translateX"
		],
		[
			"scaleX: number\tNativeScript - DockLayout",
			"scaleX"
		],
		[
			"onUnloaded(): void\tNativeScript - Switch",
			"onUnloaded()"
		],
		[
			"multiline: boolean\tNativeScript - RegExp",
			"multiline"
		],
		[
			"scaleY: number\tNativeScript - DockLayout",
			"scaleY"
		],
		[
			"_cssState: any\tNativeScript - DatePicker",
			"_cssState"
		],
		[
			"onLoaded(): void\tNativeScript - TextBase",
			"onLoaded()"
		],
		[
			"ios: any\tNativeScript - CustomLayoutView",
			"ios"
		],
		[
			"className: string\tNativeScript - WebView",
			"className"
		],
		[
			"_domId: number\tNativeScript - DatePicker",
			"_domId"
		],
		[
			"paddingLeft: number\tNativeScript - Style",
			"paddingLeft"
		],
		[
			"_nativeView: any\tNativeScript - Progress",
			"_nativeView"
		],
		[
			"target: EventTarget\tNativeScript - Event",
			"target"
		],
		[
			"onLoaded(): void\tNativeScript - TextView",
			"onLoaded()"
		],
		[
			"_domId: number\tNativeScript - GridLayout",
			"_domId"
		],
		[
			"marginLeft: number\tNativeScript - Button",
			"marginLeft"
		],
		[
			"minWidth: number\tNativeScript - ListView",
			"minWidth"
		],
		[
			"toString(): string\tNativeScript - String",
			"toString()"
		],
		[
			"margin: string\tNativeScript - DockLayout",
			"margin"
		],
		[
			"multiline: boolean\tNativeScript - RegExp",
			"multiline"
		],
		[
			"cssClass: string\tNativeScript - TextBase",
			"cssClass"
		],
		[
			"isLoaded: boolean\tNativeScript - WebView",
			"isLoaded"
		],
		[
			"_domId: number\tNativeScript - DockLayout",
			"_domId"
		],
		[
			"paddingTop: number\tNativeScript - Layout",
			"paddingTop"
		],
		[
			"mode: RequestMode\tNativeScript - Request",
			"mode"
		],
		[
			"fontSize: number\tNativeScript - TextBase",
			"fontSize"
		],
		[
			"marginTop: number\tNativeScript - WebView",
			"marginTop"
		],
		[
			"minHeight: number\tNativeScript - WebView",
			"minHeight"
		],
		[
			"_domId: number\tNativeScript - ScrollView",
			"_domId"
		],
		[
			"cancelable: boolean\tNativeScript - Event",
			"cancelable"
		],
		[
			"titleView: View\tNativeScript - ActionBar",
			"titleView"
		],
		[
			"_cssState: any\tNativeScript - ScrollView",
			"_cssState"
		],
		[
			"color: Color\tNativeScript - SegmentedBar",
			"color"
		],
		[
			"borderColor: Color\tNativeScript - Layout",
			"borderColor"
		],
		[
			"margin: string\tNativeScript - LayoutBase",
			"margin"
		],
		[
			"cssClass: string\tNativeScript - ListView",
			"cssClass"
		],
		[
			"parent: View\tNativeScript - SegmentedBar",
			"parent"
		],
		[
			"_cssState: any\tNativeScript - TimePicker",
			"_cssState"
		],
		[
			"_domId: number\tNativeScript - TimePicker",
			"_domId"
		],
		[
			"marginLeft: number\tNativeScript - Border",
			"marginLeft"
		],
		[
			"visibility: string\tNativeScript - Slider",
			"visibility"
		],
		[
			"content: View\tNativeScript - ContentView",
			"content"
		],
		[
			"value: string\tNativeScript - Declaration",
			"value"
		],
		[
			"onUnloaded(): void\tNativeScript - Layout",
			"onUnloaded()"
		],
		[
			"originY: number\tNativeScript - ActionBar",
			"originY"
		],
		[
			"originX: number\tNativeScript - ActionBar",
			"originX"
		],
		[
			"minWidth: number\tNativeScript - Repeater",
			"minWidth"
		],
		[
			"_nativeView: any\tNativeScript - ListView",
			"_nativeView"
		],
		[
			"opacity: number\tNativeScript - ActionBar",
			"opacity"
		],
		[
			"onUnloaded(): void\tNativeScript - Slider",
			"onUnloaded()"
		],
		[
			"id: string\tNativeScript - AbsoluteLayout",
			"id"
		],
		[
			"borderColor: Color\tNativeScript - Button",
			"borderColor"
		],
		[
			"cssType: string\tNativeScript - SearchBar",
			"cssType"
		],
		[
			"getUTCDate(): number\tNativeScript - Date",
			"getUTCDate()"
		],
		[
			"_cssState: any\tNativeScript - DockLayout",
			"_cssState"
		],
		[
			"rotate: number\tNativeScript - DatePicker",
			"rotate"
		],
		[
			"_nativeView: any\tNativeScript - TextView",
			"_nativeView"
		],
		[
			"borderRadius: number\tNativeScript - View",
			"borderRadius"
		],
		[
			"minWidth: number\tNativeScript - TextBase",
			"minWidth"
		],
		[
			"height: number\tNativeScript - TimePicker",
			"height"
		],
		[
			"lastModified: Date\tNativeScript - Folder",
			"lastModified"
		],
		[
			"message: string\tNativeScript - EvalError",
			"message"
		],
		[
			"scaleX: number\tNativeScript - DatePicker",
			"scaleX"
		],
		[
			"originX: number\tNativeScript - SearchBar",
			"originX"
		],
		[
			"maxRequests: number\tNativeScript - Cache",
			"maxRequests"
		],
		[
			"_createUI(): void\tNativeScript - WebView",
			"_createUI()"
		],
		[
			"length: number\tNativeScript - Int32Array",
			"length"
		],
		[
			"_cssState: any\tNativeScript - LayoutBase",
			"_cssState"
		],
		[
			"marginBottom: number\tNativeScript - Page",
			"marginBottom"
		],
		[
			"isEnabled: boolean\tNativeScript - Border",
			"isEnabled"
		],
		[
			"scaleY: number\tNativeScript - DatePicker",
			"scaleY"
		],
		[
			"minWidth: number\tNativeScript - HtmlView",
			"minWidth"
		],
		[
			"cssType: string\tNativeScript - TextField",
			"cssType"
		],
		[
			"margin: string\tNativeScript - ListPicker",
			"margin"
		],
		[
			"remove(): Promiseany\tNativeScript - File",
			"remove()"
		],
		[
			"_cssState: any\tNativeScript - WrapLayout",
			"_cssState"
		],
		[
			"margin: string\tNativeScript - TimePicker",
			"margin"
		],
		[
			"text: string\tNativeScript - PromptResult",
			"text"
		],
		[
			"className: string\tNativeScript - TabView",
			"className"
		],
		[
			"height: number\tNativeScript - WrapLayout",
			"height"
		],
		[
			"cssClass: string\tNativeScript - TextView",
			"cssClass"
		],
		[
			"_domId: number\tNativeScript - WrapLayout",
			"_domId"
		],
		[
			"_beginUpdate(): any\tNativeScript - Style",
			"_beginUpdate()"
		],
		[
			"marginRight: number\tNativeScript - Style",
			"marginRight"
		],
		[
			"message: string\tNativeScript - TypeError",
			"message"
		],
		[
			"fontSize: number\tNativeScript - TextView",
			"fontSize"
		],
		[
			"_isVisible: boolean\tNativeScript - Label",
			"_isVisible"
		],
		[
			"rotate: number\tNativeScript - LayoutBase",
			"rotate"
		],
		[
			"typeName: string\tNativeScript - TextBase",
			"typeName"
		],
		[
			"minute: number\tNativeScript - TimePicker",
			"minute"
		],
		[
			"typeName: string\tNativeScript - Bindable",
			"typeName"
		],
		[
			"bindingContext: any\tNativeScript - Label",
			"bindingContext"
		],
		[
			"getSeconds(): number\tNativeScript - Date",
			"getSeconds()"
		],
		[
			"android: any\tNativeScript - SegmentedBar",
			"android"
		],
		[
			"borderWidth: number\tNativeScript - Label",
			"borderWidth"
		],
		[
			"getMinutes(): number\tNativeScript - Date",
			"getMinutes()"
		],
		[
			"length: number\tNativeScript - IArguments",
			"length"
		],
		[
			"scaleX: number\tNativeScript - LayoutBase",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - LayoutBase",
			"scaleY"
		],
		[
			"borderColor: Color\tNativeScript - Frame",
			"borderColor"
		],
		[
			"width: number\tNativeScript - TimePicker",
			"width"
		],
		[
			"isAuto: boolean\tNativeScript - ItemSpec",
			"isAuto"
		],
		[
			"borderColor: Color\tNativeScript - Label",
			"borderColor"
		],
		[
			"android: any\tNativeScript - StackLayout",
			"android"
		],
		[
			"onUnloaded(): void\tNativeScript - Image",
			"onUnloaded()"
		],
		[
			"getUTCDay(): number\tNativeScript - Date",
			"getUTCDay()"
		],
		[
			"isStar: boolean\tNativeScript - ItemSpec",
			"isStar"
		],
		[
			"minHeight: number\tNativeScript - Slider",
			"minHeight"
		],
		[
			"cssType: string\tNativeScript - ListView",
			"cssType"
		],
		[
			"color: Color\tNativeScript - StackLayout",
			"color"
		],
		[
			"reverse(): T\tNativeScript - Array<T, T>",
			"reverse()"
		],
		[
			"marginTop: number\tNativeScript - Slider",
			"marginTop"
		],
		[
			"opacity: number\tNativeScript - ListView",
			"opacity"
		],
		[
			"originX: number\tNativeScript - ListView",
			"originX"
		],
		[
			"clear(): void\tNativeScript - WeakRef<T>",
			"clear()"
		],
		[
			"originY: number\tNativeScript - ListView",
			"originY"
		],
		[
			"compile(): RegExp\tNativeScript - RegExp",
			"compile()"
		],
		[
			"isEnabled: boolean\tNativeScript - Label",
			"isEnabled"
		],
		[
			"isLoaded: boolean\tNativeScript - Slider",
			"isLoaded"
		],
		[
			"headers: Headers\tNativeScript - Request",
			"headers"
		],
		[
			"className: string\tNativeScript - Slider",
			"className"
		],
		[
			"_createUI(): void\tNativeScript - Slider",
			"_createUI()"
		],
		[
			"referrer: string\tNativeScript - Request",
			"referrer"
		],
		[
			"marginLeft: number\tNativeScript - Label",
			"marginLeft"
		],
		[
			"android: any\tNativeScript - ProxyObject",
			"android"
		],
		[
			"valueOf(): number\tNativeScript - Number",
			"valueOf()"
		],
		[
			"referrer: string\tNativeScript - Request",
			"referrer"
		],
		[
			"_isVisible: boolean\tNativeScript - View",
			"_isVisible"
		],
		[
			"bindingContext: any\tNativeScript - View",
			"bindingContext"
		],
		[
			"headers: Headers\tNativeScript - Request",
			"headers"
		],
		[
			"borderWidth: number\tNativeScript - View",
			"borderWidth"
		],
		[
			"cssName: string\tNativeScript - Property",
			"cssName"
		],
		[
			"visibility: string\tNativeScript - Image",
			"visibility"
		],
		[
			"lastIndex: number\tNativeScript - RegExp",
			"lastIndex"
		],
		[
			"clear(): void\tNativeScript - WeakRef<T>",
			"clear()"
		],
		[
			"width: number\tNativeScript - ListPicker",
			"width"
		],
		[
			"translateY: number\tNativeScript - Image",
			"translateY"
		],
		[
			"marginRight: number\tNativeScript - View",
			"marginRight"
		],
		[
			"data: string\tNativeScript - ParserEvent",
			"data"
		],
		[
			"translateX: number\tNativeScript - Image",
			"translateX"
		],
		[
			"borderColor: Color\tNativeScript - Style",
			"borderColor"
		],
		[
			"fontFamily: string\tNativeScript - Style",
			"fontFamily"
		],
		[
			"lastIndex: number\tNativeScript - RegExp",
			"lastIndex"
		],
		[
			"width: number\tNativeScript - LayoutBase",
			"width"
		],
		[
			"fontWeight: string\tNativeScript - Style",
			"fontWeight"
		],
		[
			"marginLeft: number\tNativeScript - Style",
			"marginLeft"
		],
		[
			"compile(): RegExp\tNativeScript - RegExp",
			"compile()"
		],
		[
			"valueOf(): Object\tNativeScript - Object",
			"valueOf()"
		],
		[
			"valueOf(): Object\tNativeScript - Object",
			"valueOf()"
		],
		[
			"paddingTop: number\tNativeScript - Style",
			"paddingTop"
		],
		[
			"marginLeft: number\tNativeScript - Image",
			"marginLeft"
		],
		[
			"name: string\tNativeScript - SourceError",
			"name"
		],
		[
			"child: Error\tNativeScript - SourceError",
			"child"
		],
		[
			"stack: string\tNativeScript - ScopeError",
			"stack"
		],
		[
			"visibility: string\tNativeScript - Style",
			"visibility"
		],
		[
			"colno: number\tNativeScript - ErrorEvent",
			"colno"
		],
		[
			"whiteSpace: string\tNativeScript - Style",
			"whiteSpace"
		],
		[
			"className: string\tNativeScript - Layout",
			"className"
		],
		[
			"isLoading: boolean\tNativeScript - Image",
			"isLoading"
		],
		[
			"reverse(): T\tNativeScript - Array<T, T>",
			"reverse()"
		],
		[
			"isEnabled: boolean\tNativeScript - Image",
			"isEnabled"
		],
		[
			"onLoaded(): void\tNativeScript - WebView",
			"onLoaded()"
		],
		[
			"view: View\tNativeScript - ItemEventData",
			"view"
		],
		[
			"goForward(): any\tNativeScript - WebView",
			"goForward()"
		],
		[
			"parent: View\tNativeScript - StackLayout",
			"parent"
		],
		[
			"_isVisible: boolean\tNativeScript - Page",
			"_isVisible"
		],
		[
			"focus(): boolean\tNativeScript - WebView",
			"focus()"
		],
		[
			"bindingContext: any\tNativeScript - Page",
			"bindingContext"
		],
		[
			"valueOf(): number\tNativeScript - Number",
			"valueOf()"
		],
		[
			"ident: string\tNativeScript - IdSelector",
			"ident"
		],
		[
			"borderWidth: number\tNativeScript - Page",
			"borderWidth"
		],
		[
			"type: \":\"\tNativeScript - PseudoSelector",
			"type"
		],
		[
			"style: Style\tNativeScript - ContentView",
			"style"
		],
		[
			"style: Style\tNativeScript - StackLayout",
			"style"
		],
		[
			"pos: number\tNativeScript - TypeSelector",
			"pos"
		],
		[
			"isLoaded: boolean\tNativeScript - Layout",
			"isLoaded"
		],
		[
			"keys(): ArrayK\tNativeScript - Map<K, V>",
			"keys()"
		],
		[
			"marginRight: number\tNativeScript - Page",
			"marginRight"
		],
		[
			"parent: View\tNativeScript - ContentView",
			"parent"
		],
		[
			"backpublic: string\tNativeScript - Style",
			"backpublic"
		],
		[
			"typeName: string\tNativeScript - WebView",
			"typeName"
		],
		[
			"borderColor: Color\tNativeScript - Style",
			"borderColor"
		],
		[
			"fontFamily: string\tNativeScript - Style",
			"fontFamily"
		],
		[
			"fontWeight: string\tNativeScript - Style",
			"fontWeight"
		],
		[
			"_context: any\tNativeScript - GridLayout",
			"_context"
		],
		[
			"minWidth: number\tNativeScript - WebView",
			"minWidth"
		],
		[
			"eventPhase: number\tNativeScript - Event",
			"eventPhase"
		],
		[
			"isTrusted: boolean\tNativeScript - Event",
			"isTrusted"
		],
		[
			"marginLeft: number\tNativeScript - Style",
			"marginLeft"
		],
		[
			"paddingTop: number\tNativeScript - Style",
			"paddingTop"
		],
		[
			"marginTop: number\tNativeScript - Layout",
			"marginTop"
		],
		[
			"minHeight: number\tNativeScript - Layout",
			"minHeight"
		],
		[
			"valueOf(): string\tNativeScript - String",
			"valueOf()"
		],
		[
			"cssClass: string\tNativeScript - WebView",
			"cssClass"
		],
		[
			"_nativeView: any\tNativeScript - WebView",
			"_nativeView"
		],
		[
			"translateX: number\tNativeScript - Style",
			"translateX"
		],
		[
			"valueOf(): Object\tNativeScript - Symbol",
			"valueOf()"
		],
		[
			"translateY: number\tNativeScript - Style",
			"translateY"
		],
		[
			"stop(): void\tNativeScript - FPSCallback",
			"stop()"
		],
		[
			"name: string\tNativeScript - SyntaxError",
			"name"
		],
		[
			"borderColor: Color\tNativeScript - Image",
			"borderColor"
		],
		[
			"visibility: string\tNativeScript - Style",
			"visibility"
		],
		[
			"android: any\tNativeScript - ImageSource",
			"android"
		],
		[
			"whiteSpace: string\tNativeScript - Style",
			"whiteSpace"
		],
		[
			"comment: boolean\tNativeScript - Options",
			"comment"
		],
		[
			"_context: any\tNativeScript - DatePicker",
			"_context"
		],
		[
			"color: Color\tNativeScript - ContentView",
			"color"
		],
		[
			"android: any\tNativeScript - ContentView",
			"android"
		],
		[
			"length: number\tNativeScript - Int8Array",
			"length"
		],
		[
			"timestamp: Date\tNativeScript - Location",
			"timestamp"
		],
		[
			"keys(): ArrayK\tNativeScript - Map<K, V>",
			"keys()"
		],
		[
			"bottom: number\tNativeScript - Thickness",
			"bottom"
		],
		[
			"maxDate: Date\tNativeScript - DatePicker",
			"maxDate"
		],
		[
			"minDate: Date\tNativeScript - DatePicker",
			"minDate"
		],
		[
			"scaleY: number\tNativeScript - SearchBar",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - SearchBar",
			"scaleX"
		],
		[
			"_context: any\tNativeScript - ListPicker",
			"_context"
		],
		[
			"rotate: number\tNativeScript - SearchBar",
			"rotate"
		],
		[
			"_createUI(): void\tNativeScript - Button",
			"_createUI()"
		],
		[
			"osVersion: string\tNativeScript - Device",
			"osVersion"
		],
		[
			"margin: string\tNativeScript - SearchBar",
			"margin"
		],
		[
			"width: number\tNativeScript - DockLayout",
			"width"
		],
		[
			"originY: number\tNativeScript - HtmlView",
			"originY"
		],
		[
			"originX: number\tNativeScript - HtmlView",
			"originX"
		],
		[
			"textWrap: boolean\tNativeScript - Button",
			"textWrap"
		],
		[
			"translateX: number\tNativeScript - Label",
			"translateX"
		],
		[
			"opacity: number\tNativeScript - HtmlView",
			"opacity"
		],
		[
			"translateY: number\tNativeScript - Label",
			"translateY"
		],
		[
			"cssName: string\tNativeScript - Property",
			"cssName"
		],
		[
			"getUTCDay(): number\tNativeScript - Date",
			"getUTCDay()"
		],
		[
			"minHeight: number\tNativeScript - Button",
			"minHeight"
		],
		[
			"visibility: string\tNativeScript - Label",
			"visibility"
		],
		[
			"android: any\tNativeScript - Placeholder",
			"android"
		],
		[
			"marginTop: number\tNativeScript - Button",
			"marginTop"
		],
		[
			"isLoaded: boolean\tNativeScript - Button",
			"isLoaded"
		],
		[
			"color: Color\tNativeScript - Placeholder",
			"color"
		],
		[
			"_context: any\tNativeScript - TimePicker",
			"_context"
		],
		[
			"height: number\tNativeScript - SearchBar",
			"height"
		],
		[
			"bindingContext: any\tNativeScript - Span",
			"bindingContext"
		],
		[
			"className: string\tNativeScript - Switch",
			"className"
		],
		[
			"_context: any\tNativeScript - LayoutBase",
			"_context"
		],
		[
			"isLoaded: boolean\tNativeScript - Switch",
			"isLoaded"
		],
		[
			"parent: View\tNativeScript - Placeholder",
			"parent"
		],
		[
			"style: Style\tNativeScript - Placeholder",
			"style"
		],
		[
			"marginTop: number\tNativeScript - Switch",
			"marginTop"
		],
		[
			"minHeight: number\tNativeScript - Switch",
			"minHeight"
		],
		[
			"_cssState: any\tNativeScript - ActionBar",
			"_cssState"
		],
		[
			"_domId: number\tNativeScript - ActionBar",
			"_domId"
		],
		[
			"month: number\tNativeScript - DatePicker",
			"month"
		],
		[
			"cssType: string\tNativeScript - HtmlView",
			"cssType"
		],
		[
			"height: number\tNativeScript - ActionBar",
			"height"
		],
		[
			"margin: string\tNativeScript - ActionBar",
			"margin"
		],
		[
			"onUnloaded(): void\tNativeScript - Label",
			"onUnloaded()"
		],
		[
			"_domId: number\tNativeScript - SearchBar",
			"_domId"
		],
		[
			"_cssState: any\tNativeScript - SearchBar",
			"_cssState"
		],
		[
			"_createUI(): void\tNativeScript - Switch",
			"_createUI()"
		],
		[
			"className: string\tNativeScript - Button",
			"className"
		],
		[
			"_context: any\tNativeScript - DockLayout",
			"_context"
		],
		[
			"originY: number\tNativeScript - TextView",
			"originY"
		],
		[
			"originX: number\tNativeScript - TextView",
			"originX"
		],
		[
			"opacity: number\tNativeScript - TextView",
			"opacity"
		],
		[
			"_createUI(): void\tNativeScript - Layout",
			"_createUI()"
		],
		[
			"width: number\tNativeScript - DatePicker",
			"width"
		],
		[
			"message: string\tNativeScript - URIError",
			"message"
		],
		[
			"cssType: string\tNativeScript - TextView",
			"cssType"
		],
		[
			"path: string\tNativeScript - LoadOptions",
			"path"
		],
		[
			"name: string\tNativeScript - LoadOptions",
			"name"
		],
		[
			"rotate: number\tNativeScript - ActionBar",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - ActionBar",
			"scaleX"
		],
		[
			"exports: any\tNativeScript - LoadOptions",
			"exports"
		],
		[
			"width: number\tNativeScript - WrapLayout",
			"width"
		],
		[
			"scaleY: number\tNativeScript - ActionBar",
			"scaleY"
		],
		[
			"width: number\tNativeScript - ScrollView",
			"width"
		],
		[
			"_nativeView: any\tNativeScript - TabView",
			"_nativeView"
		],
		[
			"cssClass: string\tNativeScript - TabView",
			"cssClass"
		],
		[
			"colno: number\tNativeScript - ErrorEvent",
			"colno"
		],
		[
			"cssType: string\tNativeScript - Progress",
			"cssType"
		],
		[
			"minWidth: number\tNativeScript - TabView",
			"minWidth"
		],
		[
			"valueOf(): string\tNativeScript - String",
			"valueOf()"
		],
		[
			"typeName: string\tNativeScript - TabView",
			"typeName"
		],
		[
			"valueOf(): Object\tNativeScript - Symbol",
			"valueOf()"
		],
		[
			"_createUI(): void\tNativeScript - Border",
			"_createUI()"
		],
		[
			"content: View\tNativeScript - ScrollView",
			"content"
		],
		[
			"opacity: number\tNativeScript - Progress",
			"opacity"
		],
		[
			"originX: number\tNativeScript - Progress",
			"originX"
		],
		[
			"originY: number\tNativeScript - Progress",
			"originY"
		],
		[
			"length: number\tNativeScript - Int8Array",
			"length"
		],
		[
			"width: number\tNativeScript - GridLayout",
			"width"
		],
		[
			"name: string\tNativeScript - SyntaxError",
			"name"
		],
		[
			"minHeight: number\tNativeScript - Border",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - Border",
			"marginTop"
		],
		[
			"_context: any\tNativeScript - ScrollView",
			"_context"
		],
		[
			"isLoaded: boolean\tNativeScript - Border",
			"isLoaded"
		],
		[
			"_context: any\tNativeScript - WrapLayout",
			"_context"
		],
		[
			"focus(): boolean\tNativeScript - TabView",
			"focus()"
		],
		[
			"controller: any\tNativeScript - iOSFrame",
			"controller"
		],
		[
			"className: string\tNativeScript - Border",
			"className"
		],
		[
			"scaleY: number\tNativeScript - TextField",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - TextField",
			"scaleX"
		],
		[
			"rotate: number\tNativeScript - TextField",
			"rotate"
		],
		[
			"onLoaded(): void\tNativeScript - TabView",
			"onLoaded()"
		],
		[
			"margin: string\tNativeScript - TextField",
			"margin"
		],
		[
			"onUnloaded(): void\tNativeScript - Frame",
			"onUnloaded()"
		],
		[
			"message: string\tNativeScript - URIError",
			"message"
		],
		[
			"height: number\tNativeScript - TextField",
			"height"
		],
		[
			"_domId: number\tNativeScript - TextField",
			"_domId"
		],
		[
			"_cssState: any\tNativeScript - TextField",
			"_cssState"
		],
		[
			"eventPhase: number\tNativeScript - Event",
			"eventPhase"
		],
		[
			"cssType: string\tNativeScript - TextBase",
			"cssType"
		],
		[
			"visibility: string\tNativeScript - Frame",
			"visibility"
		],
		[
			"translateY: number\tNativeScript - Frame",
			"translateY"
		],
		[
			"translateX: number\tNativeScript - Frame",
			"translateX"
		],
		[
			"originY: number\tNativeScript - Repeater",
			"originY"
		],
		[
			"originX: number\tNativeScript - Repeater",
			"originX"
		],
		[
			"marginLeft: number\tNativeScript - Frame",
			"marginLeft"
		],
		[
			"opacity: number\tNativeScript - Repeater",
			"opacity"
		],
		[
			"isEnabled: boolean\tNativeScript - Frame",
			"isEnabled"
		],
		[
			"opacity: number\tNativeScript - TextBase",
			"opacity"
		],
		[
			"originX: number\tNativeScript - TextBase",
			"originX"
		],
		[
			"originY: number\tNativeScript - TextBase",
			"originY"
		],
		[
			"isTrusted: boolean\tNativeScript - Event",
			"isTrusted"
		],
		[
			"cssType: string\tNativeScript - Repeater",
			"cssType"
		],
		[
			"textWrap: boolean\tNativeScript - Label",
			"textWrap"
		],
		[
			"_cssState: any\tNativeScript - Repeater",
			"_cssState"
		],
		[
			"animated: boolean\tNativeScript - Frame",
			"animated"
		],
		[
			"height: number\tNativeScript - Repeater",
			"height"
		],
		[
			"timeStamp: number\tNativeScript - Event",
			"timeStamp"
		],
		[
			"margin: string\tNativeScript - Repeater",
			"margin"
		],
		[
			"parent: View\tNativeScript - DockLayout",
			"parent"
		],
		[
			"className: string\tNativeScript - Label",
			"className"
		],
		[
			"style: Style\tNativeScript - GridLayout",
			"style"
		],
		[
			"scaleY: number\tNativeScript - TextBase",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - TextBase",
			"scaleX"
		],
		[
			"rotate: number\tNativeScript - TextBase",
			"rotate"
		],
		[
			"className: string\tNativeScript - Frame",
			"className"
		],
		[
			"currentPage: Page\tNativeScript - Frame",
			"currentPage"
		],
		[
			"parent: View\tNativeScript - GridLayout",
			"parent"
		],
		[
			"margin: string\tNativeScript - TextBase",
			"margin"
		],
		[
			"isLoaded: boolean\tNativeScript - Frame",
			"isLoaded"
		],
		[
			"marginTop: number\tNativeScript - Frame",
			"marginTop"
		],
		[
			"height: number\tNativeScript - TextBase",
			"height"
		],
		[
			"minHeight: number\tNativeScript - Frame",
			"minHeight"
		],
		[
			"color: Color\tNativeScript - WrapLayout",
			"color"
		],
		[
			"_createUI(): void\tNativeScript - Frame",
			"_createUI()"
		],
		[
			"_context: any\tNativeScript - TextField",
			"_context"
		],
		[
			"rotate: number\tNativeScript - Repeater",
			"rotate"
		],
		[
			"_domId: number\tNativeScript - TextBase",
			"_domId"
		],
		[
			"_cssState: any\tNativeScript - TextBase",
			"_cssState"
		],
		[
			"scaleX: number\tNativeScript - Repeater",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - Repeater",
			"scaleY"
		],
		[
			"curve: any\tNativeScript - KeyframeInfo",
			"curve"
		],
		[
			"onLoaded(): void\tNativeScript - Layout",
			"onLoaded()"
		],
		[
			"AT_TARGET: number\tNativeScript - Event",
			"AT_TARGET"
		],
		[
			"_nativeView: any\tNativeScript - Border",
			"_nativeView"
		],
		[
			"android: any\tNativeScript - WrapLayout",
			"android"
		],
		[
			"arguments: any\tNativeScript - Function",
			"arguments"
		],
		[
			"width: number\tNativeScript - TextField",
			"width"
		],
		[
			"cssClass: string\tNativeScript - Border",
			"cssClass"
		],
		[
			"refresh(): any\tNativeScript - Repeater",
			"refresh()"
		],
		[
			"text: string\tNativeScript - ActionItem",
			"text"
		],
		[
			"focus(): boolean\tNativeScript - Layout",
			"focus()"
		],
		[
			"length: number\tNativeScript - Function",
			"length"
		],
		[
			"icon: string\tNativeScript - ActionItem",
			"icon"
		],
		[
			"scaleY: number\tNativeScript - Progress",
			"scaleY"
		],
		[
			"layoutView: View\tNativeScript - Border",
			"layoutView"
		],
		[
			"scaleX: number\tNativeScript - Progress",
			"scaleX"
		],
		[
			"rotate: number\tNativeScript - Progress",
			"rotate"
		],
		[
			"parent: View\tNativeScript - WrapLayout",
			"parent"
		],
		[
			"minWidth: number\tNativeScript - Border",
			"minWidth"
		],
		[
			"type: string\tNativeScript - ErrorEvent",
			"type"
		],
		[
			"android: any\tNativeScript - ScrollView",
			"android"
		],
		[
			"update(): any\tNativeScript - ActionBar",
			"update()"
		],
		[
			"prototype: any\tNativeScript - Function",
			"prototype"
		],
		[
			"typeName: string\tNativeScript - Border",
			"typeName"
		],
		[
			"color: Color\tNativeScript - ScrollView",
			"color"
		],
		[
			"prototype: any\tNativeScript - Function",
			"prototype"
		],
		[
			"length: number\tNativeScript - Function",
			"length"
		],
		[
			"margin: string\tNativeScript - Progress",
			"margin"
		],
		[
			"arguments: any\tNativeScript - Function",
			"arguments"
		],
		[
			"parent: View\tNativeScript - ScrollView",
			"parent"
		],
		[
			"height: number\tNativeScript - Progress",
			"height"
		],
		[
			"originY: number\tNativeScript - TabView",
			"originY"
		],
		[
			"originX: number\tNativeScript - TabView",
			"originX"
		],
		[
			"opacity: number\tNativeScript - TabView",
			"opacity"
		],
		[
			"style: Style\tNativeScript - WrapLayout",
			"style"
		],
		[
			"_domId: number\tNativeScript - Progress",
			"_domId"
		],
		[
			"cssType: string\tNativeScript - TabView",
			"cssType"
		],
		[
			"style: Style\tNativeScript - ScrollView",
			"style"
		],
		[
			"width: number\tNativeScript - ActionBar",
			"width"
		],
		[
			"_cssState: any\tNativeScript - Progress",
			"_cssState"
		],
		[
			"title: string\tNativeScript - ActionBar",
			"title"
		],
		[
			"onLoaded(): void\tNativeScript - Switch",
			"onLoaded()"
		],
		[
			"focus(): boolean\tNativeScript - Border",
			"focus()"
		],
		[
			"onLoaded(): void\tNativeScript - Border",
			"onLoaded()"
		],
		[
			"focus(): boolean\tNativeScript - Switch",
			"focus()"
		],
		[
			"ios: any\tNativeScript - AbsoluteLayout",
			"ios"
		],
		[
			"year: number\tNativeScript - DatePicker",
			"year"
		],
		[
			"_cssState: any\tNativeScript - TextView",
			"_cssState"
		],
		[
			"_domId: number\tNativeScript - TextView",
			"_domId"
		],
		[
			"height: number\tNativeScript - TextView",
			"height"
		],
		[
			"margin: string\tNativeScript - TextView",
			"margin"
		],
		[
			"style: Style\tNativeScript - DatePicker",
			"style"
		],
		[
			"_nativeView: any\tNativeScript - Button",
			"_nativeView"
		],
		[
			"rotate: number\tNativeScript - TextView",
			"rotate"
		],
		[
			"parent: View\tNativeScript - DatePicker",
			"parent"
		],
		[
			"scaleX: number\tNativeScript - TextView",
			"scaleX"
		],
		[
			"cssClass: string\tNativeScript - Button",
			"cssClass"
		],
		[
			"scaleY: number\tNativeScript - TextView",
			"scaleY"
		],
		[
			"_context: any\tNativeScript - SearchBar",
			"_context"
		],
		[
			"_cssState: any\tNativeScript - HtmlView",
			"_cssState"
		],
		[
			"_domId: number\tNativeScript - HtmlView",
			"_domId"
		],
		[
			"height: number\tNativeScript - HtmlView",
			"height"
		],
		[
			"android: any\tNativeScript - DockLayout",
			"android"
		],
		[
			"typeName: string\tNativeScript - Switch",
			"typeName"
		],
		[
			"toString(): string\tNativeScript - Date",
			"toString()"
		],
		[
			"typeName: string\tNativeScript - Layout",
			"typeName"
		],
		[
			"minWidth: number\tNativeScript - Switch",
			"minWidth"
		],
		[
			"_context: any\tNativeScript - ActionBar",
			"_context"
		],
		[
			"margin: string\tNativeScript - HtmlView",
			"margin"
		],
		[
			"_createUI(): void\tNativeScript - Label",
			"_createUI()"
		],
		[
			"cssClass: string\tNativeScript - Switch",
			"cssClass"
		],
		[
			"fontFamily: string\tNativeScript - Span",
			"fontFamily"
		],
		[
			"checked: boolean\tNativeScript - Switch",
			"checked"
		],
		[
			"_nativeView: any\tNativeScript - Switch",
			"_nativeView"
		],
		[
			"style: Style\tNativeScript - DockLayout",
			"style"
		],
		[
			"color: Color\tNativeScript - DockLayout",
			"color"
		],
		[
			"android: any\tNativeScript - TimePicker",
			"android"
		],
		[
			"color: Color\tNativeScript - TimePicker",
			"color"
		],
		[
			"hour: number\tNativeScript - TimePicker",
			"hour"
		],
		[
			"minWidth: number\tNativeScript - Button",
			"minWidth"
		],
		[
			"parent: View\tNativeScript - TimePicker",
			"parent"
		],
		[
			"style: Style\tNativeScript - TimePicker",
			"style"
		],
		[
			"_domId: number\tNativeScript - Repeater",
			"_domId"
		],
		[
			"typeName: string\tNativeScript - Button",
			"typeName"
		],
		[
			"rotate: number\tNativeScript - HtmlView",
			"rotate"
		],
		[
			"json(): Promiseany\tNativeScript - Body",
			"json()"
		],
		[
			"android: any\tNativeScript - LayoutBase",
			"android"
		],
		[
			"getMonth(): number\tNativeScript - Date",
			"getMonth()"
		],
		[
			"language: string\tNativeScript - Device",
			"language"
		],
		[
			"scaleX: number\tNativeScript - HtmlView",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - HtmlView",
			"scaleY"
		],
		[
			"width: number\tNativeScript - SearchBar",
			"width"
		],
		[
			"focus(): boolean\tNativeScript - Button",
			"focus()"
		],
		[
			"name: string\tNativeScript - RangeError",
			"name"
		],
		[
			"clear(): void\tNativeScript - Map<K, V>",
			"clear()"
		],
		[
			"timeout: number\tNativeScript - Options",
			"timeout"
		],
		[
			"onLoaded(): void\tNativeScript - Button",
			"onLoaded()"
		],
		[
			"right: number\tNativeScript - Thickness",
			"right"
		],
		[
			"onUnloaded(): void\tNativeScript - Page",
			"onUnloaded()"
		],
		[
			"android: any\tNativeScript - ListPicker",
			"android"
		],
		[
			"getHours(): number\tNativeScript - Date",
			"getHours()"
		],
		[
			"closeModal(): void\tNativeScript - Page",
			"closeModal()"
		],
		[
			"color: Color\tNativeScript - DatePicker",
			"color"
		],
		[
			"tokens: boolean\tNativeScript - Options",
			"tokens"
		],
		[
			"android: any\tNativeScript - DatePicker",
			"android"
		],
		[
			"source: boolean\tNativeScript - Options",
			"source"
		],
		[
			"_endUpdate(): any\tNativeScript - Style",
			"_endUpdate()"
		],
		[
			"minWidth: number\tNativeScript - Layout",
			"minWidth"
		],
		[
			"color: Color\tNativeScript - LayoutBase",
			"color"
		],
		[
			"color: Color\tNativeScript - ListPicker",
			"color"
		],
		[
			"className: string\tNativeScript - Image",
			"className"
		],
		[
			"visibility: string\tNativeScript - Page",
			"visibility"
		],
		[
			"timeStamp: number\tNativeScript - Event",
			"timeStamp"
		],
		[
			"cssType: string\tNativeScript - WebView",
			"cssType"
		],
		[
			"translateY: number\tNativeScript - Page",
			"translateY"
		],
		[
			"minHeight: number\tNativeScript - Style",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - Style",
			"marginTop"
		],
		[
			"translateX: number\tNativeScript - Page",
			"translateX"
		],
		[
			"opacity: number\tNativeScript - WebView",
			"opacity"
		],
		[
			"fontStyle: string\tNativeScript - Style",
			"fontStyle"
		],
		[
			"originX: number\tNativeScript - WebView",
			"originX"
		],
		[
			"originY: number\tNativeScript - WebView",
			"originY"
		],
		[
			"AT_TARGET: number\tNativeScript - Event",
			"AT_TARGET"
		],
		[
			"onUnloaded(): void\tNativeScript - View",
			"onUnloaded()"
		],
		[
			"fontWeight: string\tNativeScript - Font",
			"fontWeight"
		],
		[
			"fontFamily: string\tNativeScript - Font",
			"fontFamily"
		],
		[
			"clear(): void\tNativeScript - Map<K, V>",
			"clear()"
		],
		[
			"isKnown: boolean\tNativeScript - Folder",
			"isKnown"
		],
		[
			"marginLeft: number\tNativeScript - Page",
			"marginLeft"
		],
		[
			"isEnabled: boolean\tNativeScript - Page",
			"isEnabled"
		],
		[
			"parent: View\tNativeScript - LayoutBase",
			"parent"
		],
		[
			"lastModified: Date\tNativeScript - File",
			"lastModified"
		],
		[
			"borderColor: Color\tNativeScript - Page",
			"borderColor"
		],
		[
			"id: string\tNativeScript - SegmentedBar",
			"id"
		],
		[
			"page: View\tNativeScript - SegmentedBar",
			"page"
		],
		[
			"type: string\tNativeScript - ErrorEvent",
			"type"
		],
		[
			"size: string\tNativeScript - Background",
			"size"
		],
		[
			"color: Color\tNativeScript - Background",
			"color"
		],
		[
			"visibility: string\tNativeScript - View",
			"visibility"
		],
		[
			"translateY: number\tNativeScript - View",
			"translateY"
		],
		[
			"style: Style\tNativeScript - LayoutBase",
			"style"
		],
		[
			"translateX: number\tNativeScript - View",
			"translateX"
		],
		[
			"isLoaded: boolean\tNativeScript - Image",
			"isLoaded"
		],
		[
			"cssClass: string\tNativeScript - Layout",
			"cssClass"
		],
		[
			"_endUpdate(): any\tNativeScript - Style",
			"_endUpdate()"
		],
		[
			"refresh(): any\tNativeScript - ListView",
			"refresh()"
		],
		[
			"child: Error\tNativeScript - ScopeError",
			"child"
		],
		[
			"name: string\tNativeScript - ScopeError",
			"name"
		],
		[
			"marginTop: number\tNativeScript - Image",
			"marginTop"
		],
		[
			"parent: View\tNativeScript - ListPicker",
			"parent"
		],
		[
			"minHeight: number\tNativeScript - Style",
			"minHeight"
		],
		[
			"minHeight: number\tNativeScript - Image",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - Style",
			"marginTop"
		],
		[
			"string: string\tNativeScript - CSSValue",
			"string"
		],
		[
			"position: Position\tNativeScript - Rule",
			"position"
		],
		[
			"declarations: Node\tNativeScript - Rule",
			"declarations"
		],
		[
			"fontStyle: string\tNativeScript - Style",
			"fontStyle"
		],
		[
			"position: Position\tNativeScript - Node",
			"position"
		],
		[
			"style: Style\tNativeScript - ListPicker",
			"style"
		],
		[
			"column: number\tNativeScript - Position",
			"column"
		],
		[
			"marginLeft: number\tNativeScript - View",
			"marginLeft"
		],
		[
			"json(): Promiseany\tNativeScript - Body",
			"json()"
		],
		[
			"_createUI(): void\tNativeScript - Image",
			"_createUI()"
		],
		[
			"name: string\tNativeScript - RangeError",
			"name"
		],
		[
			"isEnabled: boolean\tNativeScript - View",
			"isEnabled"
		],
		[
			"_nativeView: any\tNativeScript - Layout",
			"_nativeView"
		],
		[
			"onLoaded(): void\tNativeScript - Slider",
			"onLoaded()"
		],
		[
			"toString(): string\tNativeScript - Date",
			"toString()"
		],
		[
			"borderColor: Color\tNativeScript - View",
			"borderColor"
		],
		[
			"minHeight: number\tNativeScript - Label",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - Label",
			"marginTop"
		],
		[
			"focus(): boolean\tNativeScript - Slider",
			"focus()"
		],
		[
			"status: number\tNativeScript - Response",
			"status"
		],
		[
			"color: Color\tNativeScript - GridLayout",
			"color"
		],
		[
			"status: number\tNativeScript - Response",
			"status"
		],
		[
			"_nativeView: any\tNativeScript - Slider",
			"_nativeView"
		],
		[
			"scaleY: number\tNativeScript - ListView",
			"scaleY"
		],
		[
			"isLoaded: boolean\tNativeScript - Label",
			"isLoaded"
		],
		[
			"scaleX: number\tNativeScript - ListView",
			"scaleX"
		],
		[
			"cssClass: string\tNativeScript - Slider",
			"cssClass"
		],
		[
			"rotate: number\tNativeScript - ListView",
			"rotate"
		],
		[
			"margin: string\tNativeScript - ListView",
			"margin"
		],
		[
			"maxValue: number\tNativeScript - Slider",
			"maxValue"
		],
		[
			"height: number\tNativeScript - ListView",
			"height"
		],
		[
			"_domId: number\tNativeScript - ListView",
			"_domId"
		],
		[
			"minValue: number\tNativeScript - Slider",
			"minValue"
		],
		[
			"_cssState: any\tNativeScript - ListView",
			"_cssState"
		],
		[
			"minWidth: number\tNativeScript - Slider",
			"minWidth"
		],
		[
			"android: any\tNativeScript - GridLayout",
			"android"
		],
		[
			"getMonth(): number\tNativeScript - Date",
			"getMonth()"
		],
		[
			"typeName: string\tNativeScript - Slider",
			"typeName"
		],
		[
			"getHours(): number\tNativeScript - Date",
			"getHours()"
		],
		[
			"shift(): T\tNativeScript - Array<T, T>",
			"shift()"
		],
		[
			"pos: number\tNativeScript - IdSelector",
			"pos"
		],
		[
			"getTime(): number\tNativeScript - Date",
			"getTime()"
		],
		[
			"getDate(): number\tNativeScript - Date",
			"getDate()"
		],
		[
			"android: any\tNativeScript - SearchBar",
			"android"
		],
		[
			"typeName: string\tNativeScript - Style",
			"typeName"
		],
		[
			"_cssState: any\tNativeScript - WebView",
			"_cssState"
		],
		[
			"focus(): boolean\tNativeScript - Image",
			"focus()"
		],
		[
			"focus(): boolean\tNativeScript - Label",
			"focus()"
		],
		[
			"cssClass: string\tNativeScript - Label",
			"cssClass"
		],
		[
			"_domId: number\tNativeScript - WebView",
			"_domId"
		],
		[
			"onLoaded(): void\tNativeScript - Label",
			"onLoaded()"
		],
		[
			"_context: any\tNativeScript - TextBase",
			"_context"
		],
		[
			"page: Page\tNativeScript - LoadOptions",
			"page"
		],
		[
			"id: string\tNativeScript - ContentView",
			"id"
		],
		[
			"width: number\tNativeScript - ListView",
			"width"
		],
		[
			"fontSize: number\tNativeScript - Label",
			"fontSize"
		],
		[
			"getTime(): number\tNativeScript - Date",
			"getTime()"
		],
		[
			"method: string\tNativeScript - Request",
			"method"
		],
		[
			"originX: number\tNativeScript - Layout",
			"originX"
		],
		[
			"width: number\tNativeScript - TextView",
			"width"
		],
		[
			"minWidth: number\tNativeScript - Style",
			"minWidth"
		],
		[
			"className: string\tNativeScript - View",
			"className"
		],
		[
			"text: string\tNativeScript - SearchBar",
			"text"
		],
		[
			"style: Style\tNativeScript - SearchBar",
			"style"
		],
		[
			"left: number\tNativeScript - Thickness",
			"left"
		],
		[
			"typeName: string\tNativeScript - Frame",
			"typeName"
		],
		[
			"_context: any\tNativeScript - HtmlView",
			"_context"
		],
		[
			"originY: number\tNativeScript - Layout",
			"originY"
		],
		[
			"length: number\tNativeScript - List<T>",
			"length"
		],
		[
			"_context: any\tNativeScript - Progress",
			"_context"
		],
		[
			"length: number\tNativeScript - List<T>",
			"length"
		],
		[
			"cssType: string\tNativeScript - Button",
			"cssType"
		],
		[
			"height: number\tNativeScript - TabView",
			"height"
		],
		[
			"ios: any\tNativeScript - ItemEventData",
			"ios"
		],
		[
			"minWidth: number\tNativeScript - Label",
			"minWidth"
		],
		[
			"padding: string\tNativeScript - Layout",
			"padding"
		],
		[
			"value: number\tNativeScript - ItemSpec",
			"value"
		],
		[
			"height: number\tNativeScript - WebView",
			"height"
		],
		[
			"valueOf(): number\tNativeScript - Date",
			"valueOf()"
		],
		[
			"id: string\tNativeScript - Placeholder",
			"id"
		],
		[
			"cssType: string\tNativeScript - Slider",
			"cssType"
		],
		[
			"width: number\tNativeScript - HtmlView",
			"width"
		],
		[
			"cssType: string\tNativeScript - Switch",
			"cssType"
		],
		[
			"style: Style\tNativeScript - ActionBar",
			"style"
		],
		[
			"parent: View\tNativeScript - SearchBar",
			"parent"
		],
		[
			"speed: number\tNativeScript - Location",
			"speed"
		],
		[
			"focus(): boolean\tNativeScript - Frame",
			"focus()"
		],
		[
			"margin: string\tNativeScript - WebView",
			"margin"
		],
		[
			"method: string\tNativeScript - Request",
			"method"
		],
		[
			"originY: number\tNativeScript - Button",
			"originY"
		],
		[
			"_context: any\tNativeScript - Repeater",
			"_context"
		],
		[
			"global: boolean\tNativeScript - RegExp",
			"global"
		],
		[
			"name: string\tNativeScript - TypeError",
			"name"
		],
		[
			"parent: View\tNativeScript - ActionBar",
			"parent"
		],
		[
			"size: number\tNativeScript - Map<K, V>",
			"size"
		],
		[
			"name: string\tNativeScript - EvalError",
			"name"
		],
		[
			"originX: number\tNativeScript - Button",
			"originX"
		],
		[
			"opacity: number\tNativeScript - Button",
			"opacity"
		],
		[
			"margin: string\tNativeScript - TabView",
			"margin"
		],
		[
			"width: number\tNativeScript - Progress",
			"width"
		],
		[
			"color: Color\tNativeScript - SearchBar",
			"color"
		],
		[
			"rotate: number\tNativeScript - WebView",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - WebView",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - WebView",
			"scaleY"
		],
		[
			"color: Color\tNativeScript - ActionBar",
			"color"
		],
		[
			"value: number\tNativeScript - Progress",
			"value"
		],
		[
			"_context: any\tNativeScript - TextView",
			"_context"
		],
		[
			"android: any\tNativeScript - TextField",
			"android"
		],
		[
			"page: View\tNativeScript - ContentView",
			"page"
		],
		[
			"isLoaded: boolean\tNativeScript - View",
			"isLoaded"
		],
		[
			"marginTop: number\tNativeScript - View",
			"marginTop"
		],
		[
			"apply(): void\tNativeScript - CssState",
			"apply()"
		],
		[
			"loadMode: string\tNativeScript - Image",
			"loadMode"
		],
		[
			"shift(): T\tNativeScript - Array<T, T>",
			"shift()"
		],
		[
			"css: string\tNativeScript - StyleScope",
			"css"
		],
		[
			"_nativeView: any\tNativeScript - Frame",
			"_nativeView"
		],
		[
			"minWidth: number\tNativeScript - Style",
			"minWidth"
		],
		[
			"range: boolean\tNativeScript - Options",
			"range"
		],
		[
			"size: number\tNativeScript - Map<K, V>",
			"size"
		],
		[
			"originY: number\tNativeScript - Border",
			"originY"
		],
		[
			"originX: number\tNativeScript - Border",
			"originX"
		],
		[
			"view: View\tNativeScript - TabViewItem",
			"view"
		],
		[
			"color: Color\tNativeScript - TextField",
			"color"
		],
		[
			"opacity: number\tNativeScript - Border",
			"opacity"
		],
		[
			"name: string\tNativeScript - EvalError",
			"name"
		],
		[
			"cssType: string\tNativeScript - Layout",
			"cssType"
		],
		[
			"name: string\tNativeScript - ClassInfo",
			"name"
		],
		[
			"minHeight: number\tNativeScript - View",
			"minHeight"
		],
		[
			"minHeight: number\tNativeScript - Page",
			"minHeight"
		],
		[
			"marginTop: number\tNativeScript - Page",
			"marginTop"
		],
		[
			"clipPath: string\tNativeScript - Style",
			"clipPath"
		],
		[
			"bubbles: boolean\tNativeScript - Event",
			"bubbles"
		],
		[
			"value: number\tNativeScript - CSSValue",
			"value"
		],
		[
			"originY: number\tNativeScript - Slider",
			"originY"
		],
		[
			"rotate: number\tNativeScript - TabView",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - TabView",
			"scaleX"
		],
		[
			"minWidth: number\tNativeScript - Image",
			"minWidth"
		],
		[
			"_context: any\tNativeScript - ListView",
			"_context"
		],
		[
			"rules: Node\tNativeScript - StyleSheet",
			"rules"
		],
		[
			"onLoaded(): void\tNativeScript - Image",
			"onLoaded()"
		],
		[
			"cssClass: string\tNativeScript - Frame",
			"cssClass"
		],
		[
			"selectors: string\tNativeScript - Rule",
			"selectors"
		],
		[
			"_nativeView: any\tNativeScript - Image",
			"_nativeView"
		],
		[
			"page: View\tNativeScript - StackLayout",
			"page"
		],
		[
			"hint: string\tNativeScript - TextField",
			"hint"
		],
		[
			"onLoaded(): void\tNativeScript - Frame",
			"onLoaded()"
		],
		[
			"scaleY: number\tNativeScript - TabView",
			"scaleY"
		],
		[
			"opacity: number\tNativeScript - Switch",
			"opacity"
		],
		[
			"originX: number\tNativeScript - Switch",
			"originX"
		],
		[
			"originY: number\tNativeScript - Switch",
			"originY"
		],
		[
			"opacity: number\tNativeScript - Layout",
			"opacity"
		],
		[
			"fontStyle: string\tNativeScript - Font",
			"fontStyle"
		],
		[
			"isLoaded: boolean\tNativeScript - Page",
			"isLoaded"
		],
		[
			"opacity: number\tNativeScript - Slider",
			"opacity"
		],
		[
			"ident: string\tNativeScript - Selector",
			"ident"
		],
		[
			"typeName: string\tNativeScript - Cache",
			"typeName"
		],
		[
			"hint: string\tNativeScript - SearchBar",
			"hint"
		],
		[
			"name: string\tNativeScript - Keyframes",
			"name"
		],
		[
			"getX(): number\tNativeScript - Pointer",
			"getX()"
		],
		[
			"name: string\tNativeScript - TypeError",
			"name"
		],
		[
			"global: boolean\tNativeScript - RegExp",
			"global"
		],
		[
			"valueOf(): number\tNativeScript - Date",
			"valueOf()"
		],
		[
			"clipPath: string\tNativeScript - Style",
			"clipPath"
		],
		[
			"_createUI(): void\tNativeScript - Page",
			"_createUI()"
		],
		[
			"getY(): number\tNativeScript - Pointer",
			"getY()"
		],
		[
			"isItalic: boolean\tNativeScript - Font",
			"isItalic"
		],
		[
			"typeName: string\tNativeScript - Style",
			"typeName"
		],
		[
			"beginEdit(): void\tNativeScript - Span",
			"beginEdit()"
		],
		[
			"_createUI(): void\tNativeScript - View",
			"_createUI()"
		],
		[
			"isLocked: boolean\tNativeScript - File",
			"isLocked"
		],
		[
			"extension: string\tNativeScript - File",
			"extension"
		],
		[
			"width: number\tNativeScript - TextBase",
			"width"
		],
		[
			"bubbles: boolean\tNativeScript - Event",
			"bubbles"
		],
		[
			"underline: number\tNativeScript - Span",
			"underline"
		],
		[
			"originX: number\tNativeScript - Slider",
			"originX"
		],
		[
			"fontSize: number\tNativeScript - Style",
			"fontSize"
		],
		[
			"width: number\tNativeScript - Repeater",
			"width"
		],
		[
			"id: string\tNativeScript - StackLayout",
			"id"
		],
		[
			"_cssState: any\tNativeScript - TabView",
			"_cssState"
		],
		[
			"_nativeView: any\tNativeScript - Label",
			"_nativeView"
		],
		[
			"parent: View\tNativeScript - TextField",
			"parent"
		],
		[
			"cssClass: string\tNativeScript - Image",
			"cssClass"
		],
		[
			"_domId: number\tNativeScript - TabView",
			"_domId"
		],
		[
			"typeName: string\tNativeScript - Label",
			"typeName"
		],
		[
			"cssType: string\tNativeScript - Border",
			"cssType"
		],
		[
			"bodyUsed: boolean\tNativeScript - Body",
			"bodyUsed"
		],
		[
			"fontSize: number\tNativeScript - Style",
			"fontSize"
		],
		[
			"day: number\tNativeScript - DatePicker",
			"day"
		],
		[
			"className: string\tNativeScript - Page",
			"className"
		],
		[
			"typeName: string\tNativeScript - Image",
			"typeName"
		],
		[
			"getDate(): number\tNativeScript - Date",
			"getDate()"
		],
		[
			"minWidth: number\tNativeScript - Frame",
			"minWidth"
		],
		[
			"style: Style\tNativeScript - TextField",
			"style"
		],
		[
			"page: View\tNativeScript - Placeholder",
			"page"
		],
		[
			"text: string\tNativeScript - TextField",
			"text"
		],
		[
			"showModal(): Page\tNativeScript - Page",
			"showModal()"
		],
		[
			"bodyUsed: boolean\tNativeScript - Body",
			"bodyUsed"
		],
		[
			"opacity: number\tNativeScript - Frame",
			"opacity"
		],
		[
			"rotate: number\tNativeScript - Slider",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - Slider",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - Slider",
			"scaleY"
		],
		[
			"margin: string\tNativeScript - Slider",
			"margin"
		],
		[
			"height: number\tNativeScript - Slider",
			"height"
		],
		[
			"_domId: number\tNativeScript - Slider",
			"_domId"
		],
		[
			"id: string\tNativeScript - DockLayout",
			"id"
		],
		[
			"_cssState: any\tNativeScript - Slider",
			"_cssState"
		],
		[
			"length: number\tNativeScript - String",
			"length"
		],
		[
			"trim(): string\tNativeScript - String",
			"trim()"
		],
		[
			"name: string\tNativeScript - URIError",
			"name"
		],
		[
			"page: View\tNativeScript - DockLayout",
			"page"
		],
		[
			"id: string\tNativeScript - WrapLayout",
			"id"
		],
		[
			"page: View\tNativeScript - WrapLayout",
			"page"
		],
		[
			"android: number\tNativeScript - Color",
			"android"
		],
		[
			"_nativeView: any\tNativeScript - View",
			"_nativeView"
		],
		[
			"_cssState: any\tNativeScript - Layout",
			"_cssState"
		],
		[
			"_domId: number\tNativeScript - Layout",
			"_domId"
		],
		[
			"cssClass: string\tNativeScript - View",
			"cssClass"
		],
		[
			"name: string\tNativeScript - Property",
			"name"
		],
		[
			"name: string\tNativeScript - Property",
			"name"
		],
		[
			"minWidth: number\tNativeScript - View",
			"minWidth"
		],
		[
			"id: string\tNativeScript - ListPicker",
			"id"
		],
		[
			"srcElement: any\tNativeScript - Event",
			"srcElement"
		],
		[
			"originY: number\tNativeScript - Label",
			"originY"
		],
		[
			"items: any\tNativeScript - ListPicker",
			"items"
		],
		[
			"error: any\tNativeScript - ErrorEvent",
			"error"
		],
		[
			"page: View\tNativeScript - ListPicker",
			"page"
		],
		[
			"opacity: number\tNativeScript - Style",
			"opacity"
		],
		[
			"message: string\tNativeScript - Error",
			"message"
		],
		[
			"originX: number\tNativeScript - Label",
			"originX"
		],
		[
			"opacity: number\tNativeScript - Label",
			"opacity"
		],
		[
			"source: string\tNativeScript - RegExp",
			"source"
		],
		[
			"padding: string\tNativeScript - Style",
			"padding"
		],
		[
			"cssType: string\tNativeScript - Label",
			"cssType"
		],
		[
			"getDay(): number\tNativeScript - Date",
			"getDay()"
		],
		[
			"typeName: string\tNativeScript - View",
			"typeName"
		],
		[
			"ios: any\tNativeScript - SegmentedBar",
			"ios"
		],
		[
			"trace(): void\tNativeScript - Console",
			"trace()"
		],
		[
			"height: number\tNativeScript - Layout",
			"height"
		],
		[
			"android: any\tNativeScript - ListView",
			"android"
		],
		[
			"color: Color\tNativeScript - ListView",
			"color"
		],
		[
			"type: \"\"\tNativeScript - TypeSelector",
			"type"
		],
		[
			"fontSize: number\tNativeScript - Font",
			"fontSize"
		],
		[
			"margin: string\tNativeScript - Layout",
			"margin"
		],
		[
			"parent: View\tNativeScript - ListView",
			"parent"
		],
		[
			"style: Style\tNativeScript - ListView",
			"style"
		],
		[
			"focus(): boolean\tNativeScript - View",
			"focus()"
		],
		[
			"onLoaded(): void\tNativeScript - View",
			"onLoaded()"
		],
		[
			"line: number\tNativeScript - Position",
			"line"
		],
		[
			"trace(): void\tNativeScript - Console",
			"trace()"
		],
		[
			"stretch: string\tNativeScript - Image",
			"stretch"
		],
		[
			"opacity: number\tNativeScript - Style",
			"opacity"
		],
		[
			"random(): number\tNativeScript - Math",
			"random()"
		],
		[
			"id: string\tNativeScript - GridLayout",
			"id"
		],
		[
			"padding: string\tNativeScript - Style",
			"padding"
		],
		[
			"originY: number\tNativeScript - Image",
			"originY"
		],
		[
			"originX: number\tNativeScript - Image",
			"originX"
		],
		[
			"opacity: number\tNativeScript - Image",
			"opacity"
		],
		[
			"type: string\tNativeScript - CSSValue",
			"type"
		],
		[
			"unit: string\tNativeScript - CSSValue",
			"unit"
		],
		[
			"column: number\tNativeScript - Source",
			"column"
		],
		[
			"reload(): any\tNativeScript - WebView",
			"reload()"
		],
		[
			"goBack(): any\tNativeScript - WebView",
			"goBack()"
		],
		[
			"trace(): void\tNativeScript - Console",
			"trace()"
		],
		[
			"_nativeView: any\tNativeScript - Page",
			"_nativeView"
		],
		[
			"getDay(): number\tNativeScript - Date",
			"getDay()"
		],
		[
			"date: Date\tNativeScript - DatePicker",
			"date"
		],
		[
			"id: string\tNativeScript - DatePicker",
			"id"
		],
		[
			"top: number\tNativeScript - Thickness",
			"top"
		],
		[
			"name: string\tNativeScript - Property",
			"name"
		],
		[
			"scaleY: number\tNativeScript - Button",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - Button",
			"scaleX"
		],
		[
			"rotate: number\tNativeScript - Button",
			"rotate"
		],
		[
			"margin: string\tNativeScript - Button",
			"margin"
		],
		[
			"cssClass: string\tNativeScript - Page",
			"cssClass"
		],
		[
			"page: View\tNativeScript - LayoutBase",
			"page"
		],
		[
			"random(): number\tNativeScript - Math",
			"random()"
		],
		[
			"_domId: number\tNativeScript - Switch",
			"_domId"
		],
		[
			"rotate: number\tNativeScript - Layout",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - Layout",
			"scaleX"
		],
		[
			"scaleY: number\tNativeScript - Layout",
			"scaleY"
		],
		[
			"height: number\tNativeScript - Switch",
			"height"
		],
		[
			"layoutView: View\tNativeScript - Page",
			"layoutView"
		],
		[
			"margin: string\tNativeScript - Switch",
			"margin"
		],
		[
			"rotate: number\tNativeScript - Switch",
			"rotate"
		],
		[
			"parent: Folder\tNativeScript - Folder",
			"parent"
		],
		[
			"length: number\tNativeScript - String",
			"length"
		],
		[
			"scaleX: number\tNativeScript - Switch",
			"scaleX"
		],
		[
			"minWidth: number\tNativeScript - Page",
			"minWidth"
		],
		[
			"scaleY: number\tNativeScript - Switch",
			"scaleY"
		],
		[
			"message: string\tNativeScript - Error",
			"message"
		],
		[
			"height: number\tNativeScript - Button",
			"height"
		],
		[
			"width: number\tNativeScript - WebView",
			"width"
		],
		[
			"page: View\tNativeScript - DatePicker",
			"page"
		],
		[
			"_domId: number\tNativeScript - Button",
			"_domId"
		],
		[
			"_cssState: any\tNativeScript - Button",
			"_cssState"
		],
		[
			"_context: any\tNativeScript - TabView",
			"_context"
		],
		[
			"error: any\tNativeScript - ErrorEvent",
			"error"
		],
		[
			"trim(): string\tNativeScript - String",
			"trim()"
		],
		[
			"typeName: string\tNativeScript - Page",
			"typeName"
		],
		[
			"page: View\tNativeScript - ScrollView",
			"page"
		],
		[
			"id: string\tNativeScript - LayoutBase",
			"id"
		],
		[
			"_context: any\tNativeScript - WebView",
			"_context"
		],
		[
			"width: number\tNativeScript - TabView",
			"width"
		],
		[
			"id: string\tNativeScript - ScrollView",
			"id"
		],
		[
			"cssType: string\tNativeScript - Image",
			"cssType"
		],
		[
			"scaleY: number\tNativeScript - Border",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - Border",
			"scaleX"
		],
		[
			"rotate: number\tNativeScript - Border",
			"rotate"
		],
		[
			"margin: string\tNativeScript - Border",
			"margin"
		],
		[
			"focus(): boolean\tNativeScript - Page",
			"focus()"
		],
		[
			"android: any\tNativeScript - Location",
			"android"
		],
		[
			"height: number\tNativeScript - Border",
			"height"
		],
		[
			"onLoaded(): void\tNativeScript - Page",
			"onLoaded()"
		],
		[
			"style: Style\tNativeScript - HtmlView",
			"style"
		],
		[
			"region: string\tNativeScript - Device",
			"region"
		],
		[
			"_domId: number\tNativeScript - Border",
			"_domId"
		],
		[
			"parent: View\tNativeScript - HtmlView",
			"parent"
		],
		[
			"_cssState: any\tNativeScript - Border",
			"_cssState"
		],
		[
			"time: Date\tNativeScript - TimePicker",
			"time"
		],
		[
			"page: View\tNativeScript - TimePicker",
			"page"
		],
		[
			"id: string\tNativeScript - TimePicker",
			"id"
		],
		[
			"fontSize: number\tNativeScript - Span",
			"fontSize"
		],
		[
			"style: Style\tNativeScript - Repeater",
			"style"
		],
		[
			"typeName: string\tNativeScript - Span",
			"typeName"
		],
		[
			"android: any\tNativeScript - TextBase",
			"android"
		],
		[
			"parent: View\tNativeScript - Repeater",
			"parent"
		],
		[
			"html: string\tNativeScript - HtmlView",
			"html"
		],
		[
			"color: Color\tNativeScript - HtmlView",
			"color"
		],
		[
			"color: Color\tNativeScript - TextBase",
			"color"
		],
		[
			"android: any\tNativeScript - HtmlView",
			"android"
		],
		[
			"text: string\tNativeScript - TextView",
			"text"
		],
		[
			"style: Style\tNativeScript - TextView",
			"style"
		],
		[
			"parent: View\tNativeScript - TextView",
			"parent"
		],
		[
			"parent: View\tNativeScript - TextBase",
			"parent"
		],
		[
			"style: Style\tNativeScript - TextBase",
			"style"
		],
		[
			"text: string\tNativeScript - TextBase",
			"text"
		],
		[
			"srcElement: any\tNativeScript - Event",
			"srcElement"
		],
		[
			"hint: string\tNativeScript - TextView",
			"hint"
		],
		[
			"name: string\tNativeScript - URIError",
			"name"
		],
		[
			"color: Color\tNativeScript - TextView",
			"color"
		],
		[
			"android: any\tNativeScript - TextView",
			"android"
		],
		[
			"android: any\tNativeScript - Progress",
			"android"
		],
		[
			"color: Color\tNativeScript - Progress",
			"color"
		],
		[
			"source: string\tNativeScript - RegExp",
			"source"
		],
		[
			"color: Color\tNativeScript - Repeater",
			"color"
		],
		[
			"android: any\tNativeScript - Repeater",
			"android"
		],
		[
			"parent: View\tNativeScript - Progress",
			"parent"
		],
		[
			"style: Style\tNativeScript - Progress",
			"style"
		],
		[
			"page: Page\tNativeScript - ActionItem",
			"page"
		],
		[
			"cssType: string\tNativeScript - Frame",
			"cssType"
		],
		[
			"originY: number\tNativeScript - Frame",
			"originY"
		],
		[
			"originX: number\tNativeScript - Frame",
			"originX"
		],
		[
			"page: View\tNativeScript - GridLayout",
			"page"
		],
		[
			"_cssState: any\tNativeScript - Switch",
			"_cssState"
		],
		[
			"style: Style\tNativeScript - WebView",
			"style"
		],
		[
			"_context: any\tNativeScript - Button",
			"_context"
		],
		[
			"opacity: number\tNativeScript - View",
			"opacity"
		],
		[
			"android: any\tNativeScript - TabView",
			"android"
		],
		[
			"parent: View\tNativeScript - WebView",
			"parent"
		],
		[
			"color: Color\tNativeScript - TabView",
			"color"
		],
		[
			"parent: View\tNativeScript - TabView",
			"parent"
		],
		[
			"originY: number\tNativeScript - View",
			"originY"
		],
		[
			"style: Style\tNativeScript - TabView",
			"style"
		],
		[
			"scaleY: number\tNativeScript - Label",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - Label",
			"scaleX"
		],
		[
			"margin: string\tNativeScript - Image",
			"margin"
		],
		[
			"color: Color\tNativeScript - WebView",
			"color"
		],
		[
			"rotate: number\tNativeScript - Style",
			"rotate"
		],
		[
			"android: any\tNativeScript - WebView",
			"android"
		],
		[
			"scaleX: number\tNativeScript - Style",
			"scaleX"
		],
		[
			"_domId: number\tNativeScript - Label",
			"_domId"
		],
		[
			"scaleY: number\tNativeScript - Style",
			"scaleY"
		],
		[
			"height: number\tNativeScript - Image",
			"height"
		],
		[
			"_cssState: any\tNativeScript - Label",
			"_cssState"
		],
		[
			"width: number\tNativeScript - Border",
			"width"
		],
		[
			"raw: any\tNativeScript - HttpContent",
			"raw"
		],
		[
			"zIndex: number\tNativeScript - Style",
			"zIndex"
		],
		[
			"ios: any\tNativeScript - ImageSource",
			"ios"
		],
		[
			"_domId: number\tNativeScript - Image",
			"_domId"
		],
		[
			"_cssState: any\tNativeScript - Image",
			"_cssState"
		],
		[
			"rotate: number\tNativeScript - Label",
			"rotate"
		],
		[
			"loc: boolean\tNativeScript - Options",
			"loc"
		],
		[
			"raw: boolean\tNativeScript - Options",
			"raw"
		],
		[
			"pop(): T\tNativeScript - Array<T, T>",
			"pop()"
		],
		[
			"ios: any\tNativeScript - ContentView",
			"ios"
		],
		[
			"height: number\tNativeScript - Style",
			"height"
		],
		[
			"msClose(): void\tNativeScript - Blob",
			"msClose()"
		],
		[
			"cssType: string\tNativeScript - Node",
			"cssType"
		],
		[
			"pos: number\tNativeScript - Selector",
			"pos"
		],
		[
			"SQRT1_2: number\tNativeScript - Math",
			"SQRT1_2"
		],
		[
			"model: string\tNativeScript - Device",
			"model"
		],
		[
			"content: View\tNativeScript - Border",
			"content"
		],
		[
			"_context: any\tNativeScript - Slider",
			"_context"
		],
		[
			"page: View\tNativeScript - SearchBar",
			"page"
		],
		[
			"width: number\tNativeScript - Button",
			"width"
		],
		[
			"originX: number\tNativeScript - View",
			"originX"
		],
		[
			"type: \"#\"\tNativeScript - IdSelector",
			"type"
		],
		[
			"url: string\tNativeScript - Response",
			"url"
		],
		[
			"_context: any\tNativeScript - Border",
			"_context"
		],
		[
			"pop(): T\tNativeScript - Array<T, T>",
			"pop()"
		],
		[
			"ios: any\tNativeScript - Placeholder",
			"ios"
		],
		[
			"margin: string\tNativeScript - Style",
			"margin"
		],
		[
			"ios: any\tNativeScript - ProxyObject",
			"ios"
		],
		[
			"cssType: string\tNativeScript - Page",
			"cssType"
		],
		[
			"endEdit(): void\tNativeScript - Span",
			"endEdit()"
		],
		[
			"id: string\tNativeScript - SearchBar",
			"id"
		],
		[
			"isBold: boolean\tNativeScript - Font",
			"isBold"
		],
		[
			"_context: any\tNativeScript - Switch",
			"_context"
		],
		[
			"clear(): void\tNativeScript - Set<T>",
			"clear()"
		],
		[
			"id: string\tNativeScript - ActionBar",
			"id"
		],
		[
			"_context: any\tNativeScript - Layout",
			"_context"
		],
		[
			"url: string\tNativeScript - Response",
			"url"
		],
		[
			"ok: boolean\tNativeScript - Response",
			"ok"
		],
		[
			"SQRT1_2: number\tNativeScript - Math",
			"SQRT1_2"
		],
		[
			"value: number\tNativeScript - Slider",
			"value"
		],
		[
			"width: number\tNativeScript - Slider",
			"width"
		],
		[
			"clear(): void\tNativeScript - Set<T>",
			"clear()"
		],
		[
			"msClose(): void\tNativeScript - Blob",
			"msClose()"
		],
		[
			"ios: any\tNativeScript - StackLayout",
			"ios"
		],
		[
			"cssType: string\tNativeScript - View",
			"cssType"
		],
		[
			"android: any\tNativeScript - Pointer",
			"android"
		],
		[
			"height: number\tNativeScript - Style",
			"height"
		],
		[
			"scaleY: number\tNativeScript - Image",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - Image",
			"scaleX"
		],
		[
			"page: Page\tNativeScript - ActionBar",
			"page"
		],
		[
			"rotate: number\tNativeScript - Image",
			"rotate"
		],
		[
			"opacity: number\tNativeScript - Page",
			"opacity"
		],
		[
			"originX: number\tNativeScript - Page",
			"originX"
		],
		[
			"originY: number\tNativeScript - Page",
			"originY"
		],
		[
			"width: number\tNativeScript - Switch",
			"width"
		],
		[
			"width: number\tNativeScript - Layout",
			"width"
		],
		[
			"margin: string\tNativeScript - Style",
			"margin"
		],
		[
			"margin: string\tNativeScript - Label",
			"margin"
		],
		[
			"page: View\tNativeScript - TextField",
			"page"
		],
		[
			"_cssState: any\tNativeScript - Frame",
			"_cssState"
		],
		[
			"id: string\tNativeScript - TextField",
			"id"
		],
		[
			"_domId: number\tNativeScript - Frame",
			"_domId"
		],
		[
			"reverse(): T\tNativeScript - List<T>",
			"reverse()"
		],
		[
			"scaleY: number\tNativeScript - Frame",
			"scaleY"
		],
		[
			"scaleX: number\tNativeScript - Frame",
			"scaleX"
		],
		[
			"rotate: number\tNativeScript - Frame",
			"rotate"
		],
		[
			"height: number\tNativeScript - Frame",
			"height"
		],
		[
			"margin: string\tNativeScript - Frame",
			"margin"
		],
		[
			"ok: boolean\tNativeScript - Response",
			"ok"
		],
		[
			"zIndex: number\tNativeScript - Style",
			"zIndex"
		],
		[
			"height: number\tNativeScript - Label",
			"height"
		],
		[
			"reverse(): T\tNativeScript - List<T>",
			"reverse()"
		],
		[
			"scaleX: number\tNativeScript - Page",
			"scaleX"
		],
		[
			"id: string\tNativeScript - Progress",
			"id"
		],
		[
			"width: number\tNativeScript - Frame",
			"width"
		],
		[
			"_context: any\tNativeScript - Frame",
			"_context"
		],
		[
			"page: View\tNativeScript - Progress",
			"page"
		],
		[
			"id: string\tNativeScript - Repeater",
			"id"
		],
		[
			"style: Style\tNativeScript - Slider",
			"style"
		],
		[
			"items: any\tNativeScript - Repeater",
			"items"
		],
		[
			"id: string\tNativeScript - TextView",
			"id"
		],
		[
			"LOG10E: number\tNativeScript - Math",
			"LOG10E"
		],
		[
			"page: View\tNativeScript - TextView",
			"page"
		],
		[
			"page: View\tNativeScript - TextBase",
			"page"
		],
		[
			"color: Color\tNativeScript - Slider",
			"color"
		],
		[
			"id: string\tNativeScript - TextBase",
			"id"
		],
		[
			"page: View\tNativeScript - Repeater",
			"page"
		],
		[
			"id: string\tNativeScript - HtmlView",
			"id"
		],
		[
			"android: any\tNativeScript - Slider",
			"android"
		],
		[
			"ios: any\tNativeScript - DockLayout",
			"ios"
		],
		[
			"url: string\tNativeScript - Request",
			"url"
		],
		[
			"ios: any\tNativeScript - TimePicker",
			"ios"
		],
		[
			"page: View\tNativeScript - HtmlView",
			"page"
		],
		[
			"uuid: string\tNativeScript - Device",
			"uuid"
		],
		[
			"android: any\tNativeScript - Border",
			"android"
		],
		[
			"color: Color\tNativeScript - Border",
			"color"
		],
		[
			"size: number\tNativeScript - Set<T>",
			"size"
		],
		[
			"ios: any\tNativeScript - WrapLayout",
			"ios"
		],
		[
			"_cssState: any\tNativeScript - View",
			"_cssState"
		],
		[
			"value: string\tNativeScript - Token",
			"value"
		],
		[
			"_domId: number\tNativeScript - View",
			"_domId"
		],
		[
			"parent: View\tNativeScript - Border",
			"parent"
		],
		[
			"_context: any\tNativeScript - Image",
			"_context"
		],
		[
			"style: Style\tNativeScript - Border",
			"style"
		],
		[
			"ios: any\tNativeScript - ScrollView",
			"ios"
		],
		[
			"ios: any\tNativeScript - LayoutBase",
			"ios"
		],
		[
			"id: number\tNativeScript - Property",
			"id"
		],
		[
			"height: number\tNativeScript - View",
			"height"
		],
		[
			"ios: any\tNativeScript - GridLayout",
			"ios"
		],
		[
			"src: string\tNativeScript - WebView",
			"src"
		],
		[
			"android: any\tNativeScript - Layout",
			"android"
		],
		[
			"url: string\tNativeScript - WebView",
			"url"
		],
		[
			"scaleY: number\tNativeScript - Page",
			"scaleY"
		],
		[
			"android: any\tNativeScript - Button",
			"android"
		],
		[
			"color: Color\tNativeScript - Button",
			"color"
		],
		[
			"parent: View\tNativeScript - Slider",
			"parent"
		],
		[
			"margin: string\tNativeScript - View",
			"margin"
		],
		[
			"rotate: number\tNativeScript - Page",
			"rotate"
		],
		[
			"id: number\tNativeScript - Property",
			"id"
		],
		[
			"get(): T\tNativeScript - WeakRef<T>",
			"get()"
		],
		[
			"width: number\tNativeScript - Label",
			"width"
		],
		[
			"style: Style\tNativeScript - Switch",
			"style"
		],
		[
			"path: string\tNativeScript - Folder",
			"path"
		],
		[
			"name: string\tNativeScript - Folder",
			"name"
		],
		[
			"parent: View\tNativeScript - Switch",
			"parent"
		],
		[
			"margin: string\tNativeScript - Page",
			"margin"
		],
		[
			"size: number\tNativeScript - Set<T>",
			"size"
		],
		[
			"color: Color\tNativeScript - Switch",
			"color"
		],
		[
			"style: Style\tNativeScript - Layout",
			"style"
		],
		[
			"android: any\tNativeScript - Switch",
			"android"
		],
		[
			"ios: any\tNativeScript - ListPicker",
			"ios"
		],
		[
			"height: number\tNativeScript - Page",
			"height"
		],
		[
			"parent: View\tNativeScript - Layout",
			"parent"
		],
		[
			"width: number\tNativeScript - Style",
			"width"
		],
		[
			"parent: Folder\tNativeScript - File",
			"parent"
		],
		[
			"color: Color\tNativeScript - Layout",
			"color"
		],
		[
			"rotate: number\tNativeScript - View",
			"rotate"
		],
		[
			"scaleX: number\tNativeScript - View",
			"scaleX"
		],
		[
			"parent: View\tNativeScript - Button",
			"parent"
		],
		[
			"scaleY: number\tNativeScript - View",
			"scaleY"
		],
		[
			"LOG10E: number\tNativeScript - Math",
			"LOG10E"
		],
		[
			"id: number\tNativeScript - Property",
			"id"
		],
		[
			"style: Style\tNativeScript - Button",
			"style"
		],
		[
			"text: string\tNativeScript - Button",
			"text"
		],
		[
			"ios: iOSFrame\tNativeScript - Frame",
			"ios"
		],
		[
			"_context: any\tNativeScript - Label",
			"_context"
		],
		[
			"ios: any\tNativeScript - DatePicker",
			"ios"
		],
		[
			"clear(): void\tNativeScript - Cache",
			"clear()"
		],
		[
			"_domId: number\tNativeScript - Page",
			"_domId"
		],
		[
			"height: number\tNativeScript - Size",
			"height"
		],
		[
			"id: string\tNativeScript - ListView",
			"id"
		],
		[
			"_cssState: any\tNativeScript - Page",
			"_cssState"
		],
		[
			"items: any\tNativeScript - ListView",
			"items"
		],
		[
			"width: number\tNativeScript - Style",
			"width"
		],
		[
			"get(): T\tNativeScript - WeakRef<T>",
			"get()"
		],
		[
			"line: number\tNativeScript - Source",
			"line"
		],
		[
			"page: View\tNativeScript - ListView",
			"page"
		],
		[
			"url: string\tNativeScript - Request",
			"url"
		],
		[
			"width: number\tNativeScript - Image",
			"width"
		],
		[
			"shift(): T\tNativeScript - List<T>",
			"shift()"
		],
		[
			"SQRT2: number\tNativeScript - Math",
			"SQRT2"
		],
		[
			"name: string\tNativeScript - Error",
			"name"
		],
		[
			"type: string\tNativeScript - Event",
			"type"
		],
		[
			"type: string\tNativeScript - Token",
			"type"
		],
		[
			"color: Color\tNativeScript - Label",
			"color"
		],
		[
			"shift(): T\tNativeScript - List<T>",
			"shift()"
		],
		[
			"color: Color\tNativeScript - Frame",
			"color"
		],
		[
			"ios: any\tNativeScript - SearchBar",
			"ios"
		],
		[
			"android: any\tNativeScript - Image",
			"android"
		],
		[
			"LOG2E: number\tNativeScript - Math",
			"LOG2E"
		],
		[
			"name: string\tNativeScript - Error",
			"name"
		],
		[
			"android: any\tNativeScript - Label",
			"android"
		],
		[
			"color: Color\tNativeScript - Image",
			"color"
		],
		[
			"width: number\tNativeScript - View",
			"width"
		],
		[
			"argb: number\tNativeScript - Color",
			"argb"
		],
		[
			"LOG2E: number\tNativeScript - Math",
			"LOG2E"
		],
		[
			"width: number\tNativeScript - Page",
			"width"
		],
		[
			"content: View\tNativeScript - Page",
			"content"
		],
		[
			"ios: any\tNativeScript - ActionBar",
			"ios"
		],
		[
			"text: string\tNativeScript - Label",
			"text"
		],
		[
			"id: string\tNativeScript - WebView",
			"id"
		],
		[
			"SQRT2: number\tNativeScript - Math",
			"SQRT2"
		],
		[
			"name: string\tNativeScript - Color",
			"name"
		],
		[
			"type: \".\"\tNativeScript - Selector",
			"type"
		],
		[
			"ios: any\tNativeScript - TextField",
			"ios"
		],
		[
			"width: number\tNativeScript - Size",
			"width"
		],
		[
			"style: Style\tNativeScript - Label",
			"style"
		],
		[
			"page: View\tNativeScript - TabView",
			"page"
		],
		[
			"parent: View\tNativeScript - Label",
			"parent"
		],
		[
			"color: Color\tNativeScript - Style",
			"color"
		],
		[
			"_context: any\tNativeScript - Page",
			"_context"
		],
		[
			"parent: View\tNativeScript - Frame",
			"parent"
		],
		[
			"id: string\tNativeScript - TabView",
			"id"
		],
		[
			"page: View\tNativeScript - WebView",
			"page"
		],
		[
			"uri: string\tNativeScript - Source",
			"uri"
		],
		[
			"_context: any\tNativeScript - View",
			"_context"
		],
		[
			"type: string\tNativeScript - Event",
			"type"
		],
		[
			"parent: View\tNativeScript - Image",
			"parent"
		],
		[
			"style: Style\tNativeScript - Frame",
			"style"
		],
		[
			"font: string\tNativeScript - Style",
			"font"
		],
		[
			"color: Color\tNativeScript - Style",
			"color"
		],
		[
			"style: Style\tNativeScript - Image",
			"style"
		],
		[
			"parent: View\tNativeScript - Page",
			"parent"
		],
		[
			"type: string\tNativeScript - Blob",
			"type"
		],
		[
			"page: View\tNativeScript - Slider",
			"page"
		],
		[
			"ios: any\tNativeScript - Progress",
			"ios"
		],
		[
			"ios: any\tNativeScript - Repeater",
			"ios"
		],
		[
			"ios: any\tNativeScript - TextView",
			"ios"
		],
		[
			"LN10: number\tNativeScript - Math",
			"LN10"
		],
		[
			"ios: any\tNativeScript - ListView",
			"ios"
		],
		[
			"id: string\tNativeScript - Slider",
			"id"
		],
		[
			"android: any\tNativeScript - Page",
			"android"
		],
		[
			"size: number\tNativeScript - Blob",
			"size"
		],
		[
			"ios: any\tNativeScript - TextBase",
			"ios"
		],
		[
			"parent: Node\tNativeScript - Node",
			"parent"
		],
		[
			"ios: any\tNativeScript - HtmlView",
			"ios"
		],
		[
			"type: string\tNativeScript - Blob",
			"type"
		],
		[
			"id: string\tNativeScript - Layout",
			"id"
		],
		[
			"color: Color\tNativeScript - Page",
			"color"
		],
		[
			"text: string\tNativeScript - Span",
			"text"
		],
		[
			"os: string\tNativeScript - Device",
			"os"
		],
		[
			"ios: any\tNativeScript - Location",
			"ios"
		],
		[
			"style: Style\tNativeScript - View",
			"style"
		],
		[
			"LN10: number\tNativeScript - Math",
			"LN10"
		],
		[
			"page: View\tNativeScript - Button",
			"page"
		],
		[
			"id: string\tNativeScript - Border",
			"id"
		],
		[
			"name: string\tNativeScript - File",
			"name"
		],
		[
			"parent: View\tNativeScript - View",
			"parent"
		],
		[
			"page: View\tNativeScript - Border",
			"page"
		],
		[
			"page: View\tNativeScript - Layout",
			"page"
		],
		[
			"android: any\tNativeScript - View",
			"android"
		],
		[
			"frame: Frame\tNativeScript - Page",
			"frame"
		],
		[
			"hex: string\tNativeScript - Color",
			"hex"
		],
		[
			"path: string\tNativeScript - File",
			"path"
		],
		[
			"color: Color\tNativeScript - View",
			"color"
		],
		[
			"style: Style\tNativeScript - Page",
			"style"
		],
		[
			"id: string\tNativeScript - Button",
			"id"
		],
		[
			"id: string\tNativeScript - Switch",
			"id"
		],
		[
			"size: number\tNativeScript - Blob",
			"size"
		],
		[
			"page: View\tNativeScript - Switch",
			"page"
		],
		[
			"modal: Page\tNativeScript - Page",
			"modal"
		],
		[
			"page: View\tNativeScript - Frame",
			"page"
		],
		[
			"id: string\tNativeScript - Frame",
			"id"
		],
		[
			"page: View\tNativeScript - Image",
			"page"
		],
		[
			"page: View\tNativeScript - Label",
			"page"
		],
		[
			"pop(): T\tNativeScript - List<T>",
			"pop()"
		],
		[
			"owner: any\tNativeScript - Owned",
			"owner"
		],
		[
			"ios: any\tNativeScript - Pointer",
			"ios"
		],
		[
			"ios: any\tNativeScript - TabView",
			"ios"
		],
		[
			"LN2: number\tNativeScript - Math",
			"LN2"
		],
		[
			"pop(): T\tNativeScript - List<T>",
			"pop()"
		],
		[
			"ios: any\tNativeScript - WebView",
			"ios"
		],
		[
			"css: string\tNativeScript - Page",
			"css"
		],
		[
			"LN2: number\tNativeScript - Math",
			"LN2"
		],
		[
			"id: string\tNativeScript - Image",
			"id"
		],
		[
			"id: string\tNativeScript - Label",
			"id"
		],
		[
			"ios: any\tNativeScript - Layout",
			"ios"
		],
		[
			"b: number\tNativeScript - Color",
			"b"
		],
		[
			"ios: any\tNativeScript - Button",
			"ios"
		],
		[
			"a: number\tNativeScript - Color",
			"a"
		],
		[
			"page: View\tNativeScript - View",
			"page"
		],
		[
			"ios: any\tNativeScript - Border",
			"ios"
		],
		[
			"page: View\tNativeScript - Page",
			"page"
		],
		[
			"id: string\tNativeScript - Page",
			"id"
		],
		[
			"ios: any\tNativeScript - Switch",
			"ios"
		],
		[
			"PI: number\tNativeScript - Math",
			"PI"
		],
		[
			"id: string\tNativeScript - View",
			"id"
		],
		[
			"r: number\tNativeScript - Color",
			"r"
		],
		[
			"PI: number\tNativeScript - Math",
			"PI"
		],
		[
			"id: string\tNativeScript - Node",
			"id"
		],
		[
			"g: number\tNativeScript - Color",
			"g"
		],
		[
			"x: number\tNativeScript - Point",
			"x"
		],
		[
			"y: number\tNativeScript - Point",
			"y"
		],
		[
			"ios: any\tNativeScript - Slider",
			"ios"
		],
		[
			"E: number\tNativeScript - Math",
			"E"
		],
		[
			"x: number\tNativeScript - Pair",
			"x"
		],
		[
			"ios: any\tNativeScript - Image",
			"ios"
		],
		[
			"y: number\tNativeScript - Pair",
			"y"
		],
		[
			"ios: any\tNativeScript - Color",
			"ios"
		],
		[
			"ios: any\tNativeScript - Label",
			"ios"
		],
		[
			"src: any\tNativeScript - Image",
			"src"
		],
		[
			"E: number\tNativeScript - Math",
			"E"
		],
		[
			"ios: any\tNativeScript - View",
			"ios"
		],
		[
			"ios: any\tNativeScript - Page",
			"ios"
		]
	]
}