{
	"scope": "source.js",
	"completions": [
		[
			"replace( searchValue: string, replaceValue: string ): string\tString",
			"replace(${1:searchValue: string}, ${2:replaceValue: string})"
		],
		[
			"lastIndexOf( searchString: string, position?: int ): int\tString",
			"lastIndexOf(${1:searchString: string}, ${2:position?: int})"
		],
		[
			"indexOf( searchString: string, position?: int ): int\tString",
			"indexOf(${1:searchString: string}, ${2:position?: int})"
		],
		[
			"String.fromCharCode( chars...: int ): static string\tString",
			"String.fromCharCode(${1:chars...: int})"
		],
		[
			"split( separator: string, limit: int ): string\tString",
			"split(${1:separator: string}, ${2:limit: int})"
		],
		[
			"fromCharCode( chars...: int ): static string\tString",
			"fromCharCode(${1:chars...: int})"
		],
		[
			"substring( start: int, end: int ): string\tString",
			"substring(${1:start: int}, ${2:end: int})"
		],
		[
			"slice( start: int, end: int ): string\tString",
			"slice(${1:start: int}, ${2:end: int})"
		],
		[
			"concat( strings...: string ): string\tString",
			"concat(${1:strings...: string})"
		],
		[
			"localeCompare( that: string ): int\tString",
			"localeCompare(${1:that: string})"
		],
		[
			"new String( value: any ): String\tString",
			"new String(${1:value: any})"
		],
		[
			"String( value: any ): String\tString",
			"String(${1:value: any})"
		],
		[
			"toLocaleUpperCase(): string\tString",
			"toLocaleUpperCase()"
		],
		[
			"match( regexp: any ): Array\tString",
			"match(${1:regexp: any})"
		],
		[
			"charCodeAt( pos: int ): int\tString",
			"charCodeAt(${1:pos: int})"
		],
		[
			"toLocaleLowerCase(): string\tString",
			"toLocaleLowerCase()"
		],
		[
			"charAt( pos: int ): string\tString",
			"charAt(${1:pos: int})"
		],
		[
			"search( regexp: any ): int\tString",
			"search(${1:regexp: any})"
		],
		[
			"toLowerCase(): string\tString",
			"toLowerCase()"
		],
		[
			"toUpperCase(): string\tString",
			"toUpperCase()"
		],
		[
			"toString(): string\tString",
			"toString()"
		],
		[
			"valueOf(): string\tString",
			"valueOf()"
		],
		[
			"trim(): string\tString",
			"trim()"
		],
		[
			"length: int\tString",
			"length"
		]
	]
}