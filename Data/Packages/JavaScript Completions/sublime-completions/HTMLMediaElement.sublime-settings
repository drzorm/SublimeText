{
	"scope": "source.js",
	"completions": [
		[
			"addTextTrack( kind: TextTrackKind, label?: DOMString, language?: DOMString ): TextTrack\tHTMLMediaElement",
			"addTextTrack(${1:kind: TextTrackKind}, ${2:label?: DOMString}, ${3:language?: DOMString})"
		],
		[
			"canPlayType( type: DOMString ): CanPlayTypeResult\tHTMLMediaElement",
			"canPlayType(${1:type: DOMString})"
		],
		[
			"HAVE_CURRENT_DATA: const unsigned short\tHTMLMediaElement",
			"HAVE_CURRENT_DATA"
		],
		[
			"NETWORK_NO_SOURCE: const unsigned short\tHTMLMediaElement",
			"NETWORK_NO_SOURCE"
		],
		[
			"HAVE_FUTURE_DATA: const unsigned short\tHTMLMediaElement",
			"HAVE_FUTURE_DATA"
		],
		[
			"HAVE_ENOUGH_DATA: const unsigned short\tHTMLMediaElement",
			"HAVE_ENOUGH_DATA"
		],
		[
			"NETWORK_LOADING: const unsigned short\tHTMLMediaElement",
			"NETWORK_LOADING"
		],
		[
			"NETWORK_EMPTY: const unsigned short\tHTMLMediaElement",
			"NETWORK_EMPTY"
		],
		[
			"HAVE_METADATA: const unsigned short\tHTMLMediaElement",
			"HAVE_METADATA"
		],
		[
			"HAVE_NOTHING: const unsigned short\tHTMLMediaElement",
			"HAVE_NOTHING"
		],
		[
			"NETWORK_IDLE: const unsigned short\tHTMLMediaElement",
			"NETWORK_IDLE"
		],
		[
			"fastSeek( time: double ): void\tHTMLMediaElement",
			"fastSeek(${1:time: double})"
		],
		[
			"duration: unrestricted double\tHTMLMediaElement",
			"duration"
		],
		[
			"networkState: unsigned short\tHTMLMediaElement",
			"networkState"
		],
		[
			"controller: MediaController\tHTMLMediaElement",
			"controller"
		],
		[
			"audioTracks: AudioTrackList\tHTMLMediaElement",
			"audioTracks"
		],
		[
			"defaultPlaybackRate: double\tHTMLMediaElement",
			"defaultPlaybackRate"
		],
		[
			"videoTracks: VideoTrackList\tHTMLMediaElement",
			"videoTracks"
		],
		[
			"readyState: unsigned short\tHTMLMediaElement",
			"readyState"
		],
		[
			"textTracks: TextTrackList\tHTMLMediaElement",
			"textTracks"
		],
		[
			"crossOrigin: DOMString\tHTMLMediaElement",
			"crossOrigin"
		],
		[
			"defaultMuted: boolean\tHTMLMediaElement",
			"defaultMuted"
		],
		[
			"mediaGroup: DOMString\tHTMLMediaElement",
			"mediaGroup"
		],
		[
			"currentSrc: DOMString\tHTMLMediaElement",
			"currentSrc"
		],
		[
			"buffered: TimeRanges\tHTMLMediaElement",
			"buffered"
		],
		[
			"seekable: TimeRanges\tHTMLMediaElement",
			"seekable"
		],
		[
			"playbackRate: double\tHTMLMediaElement",
			"playbackRate"
		],
		[
			"getStartDate(): Date\tHTMLMediaElement",
			"getStartDate()"
		],
		[
			"currentTime: double\tHTMLMediaElement",
			"currentTime"
		],
		[
			"preload: DOMString\tHTMLMediaElement",
			"preload"
		],
		[
			"played: TimeRanges\tHTMLMediaElement",
			"played"
		],
		[
			"controls: boolean\tHTMLMediaElement",
			"controls"
		],
		[
			"error: MediaError\tHTMLMediaElement",
			"error"
		],
		[
			"autoplay: boolean\tHTMLMediaElement",
			"autoplay"
		],
		[
			"seeking: boolean\tHTMLMediaElement",
			"seeking"
		],
		[
			"paused: boolean\tHTMLMediaElement",
			"paused"
		],
		[
			"muted: boolean\tHTMLMediaElement",
			"muted"
		],
		[
			"volume: double\tHTMLMediaElement",
			"volume"
		],
		[
			"src: DOMString\tHTMLMediaElement",
			"src"
		],
		[
			"ended: boolean\tHTMLMediaElement",
			"ended"
		],
		[
			"loop: boolean\tHTMLMediaElement",
			"loop"
		],
		[
			"pause(): void\tHTMLMediaElement",
			"pause()"
		],
		[
			"load(): void\tHTMLMediaElement",
			"load()"
		],
		[
			"play(): void\tHTMLMediaElement",
			"play()"
		]
	]
}