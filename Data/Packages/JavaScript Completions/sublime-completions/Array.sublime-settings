{
	"scope": "source.js",
	"completions": [
		[
			"reduceRight( callbackfn: Function, initialValue?: any ): any\tArray",
			"reduceRight(${1:callbackfn: Function}, ${2:initialValue?: any})"
		],
		[
			"splice( start: int, deleteCount: int, items...: any ): Array\tArray",
			"splice(${1:start: int}, ${2:deleteCount: int}, ${3:items...: any})"
		],
		[
			"reduce( callbackfn: Function, initialValue?: any ): any\tArray",
			"reduce(${1:callbackfn: Function}, ${2:initialValue?: any})"
		],
		[
			"lastIndexOf( searchElement: any, fromIndex?: int ): int\tArray",
			"lastIndexOf(${1:searchElement: any}, ${2:fromIndex?: int})"
		],
		[
			"forEach( callbackfn: Function, thisArg?: any ): Array\tArray",
			"forEach(${1:callbackfn: Function}, ${2:thisArg?: any})"
		],
		[
			"filter( callbackfn: Function, thisArg?: any ): Array\tArray",
			"filter(${1:callbackfn: Function}, ${2:thisArg?: any})"
		],
		[
			"indexOf( searchElement: any, fromIndex?: int ): int\tArray",
			"indexOf(${1:searchElement: any}, ${2:fromIndex?: int})"
		],
		[
			"every( callbackfn: Function, thisArg?: any ): Array\tArray",
			"every(${1:callbackfn: Function}, ${2:thisArg?: any})"
		],
		[
			"some( callbackfn: Function, thisArg?: any ): Array\tArray",
			"some(${1:callbackfn: Function}, ${2:thisArg?: any})"
		],
		[
			"map( callbackfn: Function, thisArg?: any ): Array\tArray",
			"map(${1:callbackfn: Function}, ${2:thisArg?: any})"
		],
		[
			"Array.isArray( arg: any ): static boolean\tArray",
			"Array.isArray(${1:arg: any})"
		],
		[
			"slice( start: int, end: int ): Array\tArray",
			"slice(${1:start: int}, ${2:end: int})"
		],
		[
			"new Array( params...?: any ): Array\tArray",
			"new Array(${1:params...?: any})"
		],
		[
			"isArray( arg: any ): static boolean\tArray",
			"isArray(${1:arg: any})"
		],
		[
			"sort( compareFn: Function ): Array\tArray",
			"sort(${1:compareFn: Function})"
		],
		[
			"join( separator: string ): string\tArray",
			"join(${1:separator: string})"
		],
		[
			"Array( params...?: any ): Array\tArray",
			"Array(${1:params...?: any})"
		],
		[
			"concat( items...: any ): string\tArray",
			"concat(${1:items...: any})"
		],
		[
			"unshift( items...: any ): Array\tArray",
			"unshift(${1:items...: any})"
		],
		[
			"new Array( size: int ): Array\tArray",
			"new Array(${1:size: int})"
		],
		[
			"push( items...: any ): Array\tArray",
			"push(${1:items...: any})"
		],
		[
			"Array( size: int ): Array\tArray",
			"Array(${1:size: int})"
		],
		[
			"toLocaleString(): string\tArray",
			"toLocaleString()"
		],
		[
			"toString(): string\tArray",
			"toString()"
		],
		[
			"reverse(): Array\tArray",
			"reverse()"
		],
		[
			"shift(): Array\tArray",
			"shift()"
		],
		[
			"length: int\tArray",
			"length"
		],
		[
			"pop(): any\tArray",
			"pop()"
		]
	]
}