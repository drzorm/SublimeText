{
	"scope": "source.js",
	"completions": [
		[
			"drawImage( image: CanvasImageSource, dx_sx: unrestricted double, dy_sy: unrestricted double, dw_sw?: unrestricted double, dh_sh?: unrestricted double, dx?: unrestricted double, dy?: unrestricted double, dw?: unrestricted double, dh?: unrestricted double ): void\tCanvasRenderingContext2D",
			"drawImage(${1:image: CanvasImageSource}, ${2:dx_sx: unrestricted double}, ${3:dy_sy: unrestricted double}, ${4:dw_sw?: unrestricted double}, ${5:dh_sh?: unrestricted double}, ${6:dx?: unrestricted double}, ${7:dy?: unrestricted double}, ${8:dw?: unrestricted double}, ${9:dh?: unrestricted double})"
		],
		[
			"ellipse( x: unrestricted double, y: unrestricted double, radiusX: unrestricted double, radiusY: unrestricted double, rotation: unrestricted double, startAngle: unrestricted double, endAngle: unrestricted double, anticlockwise?: boolean ): void\tCanvasRenderingContext2D",
			"ellipse(${1:x: unrestricted double}, ${2:y: unrestricted double}, ${3:radiusX: unrestricted double}, ${4:radiusY: unrestricted double}, ${5:rotation: unrestricted double}, ${6:startAngle: unrestricted double}, ${7:endAngle: unrestricted double}, ${8:anticlockwise?: boolean})"
		],
		[
			"arcTo( x1: unrestricted double, y1: unrestricted double, x2: unrestricted double, y2: unrestricted double, radius: unrestricted double, radiusY?: unrestricted double, rotation?: unrestricted double ): void\tCanvasRenderingContext2D",
			"arcTo(${1:x1: unrestricted double}, ${2:y1: unrestricted double}, ${3:x2: unrestricted double}, ${4:y2: unrestricted double}, ${5:radius: unrestricted double}, ${6:radiusY?: unrestricted double}, ${7:rotation?: unrestricted double})"
		],
		[
			"bezierCurveTo( cp1x: unrestricted double, cp1y: unrestricted double, cp2x: unrestricted double, cp2y: unrestricted double, x: unrestricted double, y: unrestricted double ): void\tCanvasRenderingContext2D",
			"bezierCurveTo(${1:cp1x: unrestricted double}, ${2:cp1y: unrestricted double}, ${3:cp2x: unrestricted double}, ${4:cp2y: unrestricted double}, ${5:x: unrestricted double}, ${6:y: unrestricted double})"
		],
		[
			"arc( x: unrestricted double, y: unrestricted double, radius: unrestricted double, startAngle: unrestricted double, endAngle: unrestricted double, anticlockwise?: boolean ): void\tCanvasRenderingContext2D",
			"arc(${1:x: unrestricted double}, ${2:y: unrestricted double}, ${3:radius: unrestricted double}, ${4:startAngle: unrestricted double}, ${5:endAngle: unrestricted double}, ${6:anticlockwise?: boolean})"
		],
		[
			"setTransform( a: unrestricted double, b: unrestricted double, c: unrestricted double, d: unrestricted double, e: unrestricted double, f: unrestricted double ): void\tCanvasRenderingContext2D",
			"setTransform(${1:a: unrestricted double}, ${2:b: unrestricted double}, ${3:c: unrestricted double}, ${4:d: unrestricted double}, ${5:e: unrestricted double}, ${6:f: unrestricted double})"
		],
		[
			"transform( a: unrestricted double, b: unrestricted double, c: unrestricted double, d: unrestricted double, e: unrestricted double, f: unrestricted double ): void\tCanvasRenderingContext2D",
			"transform(${1:a: unrestricted double}, ${2:b: unrestricted double}, ${3:c: unrestricted double}, ${4:d: unrestricted double}, ${5:e: unrestricted double}, ${6:f: unrestricted double})"
		],
		[
			"putImageData( imagedata: ImageData, dx: double, dy: double, dirtyX?: double, dirtyY?: double, dirtyWidth?: double, dirtyHeight?: double ): void\tCanvasRenderingContext2D",
			"putImageData(${1:imagedata: ImageData}, ${2:dx: double}, ${3:dy: double}, ${4:dirtyX?: double}, ${5:dirtyY?: double}, ${6:dirtyWidth?: double}, ${7:dirtyHeight?: double})"
		],
		[
			"quadraticCurveTo( cpx: unrestricted double, cpy: unrestricted double, x: unrestricted double, y: unrestricted double ): void\tCanvasRenderingContext2D",
			"quadraticCurveTo(${1:cpx: unrestricted double}, ${2:cpy: unrestricted double}, ${3:x: unrestricted double}, ${4:y: unrestricted double})"
		],
		[
			"strokeText( text: DOMString, x: unrestricted double, y: unrestricted double, maxWidth?: unrestricted double ): void\tCanvasRenderingContext2D",
			"strokeText(${1:text: DOMString}, ${2:x: unrestricted double}, ${3:y: unrestricted double}, ${4:maxWidth?: unrestricted double})"
		],
		[
			"strokeRect( x: unrestricted double, y: unrestricted double, w: unrestricted double, h: unrestricted double ): void\tCanvasRenderingContext2D",
			"strokeRect(${1:x: unrestricted double}, ${2:y: unrestricted double}, ${3:w: unrestricted double}, ${4:h: unrestricted double})"
		],
		[
			"clearRect( x: unrestricted double, y: unrestricted double, w: unrestricted double, h: unrestricted double ): void\tCanvasRenderingContext2D",
			"clearRect(${1:x: unrestricted double}, ${2:y: unrestricted double}, ${3:w: unrestricted double}, ${4:h: unrestricted double})"
		],
		[
			"fillText( text: DOMString, x: unrestricted double, y: unrestricted double, maxWidth?: unrestricted double ): void\tCanvasRenderingContext2D",
			"fillText(${1:text: DOMString}, ${2:x: unrestricted double}, ${3:y: unrestricted double}, ${4:maxWidth?: unrestricted double})"
		],
		[
			"fillRect( x: unrestricted double, y: unrestricted double, w: unrestricted double, h: unrestricted double ): void\tCanvasRenderingContext2D",
			"fillRect(${1:x: unrestricted double}, ${2:y: unrestricted double}, ${3:w: unrestricted double}, ${4:h: unrestricted double})"
		],
		[
			"createRadialGradient( x0: double, y0: double, r0: double, x1: double, y1: double, r1: double ): CanvasGradient\tCanvasRenderingContext2D",
			"createRadialGradient(${1:x0: double}, ${2:y0: double}, ${3:r0: double}, ${4:x1: double}, ${5:y1: double}, ${6:r1: double})"
		],
		[
			"isPointInPath( x_path: any, y_x: unrestricted double, fillRule_y?: any, fillRule?: CanvasFillRule ): boolean\tCanvasRenderingContext2D",
			"isPointInPath(${1:x_path: any}, ${2:y_x: unrestricted double}, ${3:fillRule_y?: any}, ${4:fillRule?: CanvasFillRule})"
		],
		[
			"rect( x: unrestricted double, y: unrestricted double, w: unrestricted double, h: unrestricted double ): void\tCanvasRenderingContext2D",
			"rect(${1:x: unrestricted double}, ${2:y: unrestricted double}, ${3:w: unrestricted double}, ${4:h: unrestricted double})"
		],
		[
			"new CanvasRenderingContext2D( width?: unsigned long, height: unsigned long ): CanvasRenderingContext2D\tCanvasRenderingContext2D",
			"new CanvasRenderingContext2D(${1:width?: unsigned long}, ${2:height: unsigned long})"
		],
		[
			"CanvasRenderingContext2D( width?: unsigned long, height: unsigned long ): CanvasRenderingContext2D\tCanvasRenderingContext2D",
			"CanvasRenderingContext2D(${1:width?: unsigned long}, ${2:height: unsigned long})"
		],
		[
			"isPointInStroke( x_path: any, y_x: unrestricted double, y?: unrestricted double ): boolean\tCanvasRenderingContext2D",
			"isPointInStroke(${1:x_path: any}, ${2:y_x: unrestricted double}, ${3:y?: unrestricted double})"
		],
		[
			"createLinearGradient( x0: double, y0: double, x1: double, y1: double ): CanvasGradient\tCanvasRenderingContext2D",
			"createLinearGradient(${1:x0: double}, ${2:y0: double}, ${3:x1: double}, ${4:y1: double})"
		],
		[
			"createPattern( image: CanvasImageSource, repetition: DOMString ): CanvasPattern\tCanvasRenderingContext2D",
			"createPattern(${1:image: CanvasImageSource}, ${2:repetition: DOMString})"
		],
		[
			"getImageData( sx: double, sy: double, sw: double, sh: double ): ImageData\tCanvasRenderingContext2D",
			"getImageData(${1:sx: double}, ${2:sy: double}, ${3:sw: double}, ${4:sh: double})"
		],
		[
			"drawCustomFocusRing( element_path: any, element?: Element ): boolean\tCanvasRenderingContext2D",
			"drawCustomFocusRing(${1:element_path: any}, ${2:element?: Element})"
		],
		[
			"drawSystemFocusRing( element_path: any, element?: Element ): void\tCanvasRenderingContext2D",
			"drawSystemFocusRing(${1:element_path: any}, ${2:element?: Element})"
		],
		[
			"translate( x: unrestricted double, y: unrestricted double ): void\tCanvasRenderingContext2D",
			"translate(${1:x: unrestricted double}, ${2:y: unrestricted double})"
		],
		[
			"moveTo( x: unrestricted double, y: unrestricted double ): void\tCanvasRenderingContext2D",
			"moveTo(${1:x: unrestricted double}, ${2:y: unrestricted double})"
		],
		[
			"lineTo( x: unrestricted double, y: unrestricted double ): void\tCanvasRenderingContext2D",
			"lineTo(${1:x: unrestricted double}, ${2:y: unrestricted double})"
		],
		[
			"scale( x: unrestricted double, y: unrestricted double ): void\tCanvasRenderingContext2D",
			"scale(${1:x: unrestricted double}, ${2:y: unrestricted double})"
		],
		[
			"clip( fillRule_path?: any, fillRule?: CanvasFillRule ): void\tCanvasRenderingContext2D",
			"clip(${1:fillRule_path?: any}, ${2:fillRule?: CanvasFillRule})"
		],
		[
			"setLineDash( segments: sequence<unrestricted double> ): void\tCanvasRenderingContext2D",
			"setLineDash(${1:segments: sequence<unrestricted double>})"
		],
		[
			"fill( fillRule_path?: any, fillRule?: CanvasFillRule ): void\tCanvasRenderingContext2D",
			"fill(${1:fillRule_path?: any}, ${2:fillRule?: CanvasFillRule})"
		],
		[
			"createImageData( sw_imagedata: any, sh?: double ): ImageData\tCanvasRenderingContext2D",
			"createImageData(${1:sw_imagedata: any}, ${2:sh?: double})"
		],
		[
			"strokeStyle: (DOMString or CanvasGradient or CanvasPattern)\tCanvasRenderingContext2D",
			"strokeStyle"
		],
		[
			"fillStyle: (DOMString or CanvasGradient or CanvasPattern)\tCanvasRenderingContext2D",
			"fillStyle"
		],
		[
			"addHitRegion( options?: HitRegionOptions ): void\tCanvasRenderingContext2D",
			"addHitRegion(${1:options?: HitRegionOptions})"
		],
		[
			"getLineDash(): sequence<unrestricted double>\tCanvasRenderingContext2D",
			"getLineDash()"
		],
		[
			"measureText( text: DOMString ): TextMetrics\tCanvasRenderingContext2D",
			"measureText(${1:text: DOMString})"
		],
		[
			"rotate( angle: unrestricted double ): void\tCanvasRenderingContext2D",
			"rotate(${1:angle: unrestricted double})"
		],
		[
			"scrollPathIntoView( path?: Path2D ): void\tCanvasRenderingContext2D",
			"scrollPathIntoView(${1:path?: Path2D})"
		],
		[
			"removeHitRegion( id: DOMString ): void\tCanvasRenderingContext2D",
			"removeHitRegion(${1:id: DOMString})"
		],
		[
			"globalCompositeOperation: DOMString\tCanvasRenderingContext2D",
			"globalCompositeOperation"
		],
		[
			"lineDashOffset: unrestricted double\tCanvasRenderingContext2D",
			"lineDashOffset"
		],
		[
			"shadowOffsetX: unrestricted double\tCanvasRenderingContext2D",
			"shadowOffsetX"
		],
		[
			"shadowOffsetY: unrestricted double\tCanvasRenderingContext2D",
			"shadowOffsetY"
		],
		[
			"globalAlpha: unrestricted double\tCanvasRenderingContext2D",
			"globalAlpha"
		],
		[
			"miterLimit: unrestricted double\tCanvasRenderingContext2D",
			"miterLimit"
		],
		[
			"shadowBlur: unrestricted double\tCanvasRenderingContext2D",
			"shadowBlur"
		],
		[
			"imageSmoothingEnabled: boolean\tCanvasRenderingContext2D",
			"imageSmoothingEnabled"
		],
		[
			"lineWidth: unrestricted double\tCanvasRenderingContext2D",
			"lineWidth"
		],
		[
			"stroke( path?: Path2D ): void\tCanvasRenderingContext2D",
			"stroke(${1:path?: Path2D})"
		],
		[
			"currentTransform: SVGMatrix\tCanvasRenderingContext2D",
			"currentTransform"
		],
		[
			"canvas: HTMLCanvasElement\tCanvasRenderingContext2D",
			"canvas"
		],
		[
			"textBaseline: DOMString\tCanvasRenderingContext2D",
			"textBaseline"
		],
		[
			"shadowColor: DOMString\tCanvasRenderingContext2D",
			"shadowColor"
		],
		[
			"resetTransform(): void\tCanvasRenderingContext2D",
			"resetTransform()"
		],
		[
			"height: unsigned long\tCanvasRenderingContext2D",
			"height"
		],
		[
			"textAlign: DOMString\tCanvasRenderingContext2D",
			"textAlign"
		],
		[
			"width: unsigned long\tCanvasRenderingContext2D",
			"width"
		],
		[
			"direction: DOMString\tCanvasRenderingContext2D",
			"direction"
		],
		[
			"lineJoin: DOMString\tCanvasRenderingContext2D",
			"lineJoin"
		],
		[
			"lineCap: DOMString\tCanvasRenderingContext2D",
			"lineCap"
		],
		[
			"beginPath(): void\tCanvasRenderingContext2D",
			"beginPath()"
		],
		[
			"resetClip(): void\tCanvasRenderingContext2D",
			"resetClip()"
		],
		[
			"closePath(): void\tCanvasRenderingContext2D",
			"closePath()"
		],
		[
			"restore(): void\tCanvasRenderingContext2D",
			"restore()"
		],
		[
			"font: DOMString\tCanvasRenderingContext2D",
			"font"
		],
		[
			"commit(): void\tCanvasRenderingContext2D",
			"commit()"
		],
		[
			"save(): void\tCanvasRenderingContext2D",
			"save()"
		]
	]
}