{
	"scope": "source.js",
	"completions": [
		[
			"readAsText( blob: Blob, label?: DOMString ): void\tFileReader",
			"readAsText(${1:blob: Blob}, ${2:label?: DOMString})"
		],
		[
			"readAsArrayBuffer( blob: Blob ): void\tFileReader",
			"readAsArrayBuffer(${1:blob: Blob})"
		],
		[
			"result: (DOMString or ArrayBuffer)\tFileReader",
			"result"
		],
		[
			"readAsDataURL( blob: Blob ): void\tFileReader",
			"readAsDataURL(${1:blob: Blob})"
		],
		[
			"LOADING: const unsigned short\tFileReader",
			"LOADING"
		],
		[
			"new FileReader(): FileReader\tFileReader",
			"new FileReader()"
		],
		[
			"EMPTY: const unsigned short\tFileReader",
			"EMPTY"
		],
		[
			"DONE: const unsigned short\tFileReader",
			"DONE"
		],
		[
			"readyState: unsigned short\tFileReader",
			"readyState"
		],
		[
			"onloadstart: EventHandler\tFileReader",
			"onloadstart"
		],
		[
			"FileReader(): FileReader\tFileReader",
			"FileReader()"
		],
		[
			"onprogress: EventHandler\tFileReader",
			"onprogress"
		],
		[
			"onloadend: EventHandler\tFileReader",
			"onloadend"
		],
		[
			"onerror: EventHandler\tFileReader",
			"onerror"
		],
		[
			"onabort: EventHandler\tFileReader",
			"onabort"
		],
		[
			"onload: EventHandler\tFileReader",
			"onload"
		],
		[
			"error: DOMError\tFileReader",
			"error"
		],
		[
			"abort(): void\tFileReader",
			"abort()"
		]
	]
}