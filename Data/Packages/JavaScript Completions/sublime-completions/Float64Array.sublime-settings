{
	"scope": "source.js",
	"completions": [
		[
			"new Float64Array( buffer: ArrayBuffer, byteOffset?: unsigned long, length?: unsigned long ): Float64Array\tFloat64Array",
			"new Float64Array(${1:buffer: ArrayBuffer}, ${2:byteOffset?: unsigned long}, ${3:length?: unsigned long})"
		],
		[
			"Float64Array( buffer: ArrayBuffer, byteOffset?: unsigned long, length?: unsigned long ): Float64Array\tFloat64Array",
			"Float64Array(${1:buffer: ArrayBuffer}, ${2:byteOffset?: unsigned long}, ${3:length?: unsigned long})"
		],
		[
			"new Float64Array( array: unrestricted double[] ): Float64Array\tFloat64Array",
			"new Float64Array(${1:array: unrestricted double[]})"
		],
		[
			"Float64Array( array: unrestricted double[] ): Float64Array\tFloat64Array",
			"Float64Array(${1:array: unrestricted double[]})"
		],
		[
			"new Float64Array( length: unsigned long ): Float64Array\tFloat64Array",
			"new Float64Array(${1:length: unsigned long})"
		],
		[
			"new Float64Array( array: Float64Array ): Float64Array\tFloat64Array",
			"new Float64Array(${1:array: Float64Array})"
		],
		[
			"Float64Array( length: unsigned long ): Float64Array\tFloat64Array",
			"Float64Array(${1:length: unsigned long})"
		],
		[
			"Float64Array( array: Float64Array ): Float64Array\tFloat64Array",
			"Float64Array(${1:array: Float64Array})"
		],
		[
			"set( index_array: any, value_offset?: any ): void\tFloat64Array",
			"set(${1:index_array: any}, ${2:value_offset?: any})"
		],
		[
			"subarray( start: long, end: long ): Float64Array\tFloat64Array",
			"subarray(${1:start: long}, ${2:end: long})"
		],
		[
			"get( index: unsigned long ): unrestricted double\tFloat64Array",
			"get(${1:index: unsigned long})"
		],
		[
			"BYTES_PER_ELEMENT: const long\tFloat64Array",
			"BYTES_PER_ELEMENT"
		],
		[
			"byteOffset: unsigned long\tFloat64Array",
			"byteOffset"
		],
		[
			"byteLength: unsigned long\tFloat64Array",
			"byteLength"
		],
		[
			"length: unsigned long\tFloat64Array",
			"length"
		],
		[
			"buffer: ArrayBuffer\tFloat64Array",
			"buffer"
		]
	]
}