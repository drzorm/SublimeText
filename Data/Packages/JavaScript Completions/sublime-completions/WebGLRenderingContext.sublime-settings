{
	"scope": "source.js",
	"completions": [
		[
			"texImage2D( target: GLenum, level: GLint, internalformat: GLenum, width_format: any, height_type: any, border_pixels_image_canvas_video: any, format?: GLenum, type?: GLenum, pixels?: ArrayBufferView ): void\tWebGLRenderingContext",
			"texImage2D(${1:target: GLenum}, ${2:level: GLint}, ${3:internalformat: GLenum}, ${4:width_format: any}, ${5:height_type: any}, ${6:border_pixels_image_canvas_video: any}, ${7:format?: GLenum}, ${8:type?: GLenum}, ${9:pixels?: ArrayBufferView})"
		],
		[
			"texSubImage2D( target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width_format: any, height_type: any, format_pixels_image_canvas_video: any, type?: GLenum, pixels?: ArrayBufferView ): void\tWebGLRenderingContext",
			"texSubImage2D(${1:target: GLenum}, ${2:level: GLint}, ${3:xoffset: GLint}, ${4:yoffset: GLint}, ${5:width_format: any}, ${6:height_type: any}, ${7:format_pixels_image_canvas_video: any}, ${8:type?: GLenum}, ${9:pixels?: ArrayBufferView})"
		],
		[
			"compressedTexSubImage2D( target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, data: ArrayBufferView ): void\tWebGLRenderingContext",
			"compressedTexSubImage2D(${1:target: GLenum}, ${2:level: GLint}, ${3:xoffset: GLint}, ${4:yoffset: GLint}, ${5:width: GLsizei}, ${6:height: GLsizei}, ${7:format: GLenum}, ${8:data: ArrayBufferView})"
		],
		[
			"compressedTexImage2D( target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, data: ArrayBufferView ): void\tWebGLRenderingContext",
			"compressedTexImage2D(${1:target: GLenum}, ${2:level: GLint}, ${3:internalformat: GLenum}, ${4:width: GLsizei}, ${5:height: GLsizei}, ${6:border: GLint}, ${7:data: ArrayBufferView})"
		],
		[
			"copyTexImage2D( target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint ): void\tWebGLRenderingContext",
			"copyTexImage2D(${1:target: GLenum}, ${2:level: GLint}, ${3:internalformat: GLenum}, ${4:x: GLint}, ${5:y: GLint}, ${6:width: GLsizei}, ${7:height: GLsizei}, ${8:border: GLint})"
		],
		[
			"copyTexSubImage2D( target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei ): void\tWebGLRenderingContext",
			"copyTexSubImage2D(${1:target: GLenum}, ${2:level: GLint}, ${3:xoffset: GLint}, ${4:yoffset: GLint}, ${5:x: GLint}, ${6:y: GLint}, ${7:width: GLsizei}, ${8:height: GLsizei})"
		],
		[
			"framebufferRenderbuffer( target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: WebGLRenderbuffer ): void\tWebGLRenderingContext",
			"framebufferRenderbuffer(${1:target: GLenum}, ${2:attachment: GLenum}, ${3:renderbuffertarget: GLenum}, ${4:renderbuffer: WebGLRenderbuffer})"
		],
		[
			"readPixels( x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView ): void\tWebGLRenderingContext",
			"readPixels(${1:x: GLint}, ${2:y: GLint}, ${3:width: GLsizei}, ${4:height: GLsizei}, ${5:format: GLenum}, ${6:type: GLenum}, ${7:pixels: ArrayBufferView})"
		],
		[
			"vertexAttribPointer( indx: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr ): void\tWebGLRenderingContext",
			"vertexAttribPointer(${1:indx: GLuint}, ${2:size: GLint}, ${3:type: GLenum}, ${4:normalized: GLboolean}, ${5:stride: GLsizei}, ${6:offset: GLintptr})"
		],
		[
			"framebufferTexture2D( target: GLenum, attachment: GLenum, textarget: GLenum, texture: WebGLTexture, level: GLint ): void\tWebGLRenderingContext",
			"framebufferTexture2D(${1:target: GLenum}, ${2:attachment: GLenum}, ${3:textarget: GLenum}, ${4:texture: WebGLTexture}, ${5:level: GLint})"
		],
		[
			"renderbufferStorage( target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei ): void\tWebGLRenderingContext",
			"renderbufferStorage(${1:target: GLenum}, ${2:internalformat: GLenum}, ${3:width: GLsizei}, ${4:height: GLsizei})"
		],
		[
			"uniform4f( location: WebGLUniformLocation, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat ): void\tWebGLRenderingContext",
			"uniform4f(${1:location: WebGLUniformLocation}, ${2:x: GLfloat}, ${3:y: GLfloat}, ${4:z: GLfloat}, ${5:w: GLfloat})"
		],
		[
			"getShaderPrecisionFormat( shadertype: GLenum, precisiontype: GLenum ): WebGLShaderPrecisionFormat\tWebGLRenderingContext",
			"getShaderPrecisionFormat(${1:shadertype: GLenum}, ${2:precisiontype: GLenum})"
		],
		[
			"blendFuncSeparate( srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum ): void\tWebGLRenderingContext",
			"blendFuncSeparate(${1:srcRGB: GLenum}, ${2:dstRGB: GLenum}, ${3:srcAlpha: GLenum}, ${4:dstAlpha: GLenum})"
		],
		[
			"getFramebufferAttachmentParameter( target: GLenum, attachment: GLenum, pname: GLenum ): any\tWebGLRenderingContext",
			"getFramebufferAttachmentParameter(${1:target: GLenum}, ${2:attachment: GLenum}, ${3:pname: GLenum})"
		],
		[
			"uniform4i( location: WebGLUniformLocation, x: GLint, y: GLint, z: GLint, w: GLint ): void\tWebGLRenderingContext",
			"uniform4i(${1:location: WebGLUniformLocation}, ${2:x: GLint}, ${3:y: GLint}, ${4:z: GLint}, ${5:w: GLint})"
		],
		[
			"colorMask( red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean ): void\tWebGLRenderingContext",
			"colorMask(${1:red: GLboolean}, ${2:green: GLboolean}, ${3:blue: GLboolean}, ${4:alpha: GLboolean})"
		],
		[
			"uniform3f( location: WebGLUniformLocation, x: GLfloat, y: GLfloat, z: GLfloat ): void\tWebGLRenderingContext",
			"uniform3f(${1:location: WebGLUniformLocation}, ${2:x: GLfloat}, ${3:y: GLfloat}, ${4:z: GLfloat})"
		],
		[
			"vertexAttrib4f( indx: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat ): void\tWebGLRenderingContext",
			"vertexAttrib4f(${1:indx: GLuint}, ${2:x: GLfloat}, ${3:y: GLfloat}, ${4:z: GLfloat}, ${5:w: GLfloat})"
		],
		[
			"stencilOpSeparate( face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum ): void\tWebGLRenderingContext",
			"stencilOpSeparate(${1:face: GLenum}, ${2:fail: GLenum}, ${3:zfail: GLenum}, ${4:zpass: GLenum})"
		],
		[
			"clearColor( red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf ): void\tWebGLRenderingContext",
			"clearColor(${1:red: GLclampf}, ${2:green: GLclampf}, ${3:blue: GLclampf}, ${4:alpha: GLclampf})"
		],
		[
			"blendColor( red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf ): void\tWebGLRenderingContext",
			"blendColor(${1:red: GLclampf}, ${2:green: GLclampf}, ${3:blue: GLclampf}, ${4:alpha: GLclampf})"
		],
		[
			"drawElements( mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr ): void\tWebGLRenderingContext",
			"drawElements(${1:mode: GLenum}, ${2:count: GLsizei}, ${3:type: GLenum}, ${4:offset: GLintptr})"
		],
		[
			"getUniformLocation( program: WebGLProgram, name: DOMString ): WebGLUniformLocation\tWebGLRenderingContext",
			"getUniformLocation(${1:program: WebGLProgram}, ${2:name: DOMString})"
		],
		[
			"bindAttribLocation( program: WebGLProgram, index: GLuint, name: DOMString ): void\tWebGLRenderingContext",
			"bindAttribLocation(${1:program: WebGLProgram}, ${2:index: GLuint}, ${3:name: DOMString})"
		],
		[
			"stencilFuncSeparate( face: GLenum, func: GLenum, ref: GLint, mask: GLuint ): void\tWebGLRenderingContext",
			"stencilFuncSeparate(${1:face: GLenum}, ${2:func: GLenum}, ${3:ref: GLint}, ${4:mask: GLuint})"
		],
		[
			"uniform3i( location: WebGLUniformLocation, x: GLint, y: GLint, z: GLint ): void\tWebGLRenderingContext",
			"uniform3i(${1:location: WebGLUniformLocation}, ${2:x: GLint}, ${3:y: GLint}, ${4:z: GLint})"
		],
		[
			"getActiveUniform( program: WebGLProgram, index: GLuint ): WebGLActiveInfo\tWebGLRenderingContext",
			"getActiveUniform(${1:program: WebGLProgram}, ${2:index: GLuint})"
		],
		[
			"uniformMatrix3fv( location: any, transpose: GLboolean, value: any ): void\tWebGLRenderingContext",
			"uniformMatrix3fv(${1:location: any}, ${2:transpose: GLboolean}, ${3:value: any})"
		],
		[
			"uniformMatrix4fv( location: any, transpose: GLboolean, value: any ): void\tWebGLRenderingContext",
			"uniformMatrix4fv(${1:location: any}, ${2:transpose: GLboolean}, ${3:value: any})"
		],
		[
			"uniform2f( location: WebGLUniformLocation, x: GLfloat, y: GLfloat ): void\tWebGLRenderingContext",
			"uniform2f(${1:location: WebGLUniformLocation}, ${2:x: GLfloat}, ${3:y: GLfloat})"
		],
		[
			"bindRenderbuffer( target: GLenum, renderbuffer: WebGLRenderbuffer ): void\tWebGLRenderingContext",
			"bindRenderbuffer(${1:target: GLenum}, ${2:renderbuffer: WebGLRenderbuffer})"
		],
		[
			"uniformMatrix2fv( location: any, transpose: GLboolean, value: any ): void\tWebGLRenderingContext",
			"uniformMatrix2fv(${1:location: any}, ${2:transpose: GLboolean}, ${3:value: any})"
		],
		[
			"vertexAttrib3f( indx: GLuint, x: GLfloat, y: GLfloat, z: GLfloat ): void\tWebGLRenderingContext",
			"vertexAttrib3f(${1:indx: GLuint}, ${2:x: GLfloat}, ${3:y: GLfloat}, ${4:z: GLfloat})"
		],
		[
			"getUniform( program: WebGLProgram, location: WebGLUniformLocation ): any\tWebGLRenderingContext",
			"getUniform(${1:program: WebGLProgram}, ${2:location: WebGLUniformLocation})"
		],
		[
			"getActiveAttrib( program: WebGLProgram, index: GLuint ): WebGLActiveInfo\tWebGLRenderingContext",
			"getActiveAttrib(${1:program: WebGLProgram}, ${2:index: GLuint})"
		],
		[
			"bindFramebuffer( target: GLenum, framebuffer: WebGLFramebuffer ): void\tWebGLRenderingContext",
			"bindFramebuffer(${1:target: GLenum}, ${2:framebuffer: WebGLFramebuffer})"
		],
		[
			"viewport( x: GLint, y: GLint, width: GLsizei, height: GLsizei ): void\tWebGLRenderingContext",
			"viewport(${1:x: GLint}, ${2:y: GLint}, ${3:width: GLsizei}, ${4:height: GLsizei})"
		],
		[
			"uniform2i( location: WebGLUniformLocation, x: GLint, y: GLint ): void\tWebGLRenderingContext",
			"uniform2i(${1:location: WebGLUniformLocation}, ${2:x: GLint}, ${3:y: GLint})"
		],
		[
			"scissor( x: GLint, y: GLint, width: GLsizei, height: GLsizei ): void\tWebGLRenderingContext",
			"scissor(${1:x: GLint}, ${2:y: GLint}, ${3:width: GLsizei}, ${4:height: GLsizei})"
		],
		[
			"texParameterf( target: GLenum, pname: GLenum, param: GLfloat ): void\tWebGLRenderingContext",
			"texParameterf(${1:target: GLenum}, ${2:pname: GLenum}, ${3:param: GLfloat})"
		],
		[
			"texParameteri( target: GLenum, pname: GLenum, param: GLint ): void\tWebGLRenderingContext",
			"texParameteri(${1:target: GLenum}, ${2:pname: GLenum}, ${3:param: GLint})"
		],
		[
			"getAttachedShaders( program: WebGLProgram ): sequence<WebGLShader>\tWebGLRenderingContext",
			"getAttachedShaders(${1:program: WebGLProgram})"
		],
		[
			"bufferSubData( target: GLenum, offset: GLintptr, data: any ): void\tWebGLRenderingContext",
			"bufferSubData(${1:target: GLenum}, ${2:offset: GLintptr}, ${3:data: any})"
		],
		[
			"getAttribLocation( program: WebGLProgram, name: DOMString ): GLint\tWebGLRenderingContext",
			"getAttribLocation(${1:program: WebGLProgram}, ${2:name: DOMString})"
		],
		[
			"bufferData( target: GLenum, size_data: any, usage: GLenum ): void\tWebGLRenderingContext",
			"bufferData(${1:target: GLenum}, ${2:size_data: any}, ${3:usage: GLenum})"
		],
		[
			"getVertexAttribOffset( index: GLuint, pname: GLenum ): GLsizeiptr\tWebGLRenderingContext",
			"getVertexAttribOffset(${1:index: GLuint}, ${2:pname: GLenum})"
		],
		[
			"blendEquationSeparate( modeRGB: GLenum, modeAlpha: GLenum ): void\tWebGLRenderingContext",
			"blendEquationSeparate(${1:modeRGB: GLenum}, ${2:modeAlpha: GLenum})"
		],
		[
			"detachShader( program: WebGLProgram, shader: WebGLShader ): void\tWebGLRenderingContext",
			"detachShader(${1:program: WebGLProgram}, ${2:shader: WebGLShader})"
		],
		[
			"getProgramParameter( program: WebGLProgram, pname: GLenum ): any\tWebGLRenderingContext",
			"getProgramParameter(${1:program: WebGLProgram}, ${2:pname: GLenum})"
		],
		[
			"attachShader( program: WebGLProgram, shader: WebGLShader ): void\tWebGLRenderingContext",
			"attachShader(${1:program: WebGLProgram}, ${2:shader: WebGLShader})"
		],
		[
			"drawArrays( mode: GLenum, first: GLint, count: GLsizei ): void\tWebGLRenderingContext",
			"drawArrays(${1:mode: GLenum}, ${2:first: GLint}, ${3:count: GLsizei})"
		],
		[
			"getRenderbufferParameter( target: GLenum, pname: GLenum ): any\tWebGLRenderingContext",
			"getRenderbufferParameter(${1:target: GLenum}, ${2:pname: GLenum})"
		],
		[
			"uniform1f( location: WebGLUniformLocation, x: GLfloat ): void\tWebGLRenderingContext",
			"uniform1f(${1:location: WebGLUniformLocation}, ${2:x: GLfloat})"
		],
		[
			"stencilOp( fail: GLenum, zfail: GLenum, zpass: GLenum ): void\tWebGLRenderingContext",
			"stencilOp(${1:fail: GLenum}, ${2:zfail: GLenum}, ${3:zpass: GLenum})"
		],
		[
			"getShaderParameter( shader: WebGLShader, pname: GLenum ): any\tWebGLRenderingContext",
			"getShaderParameter(${1:shader: WebGLShader}, ${2:pname: GLenum})"
		],
		[
			"isRenderbuffer( renderbuffer: WebGLRenderbuffer ): GLboolean\tWebGLRenderingContext",
			"isRenderbuffer(${1:renderbuffer: WebGLRenderbuffer})"
		],
		[
			"shaderSource( shader: WebGLShader, source: DOMString ): void\tWebGLRenderingContext",
			"shaderSource(${1:shader: WebGLShader}, ${2:source: DOMString})"
		],
		[
			"vertexAttrib2f( indx: GLuint, x: GLfloat, y: GLfloat ): void\tWebGLRenderingContext",
			"vertexAttrib2f(${1:indx: GLuint}, ${2:x: GLfloat}, ${3:y: GLfloat})"
		],
		[
			"deleteRenderbuffer( renderbuffer: WebGLRenderbuffer ): void\tWebGLRenderingContext",
			"deleteRenderbuffer(${1:renderbuffer: WebGLRenderbuffer})"
		],
		[
			"uniform1i( location: WebGLUniformLocation, x: GLint ): void\tWebGLRenderingContext",
			"uniform1i(${1:location: WebGLUniformLocation}, ${2:x: GLint})"
		],
		[
			"stencilFunc( func: GLenum, ref: GLint, mask: GLuint ): void\tWebGLRenderingContext",
			"stencilFunc(${1:func: GLenum}, ${2:ref: GLint}, ${3:mask: GLuint})"
		],
		[
			"bindTexture( target: GLenum, texture: WebGLTexture ): void\tWebGLRenderingContext",
			"bindTexture(${1:target: GLenum}, ${2:texture: WebGLTexture})"
		],
		[
			"sampleCoverage( value: GLclampf, invert: GLboolean ): void\tWebGLRenderingContext",
			"sampleCoverage(${1:value: GLclampf}, ${2:invert: GLboolean})"
		],
		[
			"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE"
		],
		[
			"isFramebuffer( framebuffer: WebGLFramebuffer ): GLboolean\tWebGLRenderingContext",
			"isFramebuffer(${1:framebuffer: WebGLFramebuffer})"
		],
		[
			"getBufferParameter( target: GLenum, pname: GLenum ): any\tWebGLRenderingContext",
			"getBufferParameter(${1:target: GLenum}, ${2:pname: GLenum})"
		],
		[
			"deleteFramebuffer( framebuffer: WebGLFramebuffer ): void\tWebGLRenderingContext",
			"deleteFramebuffer(${1:framebuffer: WebGLFramebuffer})"
		],
		[
			"bindBuffer( target: GLenum, buffer: WebGLBuffer ): void\tWebGLRenderingContext",
			"bindBuffer(${1:target: GLenum}, ${2:buffer: WebGLBuffer})"
		],
		[
			"stencilMaskSeparate( face: GLenum, mask: GLuint ): void\tWebGLRenderingContext",
			"stencilMaskSeparate(${1:face: GLenum}, ${2:mask: GLuint})"
		],
		[
			"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT"
		],
		[
			"polygonOffset( factor: GLfloat, units: GLfloat ): void\tWebGLRenderingContext",
			"polygonOffset(${1:factor: GLfloat}, ${2:units: GLfloat})"
		],
		[
			"getProgramInfoLog( program: WebGLProgram ): DOMString\tWebGLRenderingContext",
			"getProgramInfoLog(${1:program: WebGLProgram})"
		],
		[
			"getTexParameter( target: GLenum, pname: GLenum ): any\tWebGLRenderingContext",
			"getTexParameter(${1:target: GLenum}, ${2:pname: GLenum})"
		],
		[
			"getVertexAttrib( index: GLuint, pname: GLenum ): any\tWebGLRenderingContext",
			"getVertexAttrib(${1:index: GLuint}, ${2:pname: GLenum})"
		],
		[
			"blendFunc( sfactor: GLenum, dfactor: GLenum ): void\tWebGLRenderingContext",
			"blendFunc(${1:sfactor: GLenum}, ${2:dfactor: GLenum})"
		],
		[
			"depthRange( zNear: GLclampf, zFar: GLclampf ): void\tWebGLRenderingContext",
			"depthRange(${1:zNear: GLclampf}, ${2:zFar: GLclampf})"
		],
		[
			"vertexAttrib4fv( indx: GLuint, values: any ): void\tWebGLRenderingContext",
			"vertexAttrib4fv(${1:indx: GLuint}, ${2:values: any})"
		],
		[
			"vertexAttrib1fv( indx: GLuint, values: any ): void\tWebGLRenderingContext",
			"vertexAttrib1fv(${1:indx: GLuint}, ${2:values: any})"
		],
		[
			"vertexAttrib3fv( indx: GLuint, values: any ): void\tWebGLRenderingContext",
			"vertexAttrib3fv(${1:indx: GLuint}, ${2:values: any})"
		],
		[
			"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL"
		],
		[
			"vertexAttrib2fv( indx: GLuint, values: any ): void\tWebGLRenderingContext",
			"vertexAttrib2fv(${1:indx: GLuint}, ${2:values: any})"
		],
		[
			"getShaderInfoLog( shader: WebGLShader ): DOMString\tWebGLRenderingContext",
			"getShaderInfoLog(${1:shader: WebGLShader})"
		],
		[
			"getShaderSource( shader: WebGLShader ): DOMString\tWebGLRenderingContext",
			"getShaderSource(${1:shader: WebGLShader})"
		],
		[
			"pixelStorei( pname: GLenum, param: GLint ): void\tWebGLRenderingContext",
			"pixelStorei(${1:pname: GLenum}, ${2:param: GLint})"
		],
		[
			"checkFramebufferStatus( target: GLenum ): GLenum\tWebGLRenderingContext",
			"checkFramebufferStatus(${1:target: GLenum})"
		],
		[
			"vertexAttrib1f( indx: GLuint, x: GLfloat ): void\tWebGLRenderingContext",
			"vertexAttrib1f(${1:indx: GLuint}, ${2:x: GLfloat})"
		],
		[
			"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE"
		],
		[
			"UNPACK_COLORSPACE_CONVERSION_WEBGL: const GLenum\tWebGLRenderingContext",
			"UNPACK_COLORSPACE_CONVERSION_WEBGL"
		],
		[
			"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: const GLenum\tWebGLRenderingContext",
			"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING"
		],
		[
			"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME"
		],
		[
			"FRAMEBUFFER_INCOMPLETE_DIMENSIONS: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_INCOMPLETE_DIMENSIONS"
		],
		[
			"FRAMEBUFFER_INCOMPLETE_ATTACHMENT: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_INCOMPLETE_ATTACHMENT"
		],
		[
			"disableVertexAttribArray( index: GLuint ): void\tWebGLRenderingContext",
			"disableVertexAttribArray(${1:index: GLuint})"
		],
		[
			"getContextAttributes(): WebGLContextAttributes\tWebGLRenderingContext",
			"getContextAttributes()"
		],
		[
			"MAX_COMBINED_TEXTURE_IMAGE_UNITS: const GLenum\tWebGLRenderingContext",
			"MAX_COMBINED_TEXTURE_IMAGE_UNITS"
		],
		[
			"validateProgram( program: WebGLProgram ): void\tWebGLRenderingContext",
			"validateProgram(${1:program: WebGLProgram})"
		],
		[
			"enableVertexAttribArray( index: GLuint ): void\tWebGLRenderingContext",
			"enableVertexAttribArray(${1:index: GLuint})"
		],
		[
			"IMPLEMENTATION_COLOR_READ_FORMAT: const GLenum\tWebGLRenderingContext",
			"IMPLEMENTATION_COLOR_READ_FORMAT"
		],
		[
			"isTexture( texture: WebGLTexture ): GLboolean\tWebGLRenderingContext",
			"isTexture(${1:texture: WebGLTexture})"
		],
		[
			"isProgram( program: WebGLProgram ): GLboolean\tWebGLRenderingContext",
			"isProgram(${1:program: WebGLProgram})"
		],
		[
			"getSupportedExtensions(): sequence<DOMString>\tWebGLRenderingContext",
			"getSupportedExtensions()"
		],
		[
			"UNPACK_PREMULTIPLY_ALPHA_WEBGL: const GLenum\tWebGLRenderingContext",
			"UNPACK_PREMULTIPLY_ALPHA_WEBGL"
		],
		[
			"IMPLEMENTATION_COLOR_READ_TYPE: const GLenum\tWebGLRenderingContext",
			"IMPLEMENTATION_COLOR_READ_TYPE"
		],
		[
			"deleteTexture( texture: WebGLTexture ): void\tWebGLRenderingContext",
			"deleteTexture(${1:texture: WebGLTexture})"
		],
		[
			"MAX_VERTEX_TEXTURE_IMAGE_UNITS: const GLenum\tWebGLRenderingContext",
			"MAX_VERTEX_TEXTURE_IMAGE_UNITS"
		],
		[
			"VERTEX_ATTRIB_ARRAY_NORMALIZED: const GLenum\tWebGLRenderingContext",
			"VERTEX_ATTRIB_ARRAY_NORMALIZED"
		],
		[
			"deleteProgram( program: WebGLProgram ): void\tWebGLRenderingContext",
			"deleteProgram(${1:program: WebGLProgram})"
		],
		[
			"INVALID_FRAMEBUFFER_OPERATION: const GLenum\tWebGLRenderingContext",
			"INVALID_FRAMEBUFFER_OPERATION"
		],
		[
			"STENCIL_BACK_PASS_DEPTH_PASS: const GLenum\tWebGLRenderingContext",
			"STENCIL_BACK_PASS_DEPTH_PASS"
		],
		[
			"STENCIL_BACK_PASS_DEPTH_FAIL: const GLenum\tWebGLRenderingContext",
			"STENCIL_BACK_PASS_DEPTH_FAIL"
		],
		[
			"MAX_FRAGMENT_UNIFORM_VECTORS: const GLenum\tWebGLRenderingContext",
			"MAX_FRAGMENT_UNIFORM_VECTORS"
		],
		[
			"RENDERBUFFER_INTERNAL_FORMAT: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_INTERNAL_FORMAT"
		],
		[
			"isBuffer( buffer: WebGLBuffer ): GLboolean\tWebGLRenderingContext",
			"isBuffer(${1:buffer: WebGLBuffer})"
		],
		[
			"linkProgram( program: WebGLProgram ): void\tWebGLRenderingContext",
			"linkProgram(${1:program: WebGLProgram})"
		],
		[
			"compileShader( shader: WebGLShader ): void\tWebGLRenderingContext",
			"compileShader(${1:shader: WebGLShader})"
		],
		[
			"hint( target: GLenum, mode: GLenum ): void\tWebGLRenderingContext",
			"hint(${1:target: GLenum}, ${2:mode: GLenum})"
		],
		[
			"isShader( shader: WebGLShader ): GLboolean\tWebGLRenderingContext",
			"isShader(${1:shader: WebGLShader})"
		],
		[
			"ELEMENT_ARRAY_BUFFER_BINDING: const GLenum\tWebGLRenderingContext",
			"ELEMENT_ARRAY_BUFFER_BINDING"
		],
		[
			"TEXTURE_CUBE_MAP_POSITIVE_X: const GLenum\tWebGLRenderingContext",
			"TEXTURE_CUBE_MAP_POSITIVE_X"
		],
		[
			"TEXTURE_CUBE_MAP_POSITIVE_Y: const GLenum\tWebGLRenderingContext",
			"TEXTURE_CUBE_MAP_POSITIVE_Y"
		],
		[
			"TEXTURE_CUBE_MAP_POSITIVE_Z: const GLenum\tWebGLRenderingContext",
			"TEXTURE_CUBE_MAP_POSITIVE_Z"
		],
		[
			"uniform3iv( location: any, v: any ): void\tWebGLRenderingContext",
			"uniform3iv(${1:location: any}, ${2:v: any})"
		],
		[
			"uniform3fv( location: any, v: any ): void\tWebGLRenderingContext",
			"uniform3fv(${1:location: any}, ${2:v: any})"
		],
		[
			"deleteBuffer( buffer: WebGLBuffer ): void\tWebGLRenderingContext",
			"deleteBuffer(${1:buffer: WebGLBuffer})"
		],
		[
			"createShader( type: GLenum ): WebGLShader\tWebGLRenderingContext",
			"createShader(${1:type: GLenum})"
		],
		[
			"VERTEX_ATTRIB_ARRAY_POINTER: const GLenum\tWebGLRenderingContext",
			"VERTEX_ATTRIB_ARRAY_POINTER"
		],
		[
			"uniform4fv( location: any, v: any ): void\tWebGLRenderingContext",
			"uniform4fv(${1:location: any}, ${2:v: any})"
		],
		[
			"useProgram( program: WebGLProgram ): void\tWebGLRenderingContext",
			"useProgram(${1:program: WebGLProgram})"
		],
		[
			"uniform2iv( location: any, v: any ): void\tWebGLRenderingContext",
			"uniform2iv(${1:location: any}, ${2:v: any})"
		],
		[
			"uniform1iv( location: any, v: any ): void\tWebGLRenderingContext",
			"uniform1iv(${1:location: any}, ${2:v: any})"
		],
		[
			"TEXTURE_CUBE_MAP_NEGATIVE_Y: const GLenum\tWebGLRenderingContext",
			"TEXTURE_CUBE_MAP_NEGATIVE_Y"
		],
		[
			"uniform1fv( location: any, v: any ): void\tWebGLRenderingContext",
			"uniform1fv(${1:location: any}, ${2:v: any})"
		],
		[
			"deleteShader( shader: WebGLShader ): void\tWebGLRenderingContext",
			"deleteShader(${1:shader: WebGLShader})"
		],
		[
			"uniform2fv( location: any, v: any ): void\tWebGLRenderingContext",
			"uniform2fv(${1:location: any}, ${2:v: any})"
		],
		[
			"TEXTURE_CUBE_MAP_NEGATIVE_Z: const GLenum\tWebGLRenderingContext",
			"TEXTURE_CUBE_MAP_NEGATIVE_Z"
		],
		[
			"uniform4iv( location: any, v: any ): void\tWebGLRenderingContext",
			"uniform4iv(${1:location: any}, ${2:v: any})"
		],
		[
			"VERTEX_ATTRIB_ARRAY_ENABLED: const GLenum\tWebGLRenderingContext",
			"VERTEX_ATTRIB_ARRAY_ENABLED"
		],
		[
			"TEXTURE_CUBE_MAP_NEGATIVE_X: const GLenum\tWebGLRenderingContext",
			"TEXTURE_CUBE_MAP_NEGATIVE_X"
		],
		[
			"VERTEX_ATTRIB_ARRAY_STRIDE: const GLenum\tWebGLRenderingContext",
			"VERTEX_ATTRIB_ARRAY_STRIDE"
		],
		[
			"MAX_VERTEX_UNIFORM_VECTORS: const GLenum\tWebGLRenderingContext",
			"MAX_VERTEX_UNIFORM_VECTORS"
		],
		[
			"COMPRESSED_TEXTURE_FORMATS: const GLenum\tWebGLRenderingContext",
			"COMPRESSED_TEXTURE_FORMATS"
		],
		[
			"createRenderbuffer(): WebGLRenderbuffer\tWebGLRenderingContext",
			"createRenderbuffer()"
		],
		[
			"MAX_CUBE_MAP_TEXTURE_SIZE: const GLenum\tWebGLRenderingContext",
			"MAX_CUBE_MAP_TEXTURE_SIZE"
		],
		[
			"RENDERBUFFER_STENCIL_SIZE: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_STENCIL_SIZE"
		],
		[
			"getExtension( name: DOMString ): object\tWebGLRenderingContext",
			"getExtension(${1:name: DOMString})"
		],
		[
			"VERTEX_ATTRIB_ARRAY_TYPE: const GLenum\tWebGLRenderingContext",
			"VERTEX_ATTRIB_ARRAY_TYPE"
		],
		[
			"ONE_MINUS_CONSTANT_ALPHA: const GLenum\tWebGLRenderingContext",
			"ONE_MINUS_CONSTANT_ALPHA"
		],
		[
			"ONE_MINUS_CONSTANT_COLOR: const GLenum\tWebGLRenderingContext",
			"ONE_MINUS_CONSTANT_COLOR"
		],
		[
			"ALIASED_LINE_WIDTH_RANGE: const GLenum\tWebGLRenderingContext",
			"ALIASED_LINE_WIDTH_RANGE"
		],
		[
			"VERTEX_ATTRIB_ARRAY_SIZE: const GLenum\tWebGLRenderingContext",
			"VERTEX_ATTRIB_ARRAY_SIZE"
		],
		[
			"TEXTURE_BINDING_CUBE_MAP: const GLenum\tWebGLRenderingContext",
			"TEXTURE_BINDING_CUBE_MAP"
		],
		[
			"generateMipmap( target: GLenum ): void\tWebGLRenderingContext",
			"generateMipmap(${1:target: GLenum})"
		],
		[
			"DEPTH_STENCIL_ATTACHMENT: const GLenum\tWebGLRenderingContext",
			"DEPTH_STENCIL_ATTACHMENT"
		],
		[
			"activeTexture( texture: GLenum ): void\tWebGLRenderingContext",
			"activeTexture(${1:texture: GLenum})"
		],
		[
			"ALIASED_POINT_SIZE_RANGE: const GLenum\tWebGLRenderingContext",
			"ALIASED_POINT_SIZE_RANGE"
		],
		[
			"SAMPLE_ALPHA_TO_COVERAGE: const GLenum\tWebGLRenderingContext",
			"SAMPLE_ALPHA_TO_COVERAGE"
		],
		[
			"SHADING_LANGUAGE_VERSION: const GLenum\tWebGLRenderingContext",
			"SHADING_LANGUAGE_VERSION"
		],
		[
			"STENCIL_PASS_DEPTH_FAIL: const GLenum\tWebGLRenderingContext",
			"STENCIL_PASS_DEPTH_FAIL"
		],
		[
			"RENDERBUFFER_GREEN_SIZE: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_GREEN_SIZE"
		],
		[
			"MAX_TEXTURE_IMAGE_UNITS: const GLenum\tWebGLRenderingContext",
			"MAX_TEXTURE_IMAGE_UNITS"
		],
		[
			"RENDERBUFFER_ALPHA_SIZE: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_ALPHA_SIZE"
		],
		[
			"STENCIL_BACK_VALUE_MASK: const GLenum\tWebGLRenderingContext",
			"STENCIL_BACK_VALUE_MASK"
		],
		[
			"FRAMEBUFFER_UNSUPPORTED: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_UNSUPPORTED"
		],
		[
			"createFramebuffer(): WebGLFramebuffer\tWebGLRenderingContext",
			"createFramebuffer()"
		],
		[
			"RENDERBUFFER_DEPTH_SIZE: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_DEPTH_SIZE"
		],
		[
			"STENCIL_PASS_DEPTH_PASS: const GLenum\tWebGLRenderingContext",
			"STENCIL_PASS_DEPTH_PASS"
		],
		[
			"SAMPLE_COVERAGE_INVERT: const GLenum\tWebGLRenderingContext",
			"SAMPLE_COVERAGE_INVERT"
		],
		[
			"UNSIGNED_SHORT_4_4_4_4: const GLenum\tWebGLRenderingContext",
			"UNSIGNED_SHORT_4_4_4_4"
		],
		[
			"NEAREST_MIPMAP_NEAREST: const GLenum\tWebGLRenderingContext",
			"NEAREST_MIPMAP_NEAREST"
		],
		[
			"STENCIL_BACK_WRITEMASK: const GLenum\tWebGLRenderingContext",
			"STENCIL_BACK_WRITEMASK"
		],
		[
			"RENDERBUFFER_BLUE_SIZE: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_BLUE_SIZE"
		],
		[
			"UNSIGNED_SHORT_5_5_5_1: const GLenum\tWebGLRenderingContext",
			"UNSIGNED_SHORT_5_5_5_1"
		],
		[
			"BROWSER_DEFAULT_WEBGL: const GLenum\tWebGLRenderingContext",
			"BROWSER_DEFAULT_WEBGL"
		],
		[
			"LINEAR_MIPMAP_NEAREST: const GLenum\tWebGLRenderingContext",
			"LINEAR_MIPMAP_NEAREST"
		],
		[
			"MAX_RENDERBUFFER_SIZE: const GLenum\tWebGLRenderingContext",
			"MAX_RENDERBUFFER_SIZE"
		],
		[
			"CURRENT_VERTEX_ATTRIB: const GLenum\tWebGLRenderingContext",
			"CURRENT_VERTEX_ATTRIB"
		],
		[
			"FUNC_REVERSE_SUBTRACT: const GLenum\tWebGLRenderingContext",
			"FUNC_REVERSE_SUBTRACT"
		],
		[
			"SAMPLE_COVERAGE_VALUE: const GLenum\tWebGLRenderingContext",
			"SAMPLE_COVERAGE_VALUE"
		],
		[
			"isEnabled( cap: GLenum ): GLboolean\tWebGLRenderingContext",
			"isEnabled(${1:cap: GLenum})"
		],
		[
			"NEAREST_MIPMAP_LINEAR: const GLenum\tWebGLRenderingContext",
			"NEAREST_MIPMAP_LINEAR"
		],
		[
			"RENDERBUFFER_RED_SIZE: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_RED_SIZE"
		],
		[
			"clearDepth( depth: GLclampf ): void\tWebGLRenderingContext",
			"clearDepth(${1:depth: GLclampf})"
		],
		[
			"POLYGON_OFFSET_FACTOR: const GLenum\tWebGLRenderingContext",
			"POLYGON_OFFSET_FACTOR"
		],
		[
			"blendEquation( mode: GLenum ): void\tWebGLRenderingContext",
			"blendEquation(${1:mode: GLenum})"
		],
		[
			"RENDERBUFFER_BINDING: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_BINDING"
		],
		[
			"FRAMEBUFFER_COMPLETE: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_COMPLETE"
		],
		[
			"BLEND_EQUATION_ALPHA: const GLenum\tWebGLRenderingContext",
			"BLEND_EQUATION_ALPHA"
		],
		[
			"LINEAR_MIPMAP_LINEAR: const GLenum\tWebGLRenderingContext",
			"LINEAR_MIPMAP_LINEAR"
		],
		[
			"depthMask( flag: GLboolean ): void\tWebGLRenderingContext",
			"depthMask(${1:flag: GLboolean})"
		],
		[
			"getParameter( pname: GLenum ): any\tWebGLRenderingContext",
			"getParameter(${1:pname: GLenum})"
		],
		[
			"ARRAY_BUFFER_BINDING: const GLenum\tWebGLRenderingContext",
			"ARRAY_BUFFER_BINDING"
		],
		[
			"POLYGON_OFFSET_UNITS: const GLenum\tWebGLRenderingContext",
			"POLYGON_OFFSET_UNITS"
		],
		[
			"GENERATE_MIPMAP_HINT: const GLenum\tWebGLRenderingContext",
			"GENERATE_MIPMAP_HINT"
		],
		[
			"UNSIGNED_SHORT_5_6_5: const GLenum\tWebGLRenderingContext",
			"UNSIGNED_SHORT_5_6_5"
		],
		[
			"ELEMENT_ARRAY_BUFFER: const GLenum\tWebGLRenderingContext",
			"ELEMENT_ARRAY_BUFFER"
		],
		[
			"ONE_MINUS_DST_COLOR: const GLenum\tWebGLRenderingContext",
			"ONE_MINUS_DST_COLOR"
		],
		[
			"ONE_MINUS_SRC_COLOR: const GLenum\tWebGLRenderingContext",
			"ONE_MINUS_SRC_COLOR"
		],
		[
			"RENDERBUFFER_HEIGHT: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_HEIGHT"
		],
		[
			"STENCIL_CLEAR_VALUE: const GLenum\tWebGLRenderingContext",
			"STENCIL_CLEAR_VALUE"
		],
		[
			"lineWidth( width: GLfloat ): void\tWebGLRenderingContext",
			"lineWidth(${1:width: GLfloat})"
		],
		[
			"ONE_MINUS_SRC_ALPHA: const GLenum\tWebGLRenderingContext",
			"ONE_MINUS_SRC_ALPHA"
		],
		[
			"stencilMask( mask: GLuint ): void\tWebGLRenderingContext",
			"stencilMask(${1:mask: GLuint})"
		],
		[
			"MAX_VARYING_VECTORS: const GLenum\tWebGLRenderingContext",
			"MAX_VARYING_VECTORS"
		],
		[
			"ONE_MINUS_DST_ALPHA: const GLenum\tWebGLRenderingContext",
			"ONE_MINUS_DST_ALPHA"
		],
		[
			"FRAMEBUFFER_BINDING: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER_BINDING"
		],
		[
			"UNPACK_FLIP_Y_WEBGL: const GLenum\tWebGLRenderingContext",
			"UNPACK_FLIP_Y_WEBGL"
		],
		[
			"POLYGON_OFFSET_FILL: const GLenum\tWebGLRenderingContext",
			"POLYGON_OFFSET_FILL"
		],
		[
			"STENCIL_BUFFER_BIT: const GLenum\tWebGLRenderingContext",
			"STENCIL_BUFFER_BIT"
		],
		[
			"STENCIL_VALUE_MASK: const GLenum\tWebGLRenderingContext",
			"STENCIL_VALUE_MASK"
		],
		[
			"TEXTURE_MAG_FILTER: const GLenum\tWebGLRenderingContext",
			"TEXTURE_MAG_FILTER"
		],
		[
			"MAX_VERTEX_ATTRIBS: const GLenum\tWebGLRenderingContext",
			"MAX_VERTEX_ATTRIBS"
		],
		[
			"CONTEXT_LOST_WEBGL: const GLenum\tWebGLRenderingContext",
			"CONTEXT_LOST_WEBGL"
		],
		[
			"TEXTURE_MIN_FILTER: const GLenum\tWebGLRenderingContext",
			"TEXTURE_MIN_FILTER"
		],
		[
			"BLEND_EQUATION_RGB: const GLenum\tWebGLRenderingContext",
			"BLEND_EQUATION_RGB"
		],
		[
			"STENCIL_ATTACHMENT: const GLenum\tWebGLRenderingContext",
			"STENCIL_ATTACHMENT"
		],
		[
			"RENDERBUFFER_WIDTH: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER_WIDTH"
		],
		[
			"SRC_ALPHA_SATURATE: const GLenum\tWebGLRenderingContext",
			"SRC_ALPHA_SATURATE"
		],
		[
			"TEXTURE_BINDING_2D: const GLenum\tWebGLRenderingContext",
			"TEXTURE_BINDING_2D"
		],
		[
			"clear( mask: GLbitfield ): void\tWebGLRenderingContext",
			"clear(${1:mask: GLbitfield})"
		],
		[
			"COLOR_CLEAR_VALUE: const GLenum\tWebGLRenderingContext",
			"COLOR_CLEAR_VALUE"
		],
		[
			"STENCIL_WRITEMASK: const GLenum\tWebGLRenderingContext",
			"STENCIL_WRITEMASK"
		],
		[
			"MAX_VIEWPORT_DIMS: const GLenum\tWebGLRenderingContext",
			"MAX_VIEWPORT_DIMS"
		],
		[
			"DEPTH_COMPONENT16: const GLenum\tWebGLRenderingContext",
			"DEPTH_COMPONENT16"
		],
		[
			"COLOR_ATTACHMENT0: const GLenum\tWebGLRenderingContext",
			"COLOR_ATTACHMENT0"
		],
		[
			"INVALID_OPERATION: const GLenum\tWebGLRenderingContext",
			"INVALID_OPERATION"
		],
		[
			"depthFunc( func: GLenum ): void\tWebGLRenderingContext",
			"depthFunc(${1:func: GLenum})"
		],
		[
			"STENCIL_BACK_FAIL: const GLenum\tWebGLRenderingContext",
			"STENCIL_BACK_FAIL"
		],
		[
			"STENCIL_BACK_FUNC: const GLenum\tWebGLRenderingContext",
			"STENCIL_BACK_FUNC"
		],
		[
			"ACTIVE_ATTRIBUTES: const GLenum\tWebGLRenderingContext",
			"ACTIVE_ATTRIBUTES"
		],
		[
			"DEPTH_CLEAR_VALUE: const GLenum\tWebGLRenderingContext",
			"DEPTH_CLEAR_VALUE"
		],
		[
			"frontFace( mode: GLenum ): void\tWebGLRenderingContext",
			"frontFace(${1:mode: GLenum})"
		],
		[
			"clearStencil( s: GLint ): void\tWebGLRenderingContext",
			"clearStencil(${1:s: GLint})"
		],
		[
			"STENCIL_BACK_REF: const GLenum\tWebGLRenderingContext",
			"STENCIL_BACK_REF"
		],
		[
			"MAX_TEXTURE_SIZE: const GLenum\tWebGLRenderingContext",
			"MAX_TEXTURE_SIZE"
		],
		[
			"UNPACK_ALIGNMENT: const GLenum\tWebGLRenderingContext",
			"UNPACK_ALIGNMENT"
		],
		[
			"COLOR_BUFFER_BIT: const GLenum\tWebGLRenderingContext",
			"COLOR_BUFFER_BIT"
		],
		[
			"ATTACHED_SHADERS: const GLenum\tWebGLRenderingContext",
			"ATTACHED_SHADERS"
		],
		[
			"cullFace( mode: GLenum ): void\tWebGLRenderingContext",
			"cullFace(${1:mode: GLenum})"
		],
		[
			"TEXTURE_CUBE_MAP: const GLenum\tWebGLRenderingContext",
			"TEXTURE_CUBE_MAP"
		],
		[
			"DEPTH_ATTACHMENT: const GLenum\tWebGLRenderingContext",
			"DEPTH_ATTACHMENT"
		],
		[
			"DEPTH_BUFFER_BIT: const GLenum\tWebGLRenderingContext",
			"DEPTH_BUFFER_BIT"
		],
		[
			"ACTIVE_UNIFORMS: const GLenum\tWebGLRenderingContext",
			"ACTIVE_UNIFORMS"
		],
		[
			"DEPTH_COMPONENT: const GLenum\tWebGLRenderingContext",
			"DEPTH_COMPONENT"
		],
		[
			"BLEND_DST_ALPHA: const GLenum\tWebGLRenderingContext",
			"BLEND_DST_ALPHA"
		],
		[
			"createProgram(): WebGLProgram\tWebGLRenderingContext",
			"createProgram()"
		],
		[
			"FRAGMENT_SHADER: const GLenum\tWebGLRenderingContext",
			"FRAGMENT_SHADER"
		],
		[
			"CURRENT_PROGRAM: const GLenum\tWebGLRenderingContext",
			"CURRENT_PROGRAM"
		],
		[
			"COLOR_WRITEMASK: const GLenum\tWebGLRenderingContext",
			"COLOR_WRITEMASK"
		],
		[
			"createTexture(): WebGLTexture\tWebGLRenderingContext",
			"createTexture()"
		],
		[
			"MIRRORED_REPEAT: const GLenum\tWebGLRenderingContext",
			"MIRRORED_REPEAT"
		],
		[
			"SAMPLE_COVERAGE: const GLenum\tWebGLRenderingContext",
			"SAMPLE_COVERAGE"
		],
		[
			"BLEND_SRC_ALPHA: const GLenum\tWebGLRenderingContext",
			"BLEND_SRC_ALPHA"
		],
		[
			"LUMINANCE_ALPHA: const GLenum\tWebGLRenderingContext",
			"LUMINANCE_ALPHA"
		],
		[
			"VALIDATE_STATUS: const GLenum\tWebGLRenderingContext",
			"VALIDATE_STATUS"
		],
		[
			"DEPTH_WRITEMASK: const GLenum\tWebGLRenderingContext",
			"DEPTH_WRITEMASK"
		],
		[
			"drawingBufferHeight: GLsizei\tWebGLRenderingContext",
			"drawingBufferHeight"
		],
		[
			"PACK_ALIGNMENT: const GLenum\tWebGLRenderingContext",
			"PACK_ALIGNMENT"
		],
		[
			"TEXTURE_WRAP_S: const GLenum\tWebGLRenderingContext",
			"TEXTURE_WRAP_S"
		],
		[
			"BLEND_EQUATION: const GLenum\tWebGLRenderingContext",
			"BLEND_EQUATION"
		],
		[
			"TRIANGLE_STRIP: const GLenum\tWebGLRenderingContext",
			"TRIANGLE_STRIP"
		],
		[
			"COMPILE_STATUS: const GLenum\tWebGLRenderingContext",
			"COMPILE_STATUS"
		],
		[
			"CONSTANT_ALPHA: const GLenum\tWebGLRenderingContext",
			"CONSTANT_ALPHA"
		],
		[
			"ACTIVE_TEXTURE: const GLenum\tWebGLRenderingContext",
			"ACTIVE_TEXTURE"
		],
		[
			"STENCIL_INDEX8: const GLenum\tWebGLRenderingContext",
			"STENCIL_INDEX8"
		],
		[
			"CONSTANT_COLOR: const GLenum\tWebGLRenderingContext",
			"CONSTANT_COLOR"
		],
		[
			"UNSIGNED_SHORT: const GLenum\tWebGLRenderingContext",
			"UNSIGNED_SHORT"
		],
		[
			"CULL_FACE_MODE: const GLenum\tWebGLRenderingContext",
			"CULL_FACE_MODE"
		],
		[
			"SAMPLE_BUFFERS: const GLenum\tWebGLRenderingContext",
			"SAMPLE_BUFFERS"
		],
		[
			"FRONT_AND_BACK: const GLenum\tWebGLRenderingContext",
			"FRONT_AND_BACK"
		],
		[
			"disable( cap: GLenum ): void\tWebGLRenderingContext",
			"disable(${1:cap: GLenum})"
		],
		[
			"TEXTURE_WRAP_T: const GLenum\tWebGLRenderingContext",
			"TEXTURE_WRAP_T"
		],
		[
			"enable( cap: GLenum ): void\tWebGLRenderingContext",
			"enable(${1:cap: GLenum})"
		],
		[
			"UNSIGNED_BYTE: const GLenum\tWebGLRenderingContext",
			"UNSIGNED_BYTE"
		],
		[
			"VERTEX_SHADER: const GLenum\tWebGLRenderingContext",
			"VERTEX_SHADER"
		],
		[
			"INVALID_VALUE: const GLenum\tWebGLRenderingContext",
			"INVALID_VALUE"
		],
		[
			"SUBPIXEL_BITS: const GLenum\tWebGLRenderingContext",
			"SUBPIXEL_BITS"
		],
		[
			"FUNC_SUBTRACT: const GLenum\tWebGLRenderingContext",
			"FUNC_SUBTRACT"
		],
		[
			"drawingBufferWidth: GLsizei\tWebGLRenderingContext",
			"drawingBufferWidth"
		],
		[
			"STENCIL_INDEX: const GLenum\tWebGLRenderingContext",
			"STENCIL_INDEX"
		],
		[
			"DELETE_STATUS: const GLenum\tWebGLRenderingContext",
			"DELETE_STATUS"
		],
		[
			"CLAMP_TO_EDGE: const GLenum\tWebGLRenderingContext",
			"CLAMP_TO_EDGE"
		],
		[
			"BLEND_SRC_RGB: const GLenum\tWebGLRenderingContext",
			"BLEND_SRC_RGB"
		],
		[
			"createBuffer(): WebGLBuffer\tWebGLRenderingContext",
			"createBuffer()"
		],
		[
			"OUT_OF_MEMORY: const GLenum\tWebGLRenderingContext",
			"OUT_OF_MEMORY"
		],
		[
			"BLEND_DST_RGB: const GLenum\tWebGLRenderingContext",
			"BLEND_DST_RGB"
		],
		[
			"DEPTH_STENCIL: const GLenum\tWebGLRenderingContext",
			"DEPTH_STENCIL"
		],
		[
			"STENCIL_FUNC: const GLenum\tWebGLRenderingContext",
			"STENCIL_FUNC"
		],
		[
			"STENCIL_FAIL: const GLenum\tWebGLRenderingContext",
			"STENCIL_FAIL"
		],
		[
			"DYNAMIC_DRAW: const GLenum\tWebGLRenderingContext",
			"DYNAMIC_DRAW"
		],
		[
			"SCISSOR_TEST: const GLenum\tWebGLRenderingContext",
			"SCISSOR_TEST"
		],
		[
			"STENCIL_TEST: const GLenum\tWebGLRenderingContext",
			"STENCIL_TEST"
		],
		[
			"SAMPLER_CUBE: const GLenum\tWebGLRenderingContext",
			"SAMPLER_CUBE"
		],
		[
			"MEDIUM_FLOAT: const GLenum\tWebGLRenderingContext",
			"MEDIUM_FLOAT"
		],
		[
			"STENCIL_BITS: const GLenum\tWebGLRenderingContext",
			"STENCIL_BITS"
		],
		[
			"ARRAY_BUFFER: const GLenum\tWebGLRenderingContext",
			"ARRAY_BUFFER"
		],
		[
			"TRIANGLE_FAN: const GLenum\tWebGLRenderingContext",
			"TRIANGLE_FAN"
		],
		[
			"UNSIGNED_INT: const GLenum\tWebGLRenderingContext",
			"UNSIGNED_INT"
		],
		[
			"BUFFER_USAGE: const GLenum\tWebGLRenderingContext",
			"BUFFER_USAGE"
		],
		[
			"INVALID_ENUM: const GLenum\tWebGLRenderingContext",
			"INVALID_ENUM"
		],
		[
			"RENDERBUFFER: const GLenum\tWebGLRenderingContext",
			"RENDERBUFFER"
		],
		[
			"SCISSOR_BOX: const GLenum\tWebGLRenderingContext",
			"SCISSOR_BOX"
		],
		[
			"BLEND_COLOR: const GLenum\tWebGLRenderingContext",
			"BLEND_COLOR"
		],
		[
			"DEPTH_RANGE: const GLenum\tWebGLRenderingContext",
			"DEPTH_RANGE"
		],
		[
			"SHADER_TYPE: const GLenum\tWebGLRenderingContext",
			"SHADER_TYPE"
		],
		[
			"STENCIL_REF: const GLenum\tWebGLRenderingContext",
			"STENCIL_REF"
		],
		[
			"STREAM_DRAW: const GLenum\tWebGLRenderingContext",
			"STREAM_DRAW"
		],
		[
			"FRAMEBUFFER: const GLenum\tWebGLRenderingContext",
			"FRAMEBUFFER"
		],
		[
			"canvas: HTMLCanvasElement\tWebGLRenderingContext",
			"canvas"
		],
		[
			"BUFFER_SIZE: const GLenum\tWebGLRenderingContext",
			"BUFFER_SIZE"
		],
		[
			"STATIC_DRAW: const GLenum\tWebGLRenderingContext",
			"STATIC_DRAW"
		],
		[
			"LINK_STATUS: const GLenum\tWebGLRenderingContext",
			"LINK_STATUS"
		],
		[
			"FLOAT_MAT2: const GLenum\tWebGLRenderingContext",
			"FLOAT_MAT2"
		],
		[
			"FRONT_FACE: const GLenum\tWebGLRenderingContext",
			"FRONT_FACE"
		],
		[
			"SAMPLER_2D: const GLenum\tWebGLRenderingContext",
			"SAMPLER_2D"
		],
		[
			"MEDIUM_INT: const GLenum\tWebGLRenderingContext",
			"MEDIUM_INT"
		],
		[
			"DEPTH_BITS: const GLenum\tWebGLRenderingContext",
			"DEPTH_BITS"
		],
		[
			"LINE_WIDTH: const GLenum\tWebGLRenderingContext",
			"LINE_WIDTH"
		],
		[
			"LINE_STRIP: const GLenum\tWebGLRenderingContext",
			"LINE_STRIP"
		],
		[
			"DEPTH_FUNC: const GLenum\tWebGLRenderingContext",
			"DEPTH_FUNC"
		],
		[
			"TEXTURE_2D: const GLenum\tWebGLRenderingContext",
			"TEXTURE_2D"
		],
		[
			"DEPTH_TEST: const GLenum\tWebGLRenderingContext",
			"DEPTH_TEST"
		],
		[
			"ALPHA_BITS: const GLenum\tWebGLRenderingContext",
			"ALPHA_BITS"
		],
		[
			"FLOAT_MAT3: const GLenum\tWebGLRenderingContext",
			"FLOAT_MAT3"
		],
		[
			"isContextLost(): boolean\tWebGLRenderingContext",
			"isContextLost()"
		],
		[
			"FLOAT_MAT4: const GLenum\tWebGLRenderingContext",
			"FLOAT_MAT4"
		],
		[
			"FLOAT_VEC2: const GLenum\tWebGLRenderingContext",
			"FLOAT_VEC2"
		],
		[
			"FLOAT_VEC3: const GLenum\tWebGLRenderingContext",
			"FLOAT_VEC3"
		],
		[
			"HIGH_FLOAT: const GLenum\tWebGLRenderingContext",
			"HIGH_FLOAT"
		],
		[
			"GREEN_BITS: const GLenum\tWebGLRenderingContext",
			"GREEN_BITS"
		],
		[
			"FLOAT_VEC4: const GLenum\tWebGLRenderingContext",
			"FLOAT_VEC4"
		],
		[
			"TEXTURE11: const GLenum\tWebGLRenderingContext",
			"TEXTURE11"
		],
		[
			"TEXTURE29: const GLenum\tWebGLRenderingContext",
			"TEXTURE29"
		],
		[
			"TEXTURE15: const GLenum\tWebGLRenderingContext",
			"TEXTURE15"
		],
		[
			"TEXTURE16: const GLenum\tWebGLRenderingContext",
			"TEXTURE16"
		],
		[
			"TEXTURE30: const GLenum\tWebGLRenderingContext",
			"TEXTURE30"
		],
		[
			"SRC_ALPHA: const GLenum\tWebGLRenderingContext",
			"SRC_ALPHA"
		],
		[
			"LUMINANCE: const GLenum\tWebGLRenderingContext",
			"LUMINANCE"
		],
		[
			"TEXTURE31: const GLenum\tWebGLRenderingContext",
			"TEXTURE31"
		],
		[
			"LOW_FLOAT: const GLenum\tWebGLRenderingContext",
			"LOW_FLOAT"
		],
		[
			"SRC_COLOR: const GLenum\tWebGLRenderingContext",
			"SRC_COLOR"
		],
		[
			"CULL_FACE: const GLenum\tWebGLRenderingContext",
			"CULL_FACE"
		],
		[
			"DECR_WRAP: const GLenum\tWebGLRenderingContext",
			"DECR_WRAP"
		],
		[
			"TEXTURE18: const GLenum\tWebGLRenderingContext",
			"TEXTURE18"
		],
		[
			"TEXTURE19: const GLenum\tWebGLRenderingContext",
			"TEXTURE19"
		],
		[
			"TEXTURE20: const GLenum\tWebGLRenderingContext",
			"TEXTURE20"
		],
		[
			"TEXTURE21: const GLenum\tWebGLRenderingContext",
			"TEXTURE21"
		],
		[
			"LINE_LOOP: const GLenum\tWebGLRenderingContext",
			"LINE_LOOP"
		],
		[
			"TEXTURE22: const GLenum\tWebGLRenderingContext",
			"TEXTURE22"
		],
		[
			"TEXTURE14: const GLenum\tWebGLRenderingContext",
			"TEXTURE14"
		],
		[
			"TEXTURE23: const GLenum\tWebGLRenderingContext",
			"TEXTURE23"
		],
		[
			"TEXTURE13: const GLenum\tWebGLRenderingContext",
			"TEXTURE13"
		],
		[
			"DONT_CARE: const GLenum\tWebGLRenderingContext",
			"DONT_CARE"
		],
		[
			"DST_ALPHA: const GLenum\tWebGLRenderingContext",
			"DST_ALPHA"
		],
		[
			"TRIANGLES: const GLenum\tWebGLRenderingContext",
			"TRIANGLES"
		],
		[
			"DST_COLOR: const GLenum\tWebGLRenderingContext",
			"DST_COLOR"
		],
		[
			"TEXTURE12: const GLenum\tWebGLRenderingContext",
			"TEXTURE12"
		],
		[
			"TEXTURE24: const GLenum\tWebGLRenderingContext",
			"TEXTURE24"
		],
		[
			"BLUE_BITS: const GLenum\tWebGLRenderingContext",
			"BLUE_BITS"
		],
		[
			"BOOL_VEC2: const GLenum\tWebGLRenderingContext",
			"BOOL_VEC2"
		],
		[
			"BOOL_VEC3: const GLenum\tWebGLRenderingContext",
			"BOOL_VEC3"
		],
		[
			"INCR_WRAP: const GLenum\tWebGLRenderingContext",
			"INCR_WRAP"
		],
		[
			"BOOL_VEC4: const GLenum\tWebGLRenderingContext",
			"BOOL_VEC4"
		],
		[
			"TEXTURE17: const GLenum\tWebGLRenderingContext",
			"TEXTURE17"
		],
		[
			"TEXTURE25: const GLenum\tWebGLRenderingContext",
			"TEXTURE25"
		],
		[
			"TEXTURE26: const GLenum\tWebGLRenderingContext",
			"TEXTURE26"
		],
		[
			"TEXTURE27: const GLenum\tWebGLRenderingContext",
			"TEXTURE27"
		],
		[
			"TEXTURE10: const GLenum\tWebGLRenderingContext",
			"TEXTURE10"
		],
		[
			"TEXTURE28: const GLenum\tWebGLRenderingContext",
			"TEXTURE28"
		],
		[
			"INT_VEC4: const GLenum\tWebGLRenderingContext",
			"INT_VEC4"
		],
		[
			"FUNC_ADD: const GLenum\tWebGLRenderingContext",
			"FUNC_ADD"
		],
		[
			"RENDERER: const GLenum\tWebGLRenderingContext",
			"RENDERER"
		],
		[
			"RED_BITS: const GLenum\tWebGLRenderingContext",
			"RED_BITS"
		],
		[
			"TEXTURE2: const GLenum\tWebGLRenderingContext",
			"TEXTURE2"
		],
		[
			"HIGH_INT: const GLenum\tWebGLRenderingContext",
			"HIGH_INT"
		],
		[
			"NOTEQUAL: const GLenum\tWebGLRenderingContext",
			"NOTEQUAL"
		],
		[
			"NO_ERROR: const GLenum\tWebGLRenderingContext",
			"NO_ERROR"
		],
		[
			"INT_VEC2: const GLenum\tWebGLRenderingContext",
			"INT_VEC2"
		],
		[
			"INT_VEC3: const GLenum\tWebGLRenderingContext",
			"INT_VEC3"
		],
		[
			"TEXTURE1: const GLenum\tWebGLRenderingContext",
			"TEXTURE1"
		],
		[
			"VIEWPORT: const GLenum\tWebGLRenderingContext",
			"VIEWPORT"
		],
		[
			"TEXTURE3: const GLenum\tWebGLRenderingContext",
			"TEXTURE3"
		],
		[
			"TEXTURE4: const GLenum\tWebGLRenderingContext",
			"TEXTURE4"
		],
		[
			"TEXTURE5: const GLenum\tWebGLRenderingContext",
			"TEXTURE5"
		],
		[
			"TEXTURE0: const GLenum\tWebGLRenderingContext",
			"TEXTURE0"
		],
		[
			"TEXTURE6: const GLenum\tWebGLRenderingContext",
			"TEXTURE6"
		],
		[
			"TEXTURE9: const GLenum\tWebGLRenderingContext",
			"TEXTURE9"
		],
		[
			"TEXTURE8: const GLenum\tWebGLRenderingContext",
			"TEXTURE8"
		],
		[
			"TEXTURE7: const GLenum\tWebGLRenderingContext",
			"TEXTURE7"
		],
		[
			"LOW_INT: const GLenum\tWebGLRenderingContext",
			"LOW_INT"
		],
		[
			"NEAREST: const GLenum\tWebGLRenderingContext",
			"NEAREST"
		],
		[
			"FASTEST: const GLenum\tWebGLRenderingContext",
			"FASTEST"
		],
		[
			"SAMPLES: const GLenum\tWebGLRenderingContext",
			"SAMPLES"
		],
		[
			"VERSION: const GLenum\tWebGLRenderingContext",
			"VERSION"
		],
		[
			"REPLACE: const GLenum\tWebGLRenderingContext",
			"REPLACE"
		],
		[
			"TEXTURE: const GLenum\tWebGLRenderingContext",
			"TEXTURE"
		],
		[
			"RGB5_A1: const GLenum\tWebGLRenderingContext",
			"RGB5_A1"
		],
		[
			"GREATER: const GLenum\tWebGLRenderingContext",
			"GREATER"
		],
		[
			"POINTS: const GLenum\tWebGLRenderingContext",
			"POINTS"
		],
		[
			"LINEAR: const GLenum\tWebGLRenderingContext",
			"LINEAR"
		],
		[
			"GEQUAL: const GLenum\tWebGLRenderingContext",
			"GEQUAL"
		],
		[
			"LEQUAL: const GLenum\tWebGLRenderingContext",
			"LEQUAL"
		],
		[
			"DITHER: const GLenum\tWebGLRenderingContext",
			"DITHER"
		],
		[
			"ALWAYS: const GLenum\tWebGLRenderingContext",
			"ALWAYS"
		],
		[
			"INVERT: const GLenum\tWebGLRenderingContext",
			"INVERT"
		],
		[
			"REPEAT: const GLenum\tWebGLRenderingContext",
			"REPEAT"
		],
		[
			"RGB565: const GLenum\tWebGLRenderingContext",
			"RGB565"
		],
		[
			"NICEST: const GLenum\tWebGLRenderingContext",
			"NICEST"
		],
		[
			"VENDOR: const GLenum\tWebGLRenderingContext",
			"VENDOR"
		],
		[
			"ALPHA: const GLenum\tWebGLRenderingContext",
			"ALPHA"
		],
		[
			"BLEND: const GLenum\tWebGLRenderingContext",
			"BLEND"
		],
		[
			"EQUAL: const GLenum\tWebGLRenderingContext",
			"EQUAL"
		],
		[
			"LINES: const GLenum\tWebGLRenderingContext",
			"LINES"
		],
		[
			"RGBA4: const GLenum\tWebGLRenderingContext",
			"RGBA4"
		],
		[
			"FLOAT: const GLenum\tWebGLRenderingContext",
			"FLOAT"
		],
		[
			"NEVER: const GLenum\tWebGLRenderingContext",
			"NEVER"
		],
		[
			"SHORT: const GLenum\tWebGLRenderingContext",
			"SHORT"
		],
		[
			"FRONT: const GLenum\tWebGLRenderingContext",
			"FRONT"
		],
		[
			"BYTE: const GLenum\tWebGLRenderingContext",
			"BYTE"
		],
		[
			"ZERO: const GLenum\tWebGLRenderingContext",
			"ZERO"
		],
		[
			"getError(): GLenum\tWebGLRenderingContext",
			"getError()"
		],
		[
			"RGBA: const GLenum\tWebGLRenderingContext",
			"RGBA"
		],
		[
			"INCR: const GLenum\tWebGLRenderingContext",
			"INCR"
		],
		[
			"NONE: const GLenum\tWebGLRenderingContext",
			"NONE"
		],
		[
			"BOOL: const GLenum\tWebGLRenderingContext",
			"BOOL"
		],
		[
			"BACK: const GLenum\tWebGLRenderingContext",
			"BACK"
		],
		[
			"KEEP: const GLenum\tWebGLRenderingContext",
			"KEEP"
		],
		[
			"LESS: const GLenum\tWebGLRenderingContext",
			"LESS"
		],
		[
			"DECR: const GLenum\tWebGLRenderingContext",
			"DECR"
		],
		[
			"CCW: const GLenum\tWebGLRenderingContext",
			"CCW"
		],
		[
			"ONE: const GLenum\tWebGLRenderingContext",
			"ONE"
		],
		[
			"INT: const GLenum\tWebGLRenderingContext",
			"INT"
		],
		[
			"RGB: const GLenum\tWebGLRenderingContext",
			"RGB"
		],
		[
			"CW: const GLenum\tWebGLRenderingContext",
			"CW"
		],
		[
			"finish(): void\tWebGLRenderingContext",
			"finish()"
		],
		[
			"flush(): void\tWebGLRenderingContext",
			"flush()"
		]
	]
}